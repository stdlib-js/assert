{"version":3,"file":"index.mjs","sources":["../is-collection/lib/main.js","../is-collection/lib/index.js","../is-number/lib/primitive.js","../has-symbol-support/lib/main.js","../has-symbol-support/lib/index.js","../has-tostringtag-support/lib/main.js","../has-tostringtag-support/lib/index.js","../is-number/lib/try2serialize.js","../is-number/lib/tostring.js","../is-number/lib/object.js","../is-number/lib/main.js","../is-number/lib/index.js","../is-integer/lib/integer.js","../is-integer/lib/primitive.js","../is-integer/lib/object.js","../is-integer/lib/main.js","../is-integer/lib/index.js","../is-string/lib/primitive.js","../is-string/lib/try2valueof.js","../is-string/lib/valueof.js","../is-string/lib/object.js","../is-string/lib/main.js","../is-string/lib/index.js","../is-nan/lib/primitive.js","../is-nan/lib/object.js","../is-nan/lib/main.js","../is-nan/lib/index.js","../contains/lib/contains.js","../contains/lib/index.js","../is-date-object/lib/try2getday.js","../is-date-object/lib/getday.js","../is-date-object/lib/main.js","../is-date-object/lib/index.js","../is-error/lib/main.js","../is-error/lib/index.js","../is-array/lib/main.js","../is-array/lib/index.js","../tools/array-function/lib/arrayfcn.js","../tools/array-function/lib/index.js","../is-object-like/lib/main.js","../is-object-like/lib/index.js","../is-buffer/lib/main.js","../is-buffer/lib/index.js","../is-regexp/lib/try2exec.js","../is-regexp/lib/exec.js","../is-regexp/lib/main.js","../is-regexp/lib/index.js","../deep-equal/lib/main.js","../deep-equal/lib/index.js","../is-object/lib/main.js","../is-object/lib/index.js","../is-function/lib/main.js","../is-function/lib/index.js","../has-own-property/lib/main.js","../has-own-property/lib/index.js","../is-plain-object/lib/main.js","../is-plain-object/lib/index.js","../deep-has-own-property/lib/validate.js","../deep-has-own-property/lib/has.js","../deep-has-own-property/lib/main.js","../deep-has-own-property/lib/factory.js","../deep-has-own-property/lib/index.js","../deep-has-property/lib/validate.js","../has-property/lib/main.js","../has-property/lib/index.js","../deep-has-property/lib/has.js","../deep-has-property/lib/main.js","../deep-has-property/lib/factory.js","../deep-has-property/lib/index.js","../is-arraybuffer/lib/main.js","../is-arraybuffer/lib/index.js","../has-arraybuffer-support/lib/arraybuffer.js","../has-arraybuffer-support/lib/main.js","../has-arraybuffer-support/lib/index.js","../has-arrow-function-support/lib/main.js","../has-arrow-function-support/lib/index.js","../has-async-await-support/lib/main.js","../has-async-await-support/lib/index.js","../has-async-iterator-symbol-support/lib/main.js","../has-async-iterator-symbol-support/lib/index.js","../has-bigint-support/lib/main.js","../has-bigint-support/lib/index.js","../is-bigint64array/lib/main.js","../is-bigint64array/lib/index.js","../is-bigint/lib/primitive.js","../is-bigint/lib/try2valueof.js","../is-bigint/lib/object.js","../is-bigint/lib/generic.js","../is-bigint/lib/main.js","../is-bigint/lib/polyfill.js","../is-bigint/lib/index.js","../has-bigint64array-support/lib/bigint64array.js","../has-bigint64array-support/lib/main.js","../has-bigint64array-support/lib/index.js","../is-biguint64array/lib/main.js","../is-biguint64array/lib/index.js","../has-biguint64array-support/lib/biguint64array.js","../has-biguint64array-support/lib/main.js","../has-biguint64array-support/lib/index.js","../has-class-support/lib/main.js","../has-class-support/lib/index.js","../is-dataview/lib/main.js","../is-dataview/lib/index.js","../has-dataview-support/lib/dataview.js","../has-dataview-support/lib/main.js","../has-dataview-support/lib/index.js","../has-define-properties-support/lib/main.js","../has-define-properties-support/lib/define_properties.js","../has-define-properties-support/lib/index.js","../has-define-property-support/lib/main.js","../has-define-property-support/lib/define_property.js","../has-define-property-support/lib/index.js","../is-float32array/lib/main.js","../is-float32array/lib/index.js","../has-float32array-support/lib/float32array.js","../has-float32array-support/lib/main.js","../has-float32array-support/lib/index.js","../is-float64array/lib/main.js","../is-float64array/lib/index.js","../has-float64array-support/lib/float64array.js","../has-float64array-support/lib/main.js","../has-float64array-support/lib/index.js","../has-function-name-support/lib/foo.js","../has-function-name-support/lib/main.js","../has-function-name-support/lib/index.js","../has-generator-support/lib/main.js","../has-generator-support/lib/index.js","../has-globalthis-support/lib/main.js","../has-globalthis-support/lib/index.js","../is-int8array/lib/main.js","../is-int8array/lib/index.js","../has-int8array-support/lib/int8array.js","../has-int8array-support/lib/main.js","../has-int8array-support/lib/index.js","../is-int16array/lib/main.js","../is-int16array/lib/index.js","../has-int16array-support/lib/int16array.js","../has-int16array-support/lib/main.js","../has-int16array-support/lib/index.js","../is-int32array/lib/main.js","../is-int32array/lib/index.js","../has-int32array-support/lib/int32array.js","../has-int32array-support/lib/main.js","../has-int32array-support/lib/index.js","../has-iterator-symbol-support/lib/main.js","../has-iterator-symbol-support/lib/index.js","../has-map-support/lib/main.js","../has-map-support/lib/map.js","../has-map-support/lib/index.js","../has-node-buffer-support/lib/buffer.js","../has-node-buffer-support/lib/main.js","../has-node-buffer-support/lib/index.js","../has-proxy-support/lib/main.js","../has-proxy-support/lib/index.js","../has-set-support/lib/main.js","../has-set-support/lib/set.js","../has-set-support/lib/index.js","../is-sharedarraybuffer/lib/main.js","../is-sharedarraybuffer/lib/index.js","../has-sharedarraybuffer-support/lib/sharedarraybuffer.js","../has-sharedarraybuffer-support/lib/main.js","../has-sharedarraybuffer-support/lib/index.js","../is-uint8array/lib/main.js","../is-uint8array/lib/index.js","../has-uint8array-support/lib/uint8array.js","../has-uint8array-support/lib/main.js","../has-uint8array-support/lib/index.js","../is-uint8clampedarray/lib/main.js","../is-uint8clampedarray/lib/index.js","../has-uint8clampedarray-support/lib/uint8clampedarray.js","../has-uint8clampedarray-support/lib/main.js","../has-uint8clampedarray-support/lib/index.js","../is-uint16array/lib/main.js","../is-uint16array/lib/index.js","../has-uint16array-support/lib/uint16array.js","../has-uint16array-support/lib/main.js","../has-uint16array-support/lib/index.js","../is-uint32array/lib/main.js","../is-uint32array/lib/index.js","../has-uint32array-support/lib/uint32array.js","../has-uint32array-support/lib/main.js","../has-uint32array-support/lib/index.js","../is-nonnegative-integer/lib/primitive.js","../is-nonnegative-integer/lib/object.js","../is-nonnegative-integer/lib/main.js","../is-nonnegative-integer/lib/index.js","../has-utf16-surrogate-pair-at/lib/main.js","../has-utf16-surrogate-pair-at/lib/index.js","../has-wasm-support/lib/main.js","../has-wasm-support/lib/index.js","../has-weakmap-support/lib/main.js","../has-weakmap-support/lib/weakmap.js","../has-weakmap-support/lib/index.js","../has-weakset-support/lib/main.js","../has-weakset-support/lib/weakset.js","../has-weakset-support/lib/index.js","../instance-of/lib/main.js","../instance-of/lib/index.js","../is-uri/lib/main.js","../is-uri/lib/index.js","../is-absolute-http-uri/lib/main.js","../is-absolute-http-uri/lib/index.js","../is-windows/lib/index.js","../is-absolute-path/lib/posix.js","../is-absolute-path/lib/win32.js","../is-absolute-path/lib/index.js","../is-absolute-uri/lib/main.js","../is-absolute-uri/lib/index.js","../is-accessor-property/lib/main.js","../is-accessor-property/lib/index.js","../is-accessor-property-in/lib/main.js","../is-accessor-property-in/lib/index.js","../is-alphagram/lib/main.js","../is-alphagram/lib/index.js","../is-alphanumeric/lib/main.js","../is-alphanumeric/lib/index.js","../is-anagram/lib/main.js","../is-anagram/lib/index.js","../is-arguments/lib/main.js","../is-arguments/lib/detect.js","../is-enumerable-property/lib/has_string_enumerability_bug.js","../is-enumerable-property/lib/native.js","../is-enumerable-property/lib/main.js","../is-enumerable-property/lib/index.js","../is-arguments/lib/polyfill.js","../is-arguments/lib/index.js","../is-array-array/lib/index.js","../is-array-array/lib/main.js","../is-array-length/lib/main.js","../is-array-length/lib/index.js","../is-array-like/lib/main.js","../is-array-like/lib/index.js","../is-array-like-object/lib/main.js","../is-array-like-object/lib/index.js","../is-arraybuffer-view/lib/no_arraybuffer.js","../is-typed-array/lib/main.js","../is-typed-array/lib/ctors.js","../is-typed-array/lib/index.js","../is-arraybuffer-view/lib/polyfill.js","../is-arraybuffer-view/lib/main.js","../is-arraybuffer-view/lib/index.js","../is-arrow-function/lib/main.js","../is-arrow-function/lib/index.js","../is-ascii/lib/main.js","../is-ascii/lib/index.js","../is-between/lib/main.js","../is-between/lib/index.js","../is-between-array/lib/main.js","../is-big-endian/lib/main.js","../is-between-array/lib/index.js","../is-big-endian/lib/ctors.js","../is-big-endian/lib/index.js","../is-binary-string/lib/main.js","../is-binary-string/lib/index.js","../is-blank-string/lib/main.js","../is-blank-string/lib/index.js","../is-boolean/lib/primitive.js","../is-boolean/lib/try2serialize.js","../is-boolean/lib/tostring.js","../is-boolean/lib/object.js","../is-boolean/lib/main.js","../is-boolean/lib/index.js","../tools/array-like-function/lib/arraylikefcn.js","../tools/array-like-function/lib/index.js","../is-boolean-array/lib/index.js","../is-symbol/lib/primitive.js","../is-symbol/lib/tostring.js","../is-symbol/lib/try2tostring.js","../is-symbol/lib/object.js","../is-symbol/lib/generic.js","../is-symbol/lib/main.js","../is-symbol/lib/polyfill.js","../is-symbol/lib/index.js","../is-boxed-primitive/lib/main.js","../is-boxed-primitive/lib/index.js","../is-node/lib/main.js","../is-browser/lib/global_scope.js","../is-node/lib/index.js","../is-browser/lib/main.js","../is-browser/lib/index.js","../is-capitalized/lib/main.js","../is-capitalized/lib/index.js","../is-ndarray-like/lib/main.js","../is-ndarray-like/lib/index.js","../is-matrix-like/lib/main.js","../is-matrix-like/lib/index.js","../is-square-matrix/lib/main.js","../is-square-matrix/lib/index.js","../is-centrosymmetric-matrix/lib/main.js","../is-centrosymmetric-matrix/lib/index.js","../is-circular/lib/main.js","../is-circular/lib/index.js","../is-circular-array/lib/main.js","../is-circular-array/lib/index.js","../is-circular-plain-object/lib/main.js","../is-circular-plain-object/lib/index.js","../is-class/lib/main.js","../is-class/lib/index.js","../is-complex/lib/main.js","../is-complex/lib/index.js","../is-complex-like/lib/main.js","../is-complex-like/lib/index.js","../is-complex-typed-array/lib/main.js","../is-complex-typed-array/lib/ctors.js","../is-complex-typed-array/lib/index.js","../is-complex-typed-array-like/lib/main.js","../is-complex-typed-array-like/lib/index.js","../is-complex64/lib/main.js","../is-complex64/lib/index.js","../is-complex64array/lib/main.js","../is-complex64array/lib/index.js","../is-complex128/lib/main.js","../is-complex128/lib/index.js","../is-complex128array/lib/main.js","../is-complex128array/lib/index.js","../is-composite/lib/primitive.js","../is-composite/lib/object.js","../is-composite/lib/main.js","../is-composite/lib/index.js","../is-configurable-property/lib/main.js","../is-configurable-property/lib/index.js","../is-configurable-property-in/lib/main.js","../is-configurable-property-in/lib/index.js","../is-cube-number/lib/primitive.js","../is-cube-number/lib/object.js","../is-cube-number/lib/main.js","../is-cube-number/lib/index.js","../is-darwin/lib/index.js","../is-data-property/lib/main.js","../is-data-property/lib/index.js","../is-data-property-in/lib/main.js","../is-data-property-in/lib/index.js","../is-digit-string/lib/main.js","../is-digit-string/lib/index.js","../is-docker/lib/main.js","../is-docker/lib/index.js","../is-electron/lib/process.js","../is-electron/lib/main.js","../is-electron/lib/index.js","../is-electron-main/lib/process.js","../is-electron-main/lib/main.js","../is-electron-main/lib/index.js","../is-electron-renderer/lib/process.js","../is-electron-renderer/lib/main.js","../is-electron-renderer/lib/index.js","../is-email-address/lib/main.js","../is-email-address/lib/index.js","../is-empty-array/lib/main.js","../is-empty-array/lib/index.js","../is-empty-array-like-object/lib/main.js","../is-empty-array-like-object/lib/index.js","../is-empty-collection/lib/main.js","../is-empty-collection/lib/index.js","../is-empty-object/lib/main.js","../is-empty-object/lib/index.js","../is-empty-string/lib/primitive.js","../is-empty-string/lib/object.js","../is-empty-string/lib/main.js","../is-empty-string/lib/index.js","../is-enumerable-property-in/lib/main.js","../is-enumerable-property-in/lib/index.js","../is-eval-error/lib/main.js","../is-eval-error/lib/index.js","../is-even/lib/primitive.js","../is-even/lib/object.js","../is-even/lib/main.js","../is-even/lib/index.js","../is-falsy/lib/main.js","../is-falsy/lib/index.js","../is-falsy-array/lib/index.js","../is-finite/lib/primitive.js","../is-finite/lib/object.js","../is-finite/lib/main.js","../is-finite/lib/index.js","../is-finite-array/lib/index.js","../is-float32matrix-like/lib/main.js","../is-float32matrix-like/lib/index.js","../is-float32ndarray-like/lib/main.js","../is-float32ndarray-like/lib/index.js","../is-vector-like/lib/main.js","../is-vector-like/lib/index.js","../is-float32vector-like/lib/main.js","../is-float32vector-like/lib/index.js","../is-float64matrix-like/lib/main.js","../is-float64matrix-like/lib/index.js","../is-float64ndarray-like/lib/main.js","../is-float64ndarray-like/lib/index.js","../is-float64vector-like/lib/main.js","../is-float64vector-like/lib/index.js","../is-function-array/lib/index.js","../is-generator-object/lib/main.js","../is-generator-object/lib/index.js","../is-generator-object-like/lib/main.js","../is-generator-object-like/lib/index.js","../is-gzip-buffer/lib/main.js","../is-gzip-buffer/lib/index.js","../is-hex-string/lib/main.js","../is-hex-string/lib/index.js","../is-infinite/lib/primitive.js","../is-infinite/lib/object.js","../is-infinite/lib/main.js","../is-infinite/lib/index.js","../is-inherited-property/lib/main.js","../is-inherited-property/lib/index.js","../is-integer-array/lib/index.js","../is-primitive/lib/main.js","../is-primitive/lib/index.js","../is-iterator-like/lib/main.js","../is-iterator-like/lib/index.js","../is-iterable-like/lib/main.js","../is-iterable-like/lib/index.js","../is-json/lib/main.js","../is-json/lib/index.js","../is-leap-year/lib/main.js","../is-little-endian/lib/main.js","../is-leap-year/lib/index.js","../is-little-endian/lib/ctors.js","../is-little-endian/lib/index.js","../is-localhost/lib/main.js","../is-localhost/lib/index.js","../is-lowercase/lib/main.js","../is-lowercase/lib/index.js","../is-method/lib/main.js","../is-method/lib/index.js","../is-method-in/lib/main.js","../is-method-in/lib/index.js","../is-mobile/lib/index.js","../is-mobile/lib/main.js","../is-named-typed-tuple-like/lib/main.js","../is-named-typed-tuple-like/lib/index.js","../is-nan-array/lib/index.js","../is-native-function/lib/main.js","../is-native-function/lib/index.js","../is-negative-integer/lib/primitive.js","../is-negative-integer/lib/object.js","../is-negative-integer/lib/main.js","../is-negative-integer/lib/index.js","../is-negative-integer-array/lib/index.js","../is-negative-number/lib/primitive.js","../is-negative-number/lib/object.js","../is-negative-number/lib/main.js","../is-negative-number/lib/index.js","../is-negative-number-array/lib/index.js","../is-negative-zero/lib/primitive.js","../is-negative-zero/lib/object.js","../is-negative-zero/lib/main.js","../is-negative-zero/lib/index.js","../is-node-builtin/lib/main.js","../is-node-builtin/lib/index.js","../is-node-stream-like/lib/main.js","../is-node-stream-like/lib/index.js","../is-node-writable-stream-like/lib/main.js","../is-node-writable-stream-like/lib/index.js","../is-node-readable-stream-like/lib/main.js","../is-node-readable-stream-like/lib/index.js","../is-node-duplex-stream-like/lib/main.js","../is-node-duplex-stream-like/lib/index.js","../is-node-repl/lib/parent.js","../is-node-repl/lib/stacktrace.js","../is-node-repl/lib/main.js","../is-node-repl/lib/index.js","../is-node-transform-stream-like/lib/main.js","../is-node-transform-stream-like/lib/index.js","../is-nonconfigurable-property/lib/main.js","../is-nonconfigurable-property/lib/index.js","../is-nonconfigurable-property-in/lib/main.js","../is-nonconfigurable-property-in/lib/index.js","../is-nonenumerable-property/lib/main.js","../is-nonenumerable-property/lib/index.js","../is-nonenumerable-property-in/lib/main.js","../is-nonenumerable-property-in/lib/index.js","../is-nonnegative-integer-array/lib/index.js","../is-nonnegative-number/lib/primitive.js","../is-nonnegative-number/lib/object.js","../is-nonnegative-number/lib/main.js","../is-nonnegative-number/lib/index.js","../is-nonnegative-number-array/lib/index.js","../is-nonpositive-integer/lib/primitive.js","../is-nonpositive-integer/lib/object.js","../is-nonpositive-integer/lib/main.js","../is-nonpositive-integer/lib/index.js","../is-nonpositive-integer-array/lib/index.js","../is-nonpositive-number/lib/primitive.js","../is-nonpositive-number/lib/object.js","../is-nonpositive-number/lib/main.js","../is-nonpositive-number/lib/index.js","../is-nonpositive-number-array/lib/index.js","../is-nonsymmetric-matrix/lib/main.js","../is-nonsymmetric-matrix/lib/index.js","../is-null/lib/main.js","../is-null/lib/index.js","../is-null-array/lib/index.js","../is-null-array/lib/main.js","../is-number-array/lib/index.js","../is-numeric-array/lib/main.js","../is-numeric-array/lib/index.js","../is-object-array/lib/index.js","../is-object-array/lib/main.js","../is-odd/lib/primitive.js","../is-odd/lib/object.js","../is-odd/lib/main.js","../is-odd/lib/index.js","../is-persymmetric-matrix/lib/main.js","../is-persymmetric-matrix/lib/index.js","../is-plain-object-array/lib/index.js","../is-plain-object-array/lib/main.js","../is-positive-integer/lib/primitive.js","../is-positive-integer/lib/object.js","../is-positive-integer/lib/main.js","../is-positive-integer/lib/index.js","../is-positive-integer-array/lib/index.js","../is-positive-number/lib/primitive.js","../is-positive-number/lib/object.js","../is-positive-number/lib/main.js","../is-positive-number/lib/index.js","../is-positive-number-array/lib/index.js","../is-positive-zero/lib/primitive.js","../is-positive-zero/lib/object.js","../is-positive-zero/lib/main.js","../is-positive-zero/lib/index.js","../is-prime/lib/primitive.js","../is-prime/lib/object.js","../is-prime/lib/main.js","../is-prime/lib/index.js","../is-primitive-array/lib/index.js","../is-primitive-array/lib/main.js","../is-prng-like/lib/main.js","../is-prng-like/lib/index.js","../is-probability/lib/primitive.js","../is-probability/lib/object.js","../is-probability/lib/main.js","../is-probability/lib/index.js","../is-probability-array/lib/index.js","../is-property-key/lib/main.js","../is-property-key/lib/index.js","../is-prototype-of/lib/main.js","../is-prototype-of/lib/index.js","../is-range-error/lib/main.js","../is-range-error/lib/index.js","../is-read-only-property/lib/main.js","../is-read-only-property/lib/index.js","../is-read-only-property-in/lib/main.js","../is-read-only-property-in/lib/index.js","../is-read-write-property/lib/main.js","../is-read-write-property/lib/index.js","../is-read-write-property-in/lib/main.js","../is-read-write-property-in/lib/index.js","../is-readable-property/lib/main.js","../is-readable-property/lib/index.js","../is-readable-property-in/lib/main.js","../is-readable-property-in/lib/index.js","../is-reference-error/lib/main.js","../is-reference-error/lib/index.js","../is-regexp-string/lib/main.js","../is-regexp-string/lib/index.js","../is-relative-path/lib/posix.js","../is-relative-path/lib/win32.js","../is-relative-path/lib/index.js","../is-relative-uri/lib/main.js","../is-relative-uri/lib/index.js","../is-safe-integer/lib/primitive.js","../is-safe-integer/lib/object.js","../is-safe-integer/lib/main.js","../is-safe-integer/lib/index.js","../is-safe-integer-array/lib/index.js","../is-same-native-class/lib/main.js","../is-same-native-class/lib/index.js","../is-same-type/lib/main.js","../is-same-type/lib/index.js","../is-same-value/lib/main.js","../is-same-value/lib/index.js","../is-same-value-zero/lib/main.js","../is-same-value-zero/lib/index.js","../is-skew-centrosymmetric-matrix/lib/main.js","../is-skew-centrosymmetric-matrix/lib/index.js","../is-skew-persymmetric-matrix/lib/main.js","../is-skew-persymmetric-matrix/lib/index.js","../is-skew-symmetric-matrix/lib/main.js","../is-skew-symmetric-matrix/lib/index.js","../is-square-number/lib/primitive.js","../is-square-number/lib/object.js","../is-square-number/lib/main.js","../is-square-number/lib/index.js","../is-square-triangular-number/lib/primitive.js","../is-square-triangular-number/lib/object.js","../is-square-triangular-number/lib/main.js","../is-square-triangular-number/lib/index.js","../is-strict-equal/lib/main.js","../is-strict-equal/lib/index.js","../is-string-array/lib/index.js","../is-symbol-array/lib/index.js","../is-symmetric-matrix/lib/main.js","../is-symmetric-matrix/lib/index.js","../is-syntax-error/lib/main.js","../is-syntax-error/lib/index.js","../is-touch-device/lib/index.js","../is-touch-device/lib/main.js","../is-triangular-number/lib/primitive.js","../is-triangular-number/lib/object.js","../is-triangular-number/lib/main.js","../is-triangular-number/lib/index.js","../is-truthy/lib/main.js","../is-truthy/lib/index.js","../is-truthy-array/lib/index.js","../is-truthy-array/lib/main.js","../is-type-error/lib/main.js","../is-type-error/lib/index.js","../is-typed-array-length/lib/main.js","../is-typed-array-length/lib/index.js","../is-typed-array-like/lib/main.js","../is-typed-array-like/lib/index.js","../is-unc-path/lib/main.js","../is-unc-path/lib/index.js","../is-undefined/lib/main.js","../is-undefined/lib/index.js","../is-undefined-or-null/lib/main.js","../is-undefined-or-null/lib/index.js","../is-unity-probability-array/lib/main.js","../is-unity-probability-array/lib/index.js","../is-uppercase/lib/main.js","../is-uppercase/lib/index.js","../is-uri-error/lib/main.js","../is-web-worker/lib/global_scope.js","../is-uri-error/lib/index.js","../is-web-worker/lib/main.js","../is-web-worker/lib/index.js","../is-whitespace/lib/main.js","../is-whitespace/lib/index.js","../is-writable-property/lib/main.js","../is-writable-property/lib/index.js","../is-writable-property-in/lib/main.js","../is-writable-property-in/lib/index.js","../is-write-only-property/lib/main.js","../is-write-only-property/lib/index.js","../is-write-only-property-in/lib/main.js","../is-write-only-property-in/lib/index.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/array/max-typed-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a collection.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a collection\n*\n* @example\n* var bool = isCollection( [] );\n* // returns true\n*\n* @example\n* var bool = isCollection( {} );\n* // returns false\n*/\nfunction isCollection( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a collection.\n*\n* @module @stdlib/assert/is-collection\n*\n* @example\n* var isCollection = require( '@stdlib/assert/is-collection' );\n*\n* var bool = isCollection( [] );\n* // returns true\n*\n* bool = isCollection( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isCollection = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests for native `Symbol` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol` support\n*\n* @example\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Symbol` support.\n*\n* @module @stdlib/assert/has-symbol-support\n*\n* @example\n* var hasSymbolSupport = require( '@stdlib/assert/has-symbol-support' );\n*\n* var bool = hasSymbolSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasSymbolSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasSymbols = require( './../../has-symbol-support' );\n\n\n// VARIABLES //\n\nvar FLG = hasSymbols();\n\n\n// MAIN //\n\n/**\n* Tests for native `toStringTag` support.\n*\n* @returns {boolean} boolean indicating if an environment has `toStringTag` support\n*\n* @example\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\nfunction hasToStringTagSupport() {\n\treturn ( FLG && typeof Symbol.toStringTag === 'symbol' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `toStringTag` support.\n*\n* @module @stdlib/assert/has-tostringtag-support\n*\n* @example\n* var hasToStringTagSupport = require( '@stdlib/assert/has-tostringtag-support' );\n*\n* var bool = hasToStringTagSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasToStringTagSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasToStringTagSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Number = require( '@stdlib/number/ctor' );\n\n\n// MAIN //\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Number.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar Number = require( '@stdlib/number/ctor' );\nvar test = require( './try2serialize.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\nfunction isNumber( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Number ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Number]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a number\n*\n* @example\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* @example\n* var bool = isNumber( NaN );\n* // returns true\n*\n* @example\n* var bool = isNumber( null );\n* // returns false\n*/\nfunction isNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a number.\n*\n* @module @stdlib/assert/is-number\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' );\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( null );\n* // returns false\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' ).isPrimitive;\n*\n* var bool = isNumber( 3.14 );\n* // returns true\n*\n* bool = isNumber( NaN );\n* // returns true\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns false\n*\n* @example\n* var isNumber = require( '@stdlib/assert/is-number' ).isObject;\n*\n* var bool = isNumber( 3.14 );\n* // returns false\n*\n* bool = isNumber( new Number( 3.14 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar NINF = require( '@stdlib/constants/float64/ninf' );\nvar isInt = require( '@stdlib/math/base/assert/is-integer' );\n\n\n// MAIN //\n\n/**\n* Tests if a number primitive is an integer value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a number primitive is an integer value\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tvalue < PINF &&\n\t\tvalue > NINF &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar isInt = require( './integer.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having an integer value\n*\n* @example\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar isInt = require( './integer.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having an integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having an integer value\n*\n* @example\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisInt( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an integer\n*\n* @example\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isInteger( null );\n* // returns false\n*/\nfunction isInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an integer.\n*\n* @module @stdlib/assert/is-integer\n*\n* @example\n* var isInteger = require( '@stdlib/assert/is-integer' );\n*\n* var bool = isInteger( 5.0 );\n* // returns true\n*\n* bool = isInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isInteger( -3.14 );\n* // returns false\n*\n* bool = isInteger( null );\n* // returns false\n*\n* @example\n* // Use interface to check for integer primitives...\n* var isInteger = require( '@stdlib/assert/is-integer' ).isPrimitive;\n*\n* var bool = isInteger( -3.0 );\n* // returns true\n*\n* bool = isInteger( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* // Use interface to check for integer objects...\n* var isInteger = require( '@stdlib/assert/is-integer' ).isObject;\n*\n* var bool = isInteger( 3.0 );\n* // returns false\n*\n* bool = isInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string primitive\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns false\n*/\nfunction isString( value ) {\n\treturn ( typeof value === 'string' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar valueOf = require( './valueof.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to extract a string value.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a string can be extracted\n*/\nfunction test( value ) {\n\ttry {\n\t\tvalueOf.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar valueOf = String.prototype.valueOf; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = valueOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2valueof.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a string object\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns false\n*/\nfunction isString( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof String ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object String]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a string\n*\n* @example\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isString( 'beep' );\n* // returns true\n*/\nfunction isString( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a string.\n*\n* @module @stdlib/assert/is-string\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' );\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 5 );\n* // returns false\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' ).isObject;\n*\n* var bool = isString( new String( 'beep' ) );\n* // returns true\n*\n* bool = isString( 'beep' );\n* // returns false\n*\n* @example\n* var isString = require( '@stdlib/assert/is-string' ).isPrimitive;\n*\n* var bool = isString( 'beep' );\n* // returns true\n*\n* bool = isString( new String( 'beep' ) );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isString = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isString, 'isPrimitive', isPrimitive );\nsetReadOnly( isString, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar isNan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `NaN` number primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `NaN` number primitive\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar isNan = require( '@stdlib/math/base/assert/is-nan' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value of `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value of `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns false\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*/\nfunction isnan( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisNan( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is `NaN`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* @example\n* var bool = isnan( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isnan( null );\n* // returns false\n*/\nfunction isnan( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is `NaN`.\n*\n* @module @stdlib/assert/is-nan\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' );\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( null );\n* // returns false\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' ).isPrimitive;\n*\n* var bool = isnan( NaN );\n* // returns true\n*\n* bool = isnan( 3.14 );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns false\n*\n* @example\n* var isnan = require( '@stdlib/assert/is-nan' ).isObject;\n*\n* var bool = isnan( NaN );\n* // returns false\n*\n* bool = isnan( new Number( NaN ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isnan = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isnan, 'isPrimitive', isPrimitive );\nsetReadOnly( isnan, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( './../../is-collection' );\nvar isInteger = require( './../../is-integer' ).isPrimitive;\nvar isString = require( './../../is-string' ).isPrimitive;\nvar isnan = require( './../../is-nan' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests if an array-like value contains a search value.\n*\n* @param {(Collection|string)} val - input value\n* @param {*} searchValue - search value\n* @param {integer} [position=0] - position at which to start searching for `searchValue`\n* @throws {TypeError} first argument must be array-like\n* @throws {Error} must provide a search value\n* @throws {TypeError} second argument must be a string when the first argument is a string\n* @throws {TypeError} third argument must be an integer\n* @returns {boolean} boolean indicating whether one value contains another\n*\n* @example\n* var bool = contains( 'last man standing', 'stand' );\n* // returns true\n*\n* @example\n* var bool = contains( [ 1, 2, 3, 4 ], 2 );\n* // returns true\n*\n* @example\n* var bool = contains( 'presidential election', 'president' );\n* // returns true\n*\n* @example\n* var bool = contains( [ NaN, 2, 3, 4 ], NaN );\n* // returns true\n*\n* @example\n* var bool = contains( 'javaScript', 'js' );\n* // returns false\n*\n* @example\n* var bool = contains( [ 1, 2, 3, {} ], {} );\n* // returns false\n*\n* @example\n* var bool = contains( 'Hidden Treasures', '' );\n* // returns true\n*/\nfunction contains( val, searchValue, position ) {\n\tvar len;\n\tvar pos;\n\tvar i;\n\tif ( !isCollection( val ) && !isString( val ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be array-like. Value: `%s`.', val ) );\n\t}\n\tif ( arguments.length < 2 ) {\n\t\tthrow new Error( 'insufficient arguments. Must provide a search value.' );\n\t}\n\tif ( arguments.length > 2 ) {\n\t\tif ( !isInteger( position ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', position ) );\n\t\t}\n\t\tpos = position;\n\t\tif ( pos < 0 ) {\n\t\t\tpos = 0;\n\t\t}\n\t} else {\n\t\tpos = 0;\n\t}\n\tif ( isString( val ) ) {\n\t\tif ( !isString( searchValue ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', searchValue ) );\n\t\t}\n\t\treturn val.indexOf( searchValue, pos ) !== -1;\n\t}\n\tlen = val.length;\n\tif ( isnan( searchValue ) ) {\n\t\tfor ( i = pos; i < len; i++ ) {\n\t\t\tif ( isnan( val[ i ] ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tfor ( i = pos; i < len; i++ ) {\n\t\tif ( val[ i ] === searchValue ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = contains;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if an array-like value contains another value.\n*\n* @module @stdlib/assert/contains\n*\n* @example\n* var contains = require( '@stdlib/assert/contains' );\n*\n* var bool = contains( 'Hello World', 'World' );\n* // returns true\n*\n* bool = contains( 'Hello World', 'world' );\n* // returns false\n*\n* bool = contains( [ 1, 2, 3, 4 ], 2 );\n* // returns true\n*\n* bool = contains( [ NaN, 2, 3, 4 ], NaN );\n* // returns true\n*/\n\n// MODULES //\n\nvar contains = require( './contains.js' );\n\n\n// EXPORTS //\n\nmodule.exports = contains;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getDay = require( './getday.js' );\n\n\n// MAIN //\n\n/**\n* Attempts to call a `Date` method.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if able to call a `Date` method\n*/\nfunction test( value ) {\n\ttry {\n\t\tgetDay.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar getDay = Date.prototype.getDay; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = getDay;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2getday.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `Date` object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a `Date` object\n*\n* @example\n* var bool = isDateObject( new Date() );\n* // returns true\n*\n* @example\n* var bool = isDateObject( '2017-01-01' );\n* // returns false\n*/\nfunction isDateObject( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Date ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Date]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isDateObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a `Date` object.\n*\n* @module @stdlib/assert/is-date-object\n*\n* @example\n* var isDateObject = require( '@stdlib/assert/is-date-object' );\n*\n* var bool = isDateObject( new Date() );\n* // returns true\n*\n* bool = isDateObject( '2017-01-01' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isDateObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isDateObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an `Error` object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `Error` object\n*\n* @example\n* var bool = isError( new Error( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isError( {} );\n* // returns false\n*/\nfunction isError( value ) {\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for `Error` objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tif ( value instanceof Error ) {\n\t\treturn true;\n\t}\n\t// Walk the prototype tree until we find an object having the desired native class...\n\twhile ( value ) {\n\t\tif ( nativeClass( value ) === '[object Error]' ) {\n\t\t\treturn true;\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an `Error` object.\n*\n* @module @stdlib/assert/is-error\n*\n* @example\n* var isError = require( '@stdlib/assert/is-error' );\n*\n* var bool = isError( new Error( 'beep' ) );\n* // returns true\n*\n* bool = isError( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isError = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar f;\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is an array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array\n*\n* @example\n* var bool = isArray( [] );\n* // returns true\n*\n* @example\n* var bool = isArray( {} );\n* // returns false\n*/\nfunction isArray( value ) {\n\treturn ( nativeClass( value ) === '[object Array]' );\n}\n\n\n// MAIN //\n\nif ( Array.isArray ) {\n\tf = Array.isArray;\n} else {\n\tf = isArray;\n}\n\n\n// EXPORTS //\n\nmodule.exports = f;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array.\n*\n* @module @stdlib/assert/is-array\n*\n* @example\n* var isArray = require( '@stdlib/assert/is-array' );\n*\n* var bool = isArray( [] );\n* // returns true\n*\n* bool = isArray( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( './../../../is-array' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arrayfcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArray( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a function which tests if every element in an array passes a test condition.\n*\n* @module @stdlib/assert/tools/array-function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n* var arrayfcn = require( '@stdlib/assert/tools/array-function' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arrayfcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\n\n// MODULES //\n\nvar arrayfcn = require( './arrayfcn.js' );\n\n\n// EXPORTS //\n\nmodule.exports = arrayfcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is object-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is object-like\n*\n* @example\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( [] );\n* // returns true\n*\n* @example\n* var bool = isObjectLike( null );\n* // returns false\n*/\nfunction isObjectLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is object-like.\n*\n* @module @stdlib/assert/is-object-like\n*\n* @example\n* var isObjectLike = require( '@stdlib/assert/is-object-like' );\n*\n* var bool = isObjectLike( {} );\n* // returns true\n*\n* bool = isObjectLike( [] );\n* // returns true\n*\n* bool = isObjectLike( null );\n* // returns false\n*\n* @example\n* var isObjectLike = require( '@stdlib/assert/is-object-like' ).isObjectLikeArray;\n*\n* var bool = isObjectLike( [ {}, [] ] );\n* // returns true\n*\n* bool = isObjectLike( [ {}, '3.0' ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-function' );\nvar isObjectLike = require( './main.js' );\n\n\n// MAIN //\n\nsetReadOnly( isObjectLike, 'isObjectLikeArray', arrayfun( isObjectLike ) );\n\n\n// EXPORTS //\n\nmodule.exports = isObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObjectLike = require( './../../is-object-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Buffer instance.\n*\n* @param {*} value - value to validate\n* @returns {boolean} boolean indicating if a value is a Buffer instance\n*\n* @example\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( new Buffer( [1,2,3,4] ) );\n* // returns true\n*\n* @example\n* var v = isBuffer( {} );\n* // returns false\n*\n* @example\n* var v = isBuffer( [] );\n* // returns false\n*/\nfunction isBuffer( value ) {\n\treturn (\n\t\tisObjectLike( value ) &&\n\t\t(\n\t\t\t// eslint-disable-next-line no-underscore-dangle\n\t\t\tvalue._isBuffer || // for envs missing Object.prototype.constructor (e.g., Safari 5-7)\n\t\t\t(\n\t\t\t\tvalue.constructor &&\n\n\t\t\t\t// WARNING: `typeof` is not a foolproof check, as certain envs consider RegExp and NodeList instances to be functions\n\t\t\t\ttypeof value.constructor.isBuffer === 'function' &&\n\t\t\t\tvalue.constructor.isBuffer( value )\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Buffer instance.\n*\n* @module @stdlib/assert/is-buffer\n*\n* @example\n* var isBuffer = require( '@stdlib/assert/is-buffer' );\n*\n* var v = isBuffer( new Buffer( 'beep' ) );\n* // returns true\n*\n* v = isBuffer( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isBuffer = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar exec = require( './exec.js' );\n\n\n// MAIN //\n\n/**\n* Attempts to call a `RegExp` method.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if able to call a `RegExp` method\n*/\nfunction test( value ) {\n\ttry {\n\t\texec.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\nvar exec = RegExp.prototype.exec; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = exec;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2exec.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a regular expression.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a regular expression\n*\n* @example\n* var bool = isRegExp( /\\.+/ );\n* // returns true\n*\n* @example\n* var bool = isRegExp( {} );\n* // returns false\n*/\nfunction isRegExp( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof RegExp ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object RegExp]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a regular expression.\n*\n* @module @stdlib/assert/is-regexp\n*\n* @example\n* var isRegExp = require( '@stdlib/assert/is-regexp' );\n*\n* var bool = isRegExp( /\\.+/ );\n* // returns true\n*\n* bool = isRegExp( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isRegExp = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isRegExp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar isDate = require( './../../is-date-object' );\nvar isError = require( './../../is-error' );\nvar isBuffer = require( './../../is-buffer' );\nvar isRegExp = require( './../../is-regexp' );\n\n\n// MAIN //\n\n/**\n* Tests for deep equality between two values.\n*\n* @param {*} a - first comparison value\n* @param {*} b - second comparison value\n* @returns {boolean} boolean indicating if `a` is deep equal to `b`\n*\n* @example\n* var bool = deepEqual( [ 1, 2, 3 ], [ 1, 2, 3 ] );\n* // returns true\n*\n* @example\n* var bool = deepEqual( [ 1, 2, 3 ], [ 1, 2, '3' ] );\n* // returns false\n*\n* @example\n* var bool = deepEqual( { 'a': 2 }, { 'a': [ 2 ] } );\n* // returns false\n*\n* @example\n* var bool = deepEqual( [], {} );\n* // returns false\n*\n* @example\n* var bool = deepEqual( null, null );\n* // returns true\n*/\nfunction deepEqual( a, b ) {\n\tvar aKeys;\n\tvar bKeys;\n\tvar typeA;\n\tvar typeB;\n\tvar key;\n\tvar i;\n\n\ttypeA = typeof a;\n\ttypeB = typeof b;\n\tif ( a === null || typeA !== 'object' ) {\n\t\tif ( b === null || typeB !== 'object' ) {\n\t\t\treturn a === b;\n\t\t}\n\t\treturn false;\n\t}\n\t// Case: `a` is of type 'object'\n\tif ( typeB !== 'object' ) {\n\t\treturn false;\n\t}\n\tif ( getPrototypeOf( a ) !== getPrototypeOf( b ) ) {\n\t\treturn false;\n\t}\n\tif ( isDate( a ) ) {\n\t\treturn a.getTime() === b.getTime();\n\t}\n\tif ( isRegExp( a ) ) {\n\t\treturn a.source === b.source && a.flags === b.flags;\n\t}\n\tif ( isError( a ) ) {\n\t\tif ( a.message !== b.message || a.name !== b.name ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif ( isBuffer( a ) ) {\n\t\tif ( a.length !== b.length ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < a.length; i++ ) {\n\t\t\tif ( a[ i ] !== b[ i ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\taKeys = objectKeys( a );\n\tbKeys = objectKeys( b );\n\tif ( aKeys.length !== bKeys.length ) {\n\t\treturn false;\n\t}\n\taKeys.sort();\n\tbKeys.sort();\n\n\t// Cheap key test:\n\tfor ( i = 0; i < aKeys.length; i++ ) {\n\t\tif ( aKeys[ i ] !== bKeys[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t// Possibly expensive deep equality test for each corresponding key:\n\tfor ( i = 0; i < aKeys.length; i++ ) {\n\t\tkey = aKeys[ i ];\n\t\tif ( !deepEqual( a[ key ], b[ key ] ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn typeA === typeB;\n}\n\n\n// EXPORTS //\n\nmodule.exports = deepEqual;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for deep equality between two values.\n*\n* @module @stdlib/assert/deep-equal\n*\n* @example\n* var deepEqual = require( '@stdlib/assert/deep-equal' );\n*\n* var bool = deepEqual( [ 1, 2, 3 ], [ 1, 2, 3 ] );\n* // returns true\n*\n* bool = deepEqual( [ 1, 2, 3 ], [ 1, 2, '3' ] );\n* // returns false\n*\n* bool = deepEqual( { 'a': 2 }, { 'a': [ 2 ] } );\n* // returns false\n*/\n\n// MODULES //\n\nvar deepEqual = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = deepEqual;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( './../../is-array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an object; e.g., `{}`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an object\n*\n* @example\n* var bool = isObject( {} );\n* // returns true\n*\n* @example\n* var bool = isObject( null );\n* // returns false\n*/\nfunction isObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t!isArray( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an object.\n*\n* @module @stdlib/assert/is-object\n*\n* @example\n* var isObject = require( '@stdlib/assert/is-object' );\n*\n* var bool = isObject( {} );\n* // returns true\n*\n* bool = isObject( true );\n* // returns false\n*/\n\n// MODULES //\n\nvar isObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar typeOf = require( '@stdlib/utils/type-of' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a function\n*\n* @example\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\nfunction isFunction( value ) {\n\t// Note: cannot use `typeof` directly, as various browser engines incorrectly return `'function'` when operating on non-function objects, such as regular expressions and NodeLists.\n\treturn ( typeOf( value ) === 'function' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a function.\n*\n* @module @stdlib/assert/is-function\n*\n* @example\n* var isFunction = require( '@stdlib/assert/is-function' );\n*\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isFunction( beep );\n* // returns true\n*/\n\n// MODULES //\n\nvar isFunction = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// FUNCTIONS //\n\nvar has = Object.prototype.hasOwnProperty;\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasOwnProp( value, property ) {\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\treturn has.call( value, property );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object has a specified property.\n*\n* @module @stdlib/assert/has-own-property\n*\n* @example\n* var hasOwnProp = require( '@stdlib/assert/has-own-property' );\n*\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasOwnProp( beep, 'boop' );\n* // returns true\n*\n* bool = hasOwnProp( beep, 'bop' );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasOwnProp = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( './../../is-object' );\nvar isFunction = require( './../../is-function' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar hasOwnProp = require( './../../has-own-property' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar objectPrototype = Object.prototype;\n\n\n// FUNCTIONS //\n\n/**\n* Tests that an object only has own properties.\n*\n* @private\n* @param {Object} obj - value to test\n* @returns {boolean} boolean indicating if an object only has own properties\n*/\nfunction ownProps( obj ) {\n\tvar key;\n\n\t// NOTE: possibility of perf boost if key enumeration order is known (see http://stackoverflow.com/questions/18531624/isplainobject-thing).\n\tfor ( key in obj ) {\n\t\tif ( !hasOwnProp( obj, key ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// MAIN //\n\n/**\n* Tests if a value is a plain object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a plain object\n*\n* @example\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* @example\n* var bool = isPlainObject( null );\n* // returns false\n*/\nfunction isPlainObject( value ) {\n\tvar proto;\n\n\t// Screen for obvious non-objects...\n\tif ( !isObject( value ) ) {\n\t\treturn false;\n\t}\n\t// Objects with no prototype (e.g., `Object.create( null )`) are plain...\n\tproto = getPrototypeOf( value );\n\tif ( !proto ) {\n\t\treturn true;\n\t}\n\t// Objects having a prototype are plain if and only if they are constructed with a global `Object` function and the prototype points to the prototype of a plain object...\n\treturn (\n\t\t// Cannot have own `constructor` property:\n\t\t!hasOwnProp( value, 'constructor' ) &&\n\n\t\t// Prototype `constructor` property must be a function (see also https://bugs.jquery.com/ticket/9897 and http://stackoverflow.com/questions/18531624/isplainobject-thing):\n\t\thasOwnProp( proto, 'constructor' ) &&\n\t\tisFunction( proto.constructor ) &&\n\t\tnativeClass( proto.constructor ) === '[object Function]' &&\n\n\t\t// Test for object-specific method:\n\t\thasOwnProp( proto, 'isPrototypeOf' ) &&\n\t\tisFunction( proto.isPrototypeOf ) &&\n\n\t\t(\n\t\t\t// Test if the prototype matches the global `Object` prototype (same realm):\n\t\t\tproto === objectPrototype ||\n\n\t\t\t// Test that all properties are own properties (cross-realm; *most* likely a plain object):\n\t\t\townProps( value )\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a plain object.\n*\n* @module @stdlib/assert/is-plain-object\n*\n* @example\n* var isPlainObject = require( '@stdlib/assert/is-plain-object' );\n*\n* var bool = isPlainObject( {} );\n* // returns true\n*\n* bool = isPlainObject( null );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPlainObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\nvar isObject = require( './../../is-plain-object' );\nvar hasOwnProp = require( './../../has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for function options\n* @param {Options} options - function options\n* @param {string} [options.sep] - key path separator\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'sep': '/'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'sep' ) ) {\n\t\topts.sep = options.sep;\n\t\tif ( !isString( opts.sep ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'sep', opts.sep ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( './../../has-own-property' );\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating whether an object has a nested property.\n*\n* @private\n* @param {*} v - value to test\n* @param {Array} props - list of properties defining a key path\n* @returns {boolean} boolean indicating whether an object has a nested property\n*/\nfunction deepHasOwnProp( v, props ) {\n\tvar len = props.length;\n\tvar i;\n\tif ( len === 0 ) {\n\t\treturn false;\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( hasOwnProp( v, props[ i ] ) ) {\n\t\t\tv = v[ props[ i ] ];\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = deepHasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\nvar isArray = require( './../../is-array' );\nvar format = require( '@stdlib/string/format' );\nvar copy = require( '@stdlib/utils/copy' );\nvar validate = require( './validate.js' );\nvar defaults = require( './defaults.json' );\nvar has = require( './has.js' );\n\n\n// MAIN //\n\n/**\n* Tests whether an object contains a nested key path.\n*\n* @param {*} value - value to test\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} second argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {boolean} boolean indicating whether an object has a nested property\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepHasOwnProp( obj, 'a.b.c' );\n* // returns true\n*\n* @example\n* var arr = [\n*     {\n*         'a': [\n*             {\n*                 'b': [\n*                     { 'c': 'd' },\n*                     { 'e': 'f' }\n*                 ]\n*             }\n*         ]\n*     }\n* ];\n* var bool = deepHasOwnProp( arr, '0.a.0.b.0.c' );\n* // returns true\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepHasOwnProp( obj, [ 'a', 'b', 'c' ] );\n* // returns true\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepHasOwnProp( obj, 'a/b/c', {\n*     'sep': '/'\n* });\n* // returns true\n*/\nfunction deepHasOwnProp( value, path, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Key path must be a string or a key array. Value: `%s`.', path ) );\n\t}\n\topts = copy( defaults );\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( value === void 0 || value === null ) {\n\t\treturn false;\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn has( value, props );\n}\n\n\n// EXPORTS //\n\nmodule.exports = deepHasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\nvar isArray = require( './../../is-array' );\nvar format = require( '@stdlib/string/format' );\nvar copy = require( '@stdlib/utils/copy' );\nvar validate = require( './validate.js' );\nvar defaults = require( './defaults.json' );\nvar has = require( './has.js' );\n\n\n// MAIN //\n\n/**\n* Returns a function which tests whether an object has a nested key path.\n*\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} first argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} function which tests whether an object has a nested key path\n*\n* @example\n* var has = factory( 'a/b/c', {\n*     'sep': '/'\n* });\n*/\nfunction factory( path, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Key path must be a string or a key array. Value: `%s`.', path ) );\n\t}\n\topts = copy( defaults );\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn deepHasOwnProp;\n\n\t/**\n\t* Returns a boolean indicating whether an object has a nested key path.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether an object has a nested property\n\t*\n\t* @example\n\t* var obj = { 'a': { 'b': { 'c': 'd' } } };\n\t* var bool = deepHasOwnProp( obj );\n\t*/\n\tfunction deepHasOwnProp( value ) {\n\t\tif ( value === void 0 || value === null ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn has( value, props );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object contains a nested key path.\n*\n* @module @stdlib/assert/deep-has-own-property\n*\n* @example\n* var deepHasOwnProp = require( '@stdlib/assert/deep-has-own-property' );\n*\n* var obj = {\n*     'a': {\n*         'b': {\n*             'c': 'd'\n*         }\n*     }\n* };\n*\n* var bool = deepHasOwnProp( obj, 'a.b.c' );\n* // returns true\n*\n* bool = deepHasOwnProp( obj, [ 'a', 'b', 'c' ] );\n* // returns true\n*\n* @example\n* var factory = require( '@stdlib/assert/deep-has-own-property' ).factory;\n*\n* var has = factory( 'a/b/c', {\n*     'sep': '/'\n* });\n*\n* var obj = {\n*     'a': {\n*         'b': {\n*             'c': 'd'\n*         }\n*     }\n* };\n*\n* var bool = has( obj );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar deepHasOwnProp = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( deepHasOwnProp, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = deepHasOwnProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\nvar isObject = require( './../../is-plain-object' );\nvar hasOwnProp = require( './../../has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for function options\n* @param {Options} options - function options\n* @param {string} [options.sep] - key path separator\n* @returns {(Error|null)} error or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'sep': '/'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'sep' ) ) {\n\t\topts.sep = options.sep;\n\t\tif ( !isString( opts.sep ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'sep', opts.sep ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if an object has a specified property, either own or inherited.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified property\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasProp( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasProp( beep, 'bap' );\n* // returns false\n*/\nfunction hasProp( value, property ) {\n\tif ( value === void 0 || value === null ) {\n\t\treturn false;\n\t}\n\tif ( typeof property === 'symbol' ) {\n\t\treturn property in Object( value );\n\t}\n\treturn ( String( property ) in Object( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object has a specified property, either own or inherited.\n*\n* @module @stdlib/assert/has-property\n*\n* @example\n* var hasProp = require( '@stdlib/assert/has-property' );\n*\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = hasProp( beep, 'boop' );\n* // returns true\n*\n* bool = hasProp( beep, 'bop' );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasProp = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasProp = require( './../../has-property' );\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating whether an object has a nested property.\n*\n* @private\n* @param {*} v - value to test\n* @param {Array} props - list of properties defining a key path\n* @returns {boolean} boolean indicating whether an object has a nested property\n*/\nfunction deepHasProp( v, props ) {\n\tvar len = props.length;\n\tvar i;\n\tif ( len === 0 ) {\n\t\treturn false;\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( hasProp( v, props[i] ) ) {\n\t\t\tv = v[ props[ i ] ];\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = deepHasProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\nvar isArray = require( './../../is-array' );\nvar format = require( '@stdlib/string/format' );\nvar copy = require( '@stdlib/utils/copy' );\nvar validate = require( './validate.js' );\nvar defaults = require( './defaults.json' );\nvar has = require( './has.js' );\n\n\n// MAIN //\n\n/**\n* Tests whether an object contains a nested key path, either own or inherited.\n*\n* @param {*} value - value to test\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} second argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {boolean} boolean indicating whether an object has a nested property\n*\n* @example\n* function Foo() {\n*     return this;\n* }\n* Foo.prototype.b = {\n*     'c': 'd'\n* };\n*\n* var obj = {\n*     'a': new Foo()\n* };\n*\n* var bool = deepHasProp( obj, 'a.b.c' );\n* // returns true\n*\n* @example\n* var arr = [\n*     {\n*         'a': [\n*             {\n*                 'b': [\n*                     { 'c': 'd' },\n*                     { 'e': 'f' }\n*                 ]\n*             }\n*         ]\n*     }\n* ];\n* var bool = deepHasProp( arr, '0.a.0.b.0.c' );\n* // returns true\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepHasProp( obj, [ 'a', 'b', 'c' ] );\n* // returns true\n*\n* @example\n* var obj = { 'a': { 'b': { 'c': 'd' } } };\n* var bool = deepHasProp( obj, 'a/b/c', {\n*     'sep': '/'\n* });\n* // returns true\n*/\nfunction deepHasProp( value, path, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Key path must be a string or a key array. Value: `%s`.', path ) );\n\t}\n\topts = copy( defaults );\n\tif ( arguments.length > 2 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( value === void 0 || value === null ) {\n\t\treturn false;\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn has( value, props );\n}\n\n\n// EXPORTS //\n\nmodule.exports = deepHasProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\nvar isArray = require( './../../is-array' );\nvar format = require( '@stdlib/string/format' );\nvar copy = require( '@stdlib/utils/copy' );\nvar validate = require( './validate.js' );\nvar defaults = require( './defaults.json' );\nvar has = require( './has.js' );\n\n\n// MAIN //\n\n/**\n* Returns a function which tests whether an object has a nested key path, either own or inherited.\n*\n* @param {(string|Array)} path - key path\n* @param {Options} [options] - function options\n* @param {string} [options.sep='.'] - key path separator\n* @throws {TypeError} first argument must be a string or key array\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {Function} function which tests whether an object has a nested key path\n*\n* @example\n* var has = factory( 'a/b/c', {\n*     'sep': '/'\n* });\n*/\nfunction factory( path, options ) {\n\tvar isStr;\n\tvar props;\n\tvar opts;\n\tvar err;\n\tisStr = isString( path );\n\tif ( !isStr && !isArray( path ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Key path must be a string or a key array. Value: `%s`.', path ) );\n\t}\n\topts = copy( defaults );\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tif ( isStr ) {\n\t\tprops = path.split( opts.sep );\n\t} else {\n\t\tprops = path;\n\t}\n\treturn deepHasProp;\n\n\t/**\n\t* Returns a boolean indicating whether an object has a nested key path, either own or inherited.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether an object has a nested property\n\t*\n\t* @example\n\t* var obj = { 'a': { 'b': { 'c': 'd' } } };\n\t* var bool = deepHasProp( obj );\n\t*/\n\tfunction deepHasProp( value ) {\n\t\tif ( value === void 0 || value === null ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn has( value, props );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object contains a nested key path, either own or inherited.\n*\n* @module @stdlib/assert/deep-has-property\n*\n* @example\n* var deepHasProp = require( '@stdlib/assert/deep-has-property' );\n*\n* function Foo() {\n*     return this;\n* }\n* Foo.prototype.b = {\n*     'c': 'd'\n* };\n*\n* var obj = {\n*     'a': new Foo()\n* };\n*\n* var bool = deepHasProp( obj, 'a.b.c' );\n* // returns true\n*\n* bool = deepHasProp( obj, [ 'a', 'b', 'c' ] );\n* // returns true\n*\n* @example\n* var factory = require( '@stdlib/assert/deep-has-property' ).factory;\n*\n* var has = factory( 'a/b/c', {\n*     'sep': '/'\n* });\n*\n* function Foo() {\n*     return this;\n* }\n* Foo.prototype.b = {\n*     'c': 'd'\n* };\n*\n* var obj = {\n*     'a': new Foo()\n* };\n*\n* var bool = has( obj );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar deepHasProp = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( deepHasProp, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = deepHasProp;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasArrayBuffer = ( typeof ArrayBuffer === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an ArrayBuffer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an ArrayBuffer\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n*\n* var bool = isArrayBuffer( new ArrayBuffer( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isArrayBuffer( [] );\n* // returns false\n*/\nfunction isArrayBuffer( value ) {\n\treturn (\n\t\t( hasArrayBuffer && value instanceof ArrayBuffer ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object ArrayBuffer]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an ArrayBuffer.\n*\n* @module @stdlib/assert/is-arraybuffer\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var isArrayBuffer = require( '@stdlib/assert/is-arraybuffer' );\n*\n* var bool = isArrayBuffer( new ArrayBuffer( 10 ) );\n* // returns true\n*\n* bool = isArrayBuffer( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isArrayBuffer = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof ArrayBuffer === 'function' ) ? ArrayBuffer : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayBuffer = require( './../../is-arraybuffer' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar GlobalArrayBuffer = require( './arraybuffer.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `ArrayBuffer` support.\n*\n* @returns {boolean} boolean indicating if an environment has `ArrayBuffer` support\n*\n* @example\n* var bool = hasArrayBufferSupport();\n* // returns <boolean>\n*/\nfunction hasArrayBufferSupport() {\n\tvar bool;\n\tvar view;\n\tvar buf;\n\n\tif ( typeof GlobalArrayBuffer !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tbuf = new GlobalArrayBuffer( 16 );\n\t\tbool = ( isArrayBuffer( buf ) && typeof GlobalArrayBuffer.isView === 'function' );\n\t\tif ( bool ) {\n\t\t\tview = new Float64Array( buf );\n\t\t\tview[ 0 ] = -3.14;\n\t\t\tview[ 1 ] = NaN;\n\t\t\tbool = (\n\t\t\t\tbool &&\n\t\t\t\tGlobalArrayBuffer.isView( view ) &&\n\t\t\t\tbuf.byteLength === 16 &&\n\t\t\t\tview[ 0 ] === -3.14 &&\n\t\t\t\tview[ 1 ] !== view[ 1 ]\n\t\t\t);\n\t\t}\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasArrayBufferSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `ArrayBuffer` support.\n*\n* @module @stdlib/assert/has-arraybuffer-support\n*\n* @example\n* var hasArrayBufferSupport = require( '@stdlib/assert/has-arraybuffer-support' );\n*\n* var bool = hasArrayBufferSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasArrayBufferSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasArrayBufferSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evil = require( '@stdlib/utils/eval' );\n\n\n// MAIN //\n\n/**\n* Tests for native arrow function support.\n*\n* @returns {boolean} boolean indicating if an environment has native arrow function support\n*\n* @example\n* var bool = hasArrowFunctionSupport();\n* // returns <boolean>\n*/\nfunction hasArrowFunctionSupport() {\n\tvar bool;\n\ttry {\n\t\tevil( '\"use strict\"; (() => {})' );\n\t\tbool = true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasArrowFunctionSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native arrow function support.\n*\n* @module @stdlib/assert/has-arrow-function-support\n*\n* @example\n* var hasArrowFunctionSupport = require( '@stdlib/assert/has-arrow-function-support' );\n*\n* var bool = hasArrowFunctionSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasArrowFunctionSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasArrowFunctionSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evil = require( '@stdlib/utils/eval' );\n\n\n// MAIN //\n\n/**\n* Tests for native `async/await` support.\n*\n* @returns {boolean} boolean indicating if an environment has native `async`/`await` support\n*\n* @example\n* var bool = hasAsyncAwaitSupport();\n* if ( bool ) {\n*     console.log( 'Environment has native async/await support.' );\n* } else {\n*     console.log( 'Environment lacks native async/await support.' );\n* }\n*/\nfunction hasAsyncAwaitSupport() {\n\tvar bool;\n\ttry {\n\t\tevil( '\"use strict\"; async () => {}' );\n\t\tbool = true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasAsyncAwaitSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `async`/`await` support.\n*\n* @module @stdlib/assert/has-async-await-support\n*\n* @example\n* var hasAsyncAwaitSupport = require( '@stdlib/assert/has-async-await-support' );\n*\n* var bool = hasAsyncAwaitSupport();\n* if ( bool ) {\n*     console.log( 'Environment has native async/await support.' );\n* } else {\n*     console.log( 'Environment lacks native async/await support.' );\n* }\n*/\n\n// MODULES //\n\nvar hasAsyncAwaitSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasAsyncAwaitSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/require-globals */\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( './../../has-own-property' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Symbol.asyncIterator` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol.asyncIterator` support\n*\n* @example\n* var bool = hasAsyncIteratorSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasAsyncIteratorSymbolSupport() { // eslint-disable-line id-length\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol' &&\n\t\thasOwnProp( Symbol, 'asyncIterator' ) &&\n\t\ttypeof Symbol.asyncIterator === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasAsyncIteratorSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Symbol.asyncIterator` support.\n*\n* @module @stdlib/assert/has-async-iterator-symbol-support\n*\n* @example\n* var hasAsyncIteratorSymbolSupport = require( '@stdlib/assert/has-async-iterator-symbol-support' );\n*\n* var bool = hasAsyncIteratorSymbolSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasAsyncIteratorSymbolSupport = require( './main.js' ); // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nmodule.exports = hasAsyncIteratorSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getGlobal = require( '@stdlib/utils/global' );\n\n\n// VARIABLES //\n\nvar Global = getGlobal();\n\n\n// MAIN //\n\n/**\n* Tests for native `BigInt` support.\n*\n* @returns {boolean} boolean indicating if an environment has `BigInt` support\n*\n* @example\n* var bool = hasBigIntSupport();\n* // returns <boolean>\n*/\nfunction hasBigIntSupport() {\n\treturn (\n\t\ttypeof Global.BigInt === 'function' &&\n\t\ttypeof BigInt === 'function' && // eslint-disable-line stdlib/require-globals\n\t\ttypeof Global.BigInt( '1' ) === 'bigint' &&\n\t\ttypeof BigInt( '1' ) === 'bigint' // eslint-disable-line stdlib/require-globals, no-undef\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasBigIntSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `BigInt` support.\n*\n* @module @stdlib/assert/has-bigint-support\n*\n* @example\n* var hasBigIntSupport = require( '@stdlib/assert/has-bigint-support' );\n*\n* var bool = hasBigIntSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasBigIntSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasBigIntSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasBigInt64Array = ( typeof BigInt64Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a BigInt64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether the value is a BigInt64Array\n*\n* @example\n* var bool = isBigInt64Array( new BigInt64Array( 2 ) );\n* // returns true\n*\n* @example\n* var bool = isBigInt64Array( [] );\n* // returns false\n*\n* @example\n* var bool = isBigInt64Array( 123 );\n* // returns false\n*/\nfunction isBigInt64Array( value ) {\n\treturn (\n\t\t( hasBigInt64Array && value instanceof BigInt64Array ) || // eslint-disable-line stdlib/require-globals, no-undef\n\t\tnativeClass( value ) === '[object BigInt64Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBigInt64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a BigInt64Array.\n*\n* @module @stdlib/assert/is-bigint64array\n*\n* @example\n* var isBigInt64Array = require( '@stdlib/assert/is-bigint64array' );\n*\n* var value = new BigInt64Array( 2 );\n* var bool = isBigInt64Array( value );\n* // returns true\n*\n* bool = isBigInt64Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isBigInt64Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isBigInt64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a BigInt primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a BigInt primitive\n*/\nfunction isBigInt( value ) {\n\treturn ( typeof value === 'bigint' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBigInt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Attempts to call a `BigInt` method.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if able to call a `BigInt` method\n*/\nfunction test( value ) {\n\ttry {\n\t\treturn (\n\t\t\t// Objects created via `Object.create( null )` have no `valueOf()` method:\n\t\t\ttypeof value.valueOf() === 'bigint'\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2valueof.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a BigInt object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a BigInt object\n*/\nfunction BigInt( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tnativeClass( value ) === '[object BigInt]' &&\n\t\ttest( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = BigInt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a BigInt.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a BigInt\n*/\nfunction isBigInt( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBigInt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isSymbol = require( './generic.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isSymbol, 'isPrimitive', isPrimitive );\nsetReadOnly( isSymbol, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\n\n\n// MAIN //\n\nvar isBigInt = constantFunction( false );\nvar isPrimitive = constantFunction( false );\nvar isObject = constantFunction( false );\n\nsetReadOnly( isBigInt, 'isPrimitive', isPrimitive );\nsetReadOnly( isBigInt, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isBigInt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a BigInt.\n*\n* @module @stdlib/assert/is-bigint\n*\n* @example\n* var BigInt = require( '@stdlib/bigint/ctor' );\n* var isBigInt = require( '@stdlib/assert/is-bigint' );\n*\n* var bool = isBigInt( BigInt( '1' ) );\n* // returns true\n*\n* bool = isBigInt( Object( BigInt( '1' ) ) );\n* // returns true\n*\n* bool = isBigInt( {} );\n* // returns false\n*\n* @example\n* var isBigInt = require( '@stdlib/assert/is-bigint' ).isPrimitive;\n*\n* var bool = isBigInt( BigInt( '1' ) );\n* // returns true\n*\n* bool = isBigInt( Object( BigInt( '1' ) ) );\n* // returns false\n*\n* bool = isBigInt( {} );\n* // returns false\n*\n* @example\n* var isBigIntObject = require( '@stdlib/assert/is-bigint' ).isObject;\n*\n* var bool = isBigIntObject( BigInt( '1' ) );\n* // returns false\n*\n* bool = isBigIntObject( Object( BigInt( '1' ) ) );\n* // returns true\n*\n* bool = isBigIntObject( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasBigInts = require( './../../has-bigint-support' );\nvar main = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar isBigInt;\nif ( hasBigInts() ) {\n\tisBigInt = main;\n} else {\n\tisBigInt = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBigInt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof BigInt64Array === 'function' ) ? BigInt64Array : null; // eslint-disable-line stdlib/require-globals, no-undef\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBigInt64Array = require( './../../is-bigint64array' );\nvar isBigInt = require( './../../is-bigint' );\nvar GlobalBigInt64Array = require( './bigint64array.js' );\n\n\n// VARIABLES //\n\nvar MAX_FLOAT64_INTEGER = '9007199254740991'; // 2^53-1\nvar MAX_FLOAT64_INTEGER_P2 = '9007199254740993';\n\n\n// MAIN //\n\n/**\n* Tests for native `BigInt64Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `BigInt64Array` support\n*\n* @example\n* var bool = hasBigInt64ArraySupport();\n* // returns <boolean>\n*/\nfunction hasBigInt64ArraySupport() {\n\tvar arr;\n\tif ( typeof GlobalBigInt64Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalBigInt64Array([\n\t\t\tMAX_FLOAT64_INTEGER,\n\t\t\tMAX_FLOAT64_INTEGER_P2\n\t\t]);\n\t\treturn (\n\t\t\tisBigInt64Array( arr ) &&\n\t\t\tisBigInt( arr[ 0 ] ) &&\n\t\t\tarr[ 0 ].toString() === MAX_FLOAT64_INTEGER &&\n\t\t\tisBigInt( arr[ 1 ] ) &&\n\t\t\tarr[ 1 ].toString() === MAX_FLOAT64_INTEGER_P2\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasBigInt64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `BigInt64Array` support.\n*\n* @module @stdlib/assert/has-bigint64array-support\n*\n* @example\n* var hasBigInt64ArraySupport = require( '@stdlib/assert/has-bigint64array-support' );\n*\n* var bool = hasBigInt64ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasBigInt64ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasBigInt64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasBigUint64Array = ( typeof BigUint64Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a BigUint64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether the value is a BigUint64Array\n*\n* @example\n* var value = new BigUint64Array( 2 );\n* var bool = isBigUint64Array( value );\n* // returns true\n*\n* @example\n* var bool = isBigUint64Array( [] );\n* // returns false\n*\n* @example\n* var bool = isBigUint64Array( 123 );\n* // returns false\n*/\nfunction isBigUint64Array( value ) {\n\treturn (\n\t\t( hasBigUint64Array && value instanceof BigUint64Array ) || // eslint-disable-line stdlib/require-globals, no-undef\n\t\tnativeClass( value ) === '[object BigUint64Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBigUint64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a BigUint64Array.\n*\n* @module @stdlib/assert/is-biguint64array\n*\n* @example\n* var isBigUint64Array = require( '@stdlib/assert/is-biguint64array' );\n*\n* var value = new BigUint64Array( 2 );\n* var bool = isBigUint64Array( value );\n* // returns true\n*\n* bool = isBigUint64Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isBigUint64Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isBigUint64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof BigUint64Array === 'function' ) ? BigUint64Array : null; // eslint-disable-line stdlib/require-globals, no-undef\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBigUint64Array = require( './../../is-biguint64array' );\nvar isBigInt = require( './../../is-bigint' );\nvar GlobalBigUint64Array = require( './biguint64array.js' );\n\n\n// VARIABLES //\n\nvar MAX_SIGNED_INT64 = '9223372036854775807'; // 2**63 - 1\nvar MAX_SIGNED_INT64_P2 = '9223372036854775809';\n\n\n// MAIN //\n\n/**\n* Tests for native `BigUint64Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `BigUint64Array` support\n*\n* @example\n* var bool = hasBigUint64ArraySupport();\n* // returns <boolean>\n*/\nfunction hasBigUint64ArraySupport() {\n\tvar arr;\n\tif ( typeof GlobalBigUint64Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalBigUint64Array([\n\t\t\tMAX_SIGNED_INT64,\n\t\t\tMAX_SIGNED_INT64_P2\n\t\t]);\n\t\treturn (\n\t\t\tisBigUint64Array( arr ) &&\n\t\t\tisBigInt( arr[ 0 ] ) &&\n\t\t\tarr[ 0 ].toString() === MAX_SIGNED_INT64 &&\n\t\t\tisBigInt( arr[ 1 ] ) &&\n\t\t\tarr[ 1 ].toString() === MAX_SIGNED_INT64_P2\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasBigUint64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `BigUint64Array` support.\n*\n* @module @stdlib/assert/has-biguint64array-support\n*\n* @example\n* var hasBigUint64ArraySupport = require( '@stdlib/assert/has-biguint64array-support' );\n*\n* var bool = hasBigUint64ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasBigUint64ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasBigUint64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evil = require( '@stdlib/utils/eval' );\n\n\n// MAIN //\n\n/**\n* Tests for native `class` support.\n*\n* @returns {boolean} boolean indicating if an environment has native `class` support\n*\n* @example\n* var bool = hasClassSupport();\n* if ( bool ) {\n*     console.log( 'Environment has native class support.' );\n* } else {\n*     console.log( 'Environment lacks native class support.' );\n* }\n*/\nfunction hasClassSupport() {\n\tvar bool;\n\ttry {\n\t\tevil( '\"use strict\"; class A{};' );\n\t\tbool = true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasClassSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `class` support.\n*\n* @module @stdlib/assert/has-class-support\n*\n* @example\n* var hasClassSupport = require( '@stdlib/assert/has-class-support' );\n*\n* var bool = hasClassSupport();\n* if ( bool ) {\n*     console.log( 'Environment has native class support.' );\n* } else {\n*     console.log( 'Environment lacks native class support.' );\n* }\n*/\n\n// MODULES //\n\nvar hasClassSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasClassSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasDataView = ( typeof DataView === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `DataView`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a DataView\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var DataView = require( '@stdlib/array/dataview' );\n*\n* var bool = isDataView( new DataView( new ArrayBuffer( 10 ) ) );\n* // returns true\n*\n* @example\n* var bool = isDataView( [] );\n* // returns false\n*/\nfunction isDataView( value ) {\n\treturn (\n\t\t( hasDataView && value instanceof DataView ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object DataView]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isDataView;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a `DataView`.\n*\n* @module @stdlib/assert/is-dataview\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array/buffer' );\n* var DataView = require( '@stdlib/array/dataview' );\n* var isDataView = require( '@stdlib/assert/is-dataview' );\n*\n* var bool = isDataView( new DataView( new ArrayBuffer( 10 ) ) );\n* // returns true\n*\n* bool = isDataView( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isDataView = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isDataView;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof DataView === 'function' ) ? DataView : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isDataView = require( './../../is-dataview' );\nvar ArrayBuffer = require( '@stdlib/array/buffer' );\nvar GlobalDataView = require( './dataview.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `DataView` support.\n*\n* @returns {boolean} boolean indicating if an environment has `DataView` support\n*\n* @example\n* var bool = hasDataViewSupport();\n* // returns <boolean>\n*/\nfunction hasDataViewSupport() {\n\tvar bool;\n\tvar view;\n\tvar buf;\n\n\tif ( typeof GlobalDataView !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tbuf = new ArrayBuffer( 24 );\n\t\tview = new GlobalDataView( buf, 8 );\n\t\tbool = ( isDataView( view ) && typeof view.getFloat64 === 'function' && typeof view.setFloat64 === 'function' );\n\t\tif ( bool ) {\n\t\t\tview.setFloat64( 0, -3.14 );\n\t\t\tview.setFloat64( 8, NaN );\n\t\t\tbool = (\n\t\t\t\tbool &&\n\t\t\t\tview.buffer === buf &&\n\t\t\t\tview.byteLength === 16 &&\n\t\t\t\tview.byteOffset === 8 &&\n\t\t\t\tview.getFloat64( 0 ) === -3.14 &&\n\t\t\t\tview.getFloat64( 8 ) !== view.getFloat64( 8 )\n\t\t\t);\n\t\t}\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasDataViewSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `DataView` support.\n*\n* @module @stdlib/assert/has-dataview-support\n*\n* @example\n* var hasDataViewSupport = require( '@stdlib/assert/has-dataview-support' );\n*\n* var bool = hasDataViewSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasDataViewSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasDataViewSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperties = require( './define_properties.js' );\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperties` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperties` support\n*\n* @example\n* var bool = hasDefinePropertiesSupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertiesSupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperties( {}, {\n\t\t\t'x': {}\n\t\t});\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasDefinePropertiesSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperties === 'function' ) ? Object.defineProperties : null;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for `Object.defineProperties` support.\n*\n* @module @stdlib/assert/has-define-properties-support\n*\n* @example\n* var hasDefinePropertiesSupport = require( '@stdlib/assert/has-define-properties-support' );\n*\n* var bool = hasDefinePropertiesSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasDefinePropertiesSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasDefinePropertiesSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './define_property.js' );\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for `Object.defineProperty` support.\n*\n* @module @stdlib/assert/has-define-property-support\n*\n* @example\n* var hasDefinePropertySupport = require( '@stdlib/assert/has-define-property-support' );\n*\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasDefinePropertySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasFloat32Array = ( typeof Float32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float32Array\n*\n* @example\n* var bool = isFloat32Array( new Float32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat32Array( [] );\n* // returns false\n*/\nfunction isFloat32Array( value ) {\n\treturn (\n\t\t( hasFloat32Array && value instanceof Float32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Float32Array.\n*\n* @module @stdlib/assert/is-float32array\n*\n* @example\n* var isFloat32Array = require( '@stdlib/assert/is-float32array' );\n*\n* var bool = isFloat32Array( new Float32Array( 10 ) );\n* // returns true\n*\n* bool = isFloat32Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isFloat32Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFloat32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float32Array === 'function' ) ? Float32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFloat32Array = require( './../../is-float32array' );\nvar PINF = require( '@stdlib/constants/float64/pinf' );\nvar GlobalFloat32Array = require( './float32array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Float32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float32Array` support\n*\n* @example\n* var bool = hasFloat32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat32Array( [ 1.0, 3.14, -3.14, 5.0e40 ] );\n\t\tbool = (\n\t\t\tisFloat32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.140000104904175 &&\n\t\t\tarr[ 2 ] === -3.140000104904175 &&\n\t\t\tarr[ 3 ] === PINF\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Float32Array` support.\n*\n* @module @stdlib/assert/has-float32array-support\n*\n* @example\n* var hasFloat32ArraySupport = require( '@stdlib/assert/has-float32array-support' );\n*\n* var bool = hasFloat32ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasFloat32ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasFloat64Array = ( typeof Float64Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Float64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Float64Array\n*\n* @example\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isFloat64Array( [] );\n* // returns false\n*/\nfunction isFloat64Array( value ) {\n\treturn (\n\t\t( hasFloat64Array && value instanceof Float64Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Float64Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Float64Array.\n*\n* @module @stdlib/assert/is-float64array\n*\n* @example\n* var isFloat64Array = require( '@stdlib/assert/is-float64array' );\n*\n* var bool = isFloat64Array( new Float64Array( 10 ) );\n* // returns true\n*\n* bool = isFloat64Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isFloat64Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFloat64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Float64Array === 'function' ) ? Float64Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFloat64Array = require( './../../is-float64array' );\nvar GlobalFloat64Array = require( './float64array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Float64Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Float64Array` support\n*\n* @example\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\nfunction hasFloat64ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalFloat64Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalFloat64Array( [ 1.0, 3.14, -3.14, NaN ] );\n\t\tbool = (\n\t\t\tisFloat64Array( arr ) &&\n\t\t\tarr[ 0 ] === 1.0 &&\n\t\t\tarr[ 1 ] === 3.14 &&\n\t\t\tarr[ 2 ] === -3.14 &&\n\t\t\tarr[ 3 ] !== arr[ 3 ]\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Float64Array` support.\n*\n* @module @stdlib/assert/has-float64array-support\n*\n* @example\n* var hasFloat64ArraySupport = require( '@stdlib/assert/has-float64array-support' );\n*\n* var bool = hasFloat64ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasFloat64ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasFloat64ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Dummy function.\n*\n* @private\n*/\nfunction foo() {\n\t// No-op...\n}\n\n\n// EXPORTS //\n\nmodule.exports = foo;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar foo = require( './foo.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native function `name` support.\n*\n* @returns {boolean} boolean indicating if an environment has function `name` support\n*\n* @example\n* var bool = hasFunctionNameSupport();\n* // returns <boolean>\n*/\nfunction hasFunctionNameSupport() {\n\treturn ( foo.name === 'foo' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasFunctionNameSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native function `name` support.\n*\n* @module @stdlib/assert/has-function-name-support\n*\n* @example\n* var hasFunctionNameSupport = require( '@stdlib/assert/has-function-name-support' );\n*\n* var bool = hasFunctionNameSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasFunctionNameSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasFunctionNameSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evil = require( '@stdlib/utils/eval' );\n\n\n// MAIN //\n\n/**\n* Tests for native `function*()` support.\n*\n* @returns {boolean} boolean indicating if an environment has native `function*()` support\n*\n* @example\n* var bool = hasGeneratorSupport();\n* // returns <boolean>\n*/\nfunction hasGeneratorSupport() {\n\tvar bool;\n\ttry {\n\t\tevil( '\"use strict\"; (function* () {})' );\n\t\tbool = true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasGeneratorSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `function*()` support.\n*\n* @module @stdlib/assert/has-generator-support\n*\n* @example\n* var hasGeneratorSupport = require( '@stdlib/assert/has-generator-support' );\n*\n* var bool = hasGeneratorSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasGeneratorSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasGeneratorSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests for `globalThis` support.\n*\n* @returns {boolean} boolean indicating if an environment has `globalThis` support\n*\n* @example\n* var bool = hasGlobalThisSupport();\n* // returns <boolean>\n*/\nfunction hasGlobalThisSupport() {\n\treturn (\n\t\ttypeof globalThis === 'object' &&\n\t\ttypeof globalThis.setTimeout === 'function' // eslint-disable-line no-undef\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasGlobalThisSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for `globalThis` support.\n*\n* @module @stdlib/assert/has-globalthis-support\n*\n* @example\n* var hasGlobalThisSupport = require( '@stdlib/assert/has-globalthis-support' );\n*\n* var bool = hasGlobalThisSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasGlobalThisSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasGlobalThisSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasInt8Array = ( typeof Int8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int8Array\n*\n* @example\n* var bool = isInt8Array( new Int8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt8Array( [] );\n* // returns false\n*/\nfunction isInt8Array( value ) {\n\treturn (\n\t\t( hasInt8Array && value instanceof Int8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInt8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an Int8Array.\n*\n* @module @stdlib/assert/is-int8array\n*\n* @example\n* var isInt8Array = require( '@stdlib/assert/is-int8array' );\n*\n* var bool = isInt8Array( new Int8Array( 10 ) );\n* // returns true\n*\n* bool = isInt8Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInt8Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isInt8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int8Array === 'function' ) ? Int8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInt8Array = require( './../../is-int8array' );\nvar INT8_MAX = require( '@stdlib/constants/int8/max' );\nvar INT8_MIN = require( '@stdlib/constants/int8/min' );\nvar GlobalInt8Array = require( './int8array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Int8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int8Array` support\n*\n* @example\n* var bool = hasInt8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt8Array( [ 1, 3.14, -3.14, INT8_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&     // truncation\n\t\t\tarr[ 2 ] === -3 &&    // truncation\n\t\t\tarr[ 3 ] === INT8_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasInt8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Int8Array` support.\n*\n* @module @stdlib/assert/has-int8array-support\n*\n* @example\n* var hasInt8ArraySupport = require( '@stdlib/assert/has-int8array-support' );\n*\n* var bool = hasInt8ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasInt8ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasInt8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasInt16Array = ( typeof Int16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int16Array\n*\n* @example\n* var bool = isInt16Array( new Int16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt16Array( [] );\n* // returns false\n*/\nfunction isInt16Array( value ) {\n\treturn (\n\t\t( hasInt16Array && value instanceof Int16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInt16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an Int16Array.\n*\n* @module @stdlib/assert/is-int16array\n*\n* @example\n* var isInt16Array = require( '@stdlib/assert/is-int16array' );\n*\n* var bool = isInt16Array( new Int16Array( 10 ) );\n* // returns true\n*\n* bool = isInt16Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInt16Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isInt16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int16Array === 'function' ) ? Int16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInt16Array = require( './../../is-int16array' );\nvar INT16_MAX = require( '@stdlib/constants/int16/max' );\nvar INT16_MIN = require( '@stdlib/constants/int16/min' );\nvar GlobalInt16Array = require( './int16array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Int16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int16Array` support\n*\n* @example\n* var bool = hasInt16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt16Array( [ 1, 3.14, -3.14, INT16_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&      // truncation\n\t\t\tarr[ 2 ] === -3 &&     // truncation\n\t\t\tarr[ 3 ] === INT16_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasInt16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Int16Array` support.\n*\n* @module @stdlib/assert/has-int16array-support\n*\n* @example\n* var hasInt16ArraySupport = require( '@stdlib/assert/has-int16array-support' );\n*\n* var bool = hasInt16ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasInt16ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasInt16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasInt32Array = ( typeof Int32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is an Int32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an Int32Array\n*\n* @example\n* var bool = isInt32Array( new Int32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isInt32Array( [] );\n* // returns false\n*/\nfunction isInt32Array( value ) {\n\treturn (\n\t\t( hasInt32Array && value instanceof Int32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Int32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInt32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an Int32Array.\n*\n* @module @stdlib/assert/is-int32array\n*\n* @example\n* var isInt32Array = require( '@stdlib/assert/is-int32array' );\n*\n* var bool = isInt32Array( new Int32Array( 10 ) );\n* // returns true\n*\n* bool = isInt32Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInt32Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isInt32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Int32Array === 'function' ) ? Int32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInt32Array = require( './../../is-int32array' );\nvar INT32_MAX = require( '@stdlib/constants/int32/max' );\nvar INT32_MIN = require( '@stdlib/constants/int32/min' );\nvar GlobalInt32Array = require( './int32array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Int32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Int32Array` support\n*\n* @example\n* var bool = hasInt32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasInt32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalInt32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalInt32Array( [ 1, 3.14, -3.14, INT32_MAX+1 ] );\n\t\tbool = (\n\t\t\tisInt32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&      // truncation\n\t\t\tarr[ 2 ] === -3 &&     // truncation\n\t\t\tarr[ 3 ] === INT32_MIN // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasInt32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Int32Array` support.\n*\n* @module @stdlib/assert/has-int32array-support\n*\n* @example\n* var hasInt32ArraySupport = require( '@stdlib/assert/has-int32array-support' );\n*\n* var bool = hasInt32ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasInt32ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasInt32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( './../../has-own-property' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Symbol.iterator` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Symbol.iterator` support\n*\n* @example\n* var bool = hasIteratorSymbolSupport();\n* // returns <boolean>\n*/\nfunction hasIteratorSymbolSupport() {\n\treturn (\n\t\ttypeof Symbol === 'function' &&\n\t\ttypeof Symbol( 'foo' ) === 'symbol' &&\n\t\thasOwnProp( Symbol, 'iterator' ) &&\n\t\ttypeof Symbol.iterator === 'symbol'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasIteratorSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Symbol.iterator` support.\n*\n* @module @stdlib/assert/has-iterator-symbol-support\n*\n* @example\n* var hasIteratorSymbolSupport = require( '@stdlib/assert/has-iterator-symbol-support' );\n*\n* var bool = hasIteratorSymbolSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasIteratorSymbolSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasIteratorSymbolSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar GlobalMap = require( './map.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Map` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Map` support\n*\n* @example\n* var bool = hasMapSupport();\n* // returns <boolean>\n*/\nfunction hasMapSupport() {\n\tvar bool;\n\tvar key;\n\tvar map;\n\n\tif ( typeof GlobalMap !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tkey = {};\n\t\tmap = new GlobalMap();\n\t\tmap.set( key, 'beep' );\n\t\tbool = (\n\t\t\tmap.has( key ) &&\n\t\t\tmap.get( key ) === 'beep'\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasMapSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Map === 'function' ) ? Map : null;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Map` support.\n*\n* @module @stdlib/assert/has-map-support\n*\n* @example\n* var hasMapSupport = require( '@stdlib/assert/has-map-support' );\n*\n* var bool = hasMapSupport();\n* // returns <Boolean>\n*/\n\n// MODULES //\n\nvar hasMapSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasMapSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Buffer === 'function' ) ? Buffer : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBuffer = require( './../../is-buffer' );\nvar GlobalBuffer = require( './buffer.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Buffer` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Buffer` support\n*\n* @example\n* var bool = hasNodeBufferSupport();\n* // returns <boolean>\n*/\nfunction hasNodeBufferSupport() {\n\tvar bool;\n\tvar b;\n\n\tif ( typeof GlobalBuffer !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tif ( typeof GlobalBuffer.from === 'function' ) {\n\t\t\tb = GlobalBuffer.from( [ 1, 2, 3, 4 ] );\n\t\t} else {\n\t\t\tb = new GlobalBuffer( [ 1, 2, 3, 4 ] ); // Note: this is deprecated behavior starting in Node v6 (see https://nodejs.org/api/buffer.html#buffer_new_buffer_array)\n\t\t}\n\t\tbool = (\n\t\t\tisBuffer( b ) &&\n\t\t\tb[ 0 ] === 1 &&\n\t\t\tb[ 1 ] === 2 &&\n\t\t\tb[ 2 ] === 3 &&\n\t\t\tb[ 3 ] === 4\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasNodeBufferSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Buffer` support.\n*\n* @module @stdlib/assert/has-node-buffer-support\n*\n* @example\n* var hasNodeBufferSupport = require( '@stdlib/assert/has-node-buffer-support' );\n*\n* var bool = hasNodeBufferSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasNodeBufferSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasNodeBufferSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar evil = require( '@stdlib/utils/eval' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Proxy` support.\n*\n* @returns {boolean} boolean indicating if an environment has native `Proxy` support\n*\n* @example\n* var bool = hasProxySupport();\n* // returns <boolean>\n*/\nfunction hasProxySupport() {\n\tvar bool;\n\ttry {\n\t\tevil( '\"use strict\"; var handler = { \"get\": function get( t, n ) { return t[ n ] * 100; } }; var target = { \"beep\": 3.14 }; var p = new Proxy( target, handler ); var x = p.beep; if ( x !== 314 ) { throw new Error( \"native Proxy is not supported.\" ); }' );\n\t\tbool = true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasProxySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Proxy` support.\n*\n* @module @stdlib/assert/has-proxy-support\n*\n* @example\n* var hasProxySupport = require( '@stdlib/assert/has-proxy-support' );\n*\n* var bool = hasProxySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasProxySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasProxySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar GlobalSet = require( './set.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Set` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Set` support\n*\n* @example\n* var bool = hasSetSupport();\n* // returns <boolean>\n*/\nfunction hasSetSupport() {\n\tvar bool;\n\tvar val;\n\tvar set;\n\n\tif ( typeof GlobalSet !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tval = {};\n\t\tset = new GlobalSet();\n\t\tset.add( val );\n\t\tset.add( val );\n\t\tbool = set.has( val );\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasSetSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Set === 'function' ) ? Set : null;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Set` support.\n*\n* @module @stdlib/assert/has-set-support\n*\n* @example\n* var hasSetSupport = require( '@stdlib/assert/has-set-support' );\n*\n* var bool = hasSetSupport();\n* // returns <Boolean>\n*/\n\n// MODULES //\n\nvar hasSetSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasSetSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasSharedArrayBuffer = ( typeof SharedArrayBuffer === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `SharedArrayBuffer`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a `SharedArrayBuffer`\n*\n* @example\n* var SharedArrayBuffer = require( '@stdlib/array/shared-buffer' );\n*\n* try {\n*     var bool = isSharedArrayBuffer( new SharedArrayBuffer( 10 ) );\n*     // returns true\n* } catch ( err ) {\n*     console.log( 'Environment does not support SharedArrayBuffers.' );\n* }\n*\n* @example\n* var bool = isSharedArrayBuffer( [] );\n* // returns false\n*/\nfunction isSharedArrayBuffer( value ) {\n\treturn (\n\t\t( hasSharedArrayBuffer && value instanceof SharedArrayBuffer ) || // eslint-disable-line stdlib/require-globals, no-undef\n\t\tnativeClass( value ) === '[object SharedArrayBuffer]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSharedArrayBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a `SharedArrayBuffer`.\n*\n* @module @stdlib/assert/is-sharedarraybuffer\n*\n* @example\n* var SharedArrayBuffer = require( '@stdlib/array/shared-buffer' );\n* var isSharedArrayBuffer = require( '@stdlib/assert/is-sharedarraybuffer' );\n*\n* var bool;\n* try {\n*     bool = isSharedArrayBuffer( new SharedArrayBuffer( 10 ) );\n*     // returns true\n* } catch ( err ) {\n*     console.log( 'Environment does not support SharedArrayBuffers.' );\n* }\n* bool = isSharedArrayBuffer( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isSharedArrayBuffer = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isSharedArrayBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof SharedArrayBuffer === 'function' ) ? SharedArrayBuffer : null; // eslint-disable-line no-undef, stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isSharedArrayBuffer = require( './../../is-sharedarraybuffer' );\nvar GlobalSharedArrayBuffer = require( './sharedarraybuffer.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `SharedArrayBuffer` support.\n*\n* @returns {boolean} boolean indicating if an environment has `SharedArrayBuffer` support\n*\n* @example\n* var bool = hasSharedArrayBufferSupport();\n* // returns <boolean>\n*/\nfunction hasSharedArrayBufferSupport() { // eslint-disable-line id-length\n\tvar bool;\n\tvar b1;\n\tvar b2;\n\n\tif ( typeof GlobalSharedArrayBuffer !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tb1 = new GlobalSharedArrayBuffer( 16 );\n\t\tb2 = b1.slice( 4, 8 );\n\t\tbool = (\n\t\t\tisSharedArrayBuffer( b1 ) &&\n\t\t\tisSharedArrayBuffer( b2 ) &&\n\t\t\tb1.byteLength === 16 &&\n\t\t\tb2.byteLength === 4\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasSharedArrayBufferSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `SharedArrayBuffer` support.\n*\n* @module @stdlib/assert/has-sharedarraybuffer-support\n*\n* @example\n* var hasSharedArrayBufferSupport = require( '@stdlib/assert/has-sharedarraybuffer-support' );\n*\n* var bool = hasSharedArrayBufferSupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasSharedArrayBufferSupport = require( './main.js' ); // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nmodule.exports = hasSharedArrayBufferSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint8Array = ( typeof Uint8Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8Array\n*\n* @example\n* var bool = isUint8Array( new Uint8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8Array( [] );\n* // returns false\n*/\nfunction isUint8Array( value ) {\n\treturn (\n\t\t( hasUint8Array && value instanceof Uint8Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Uint8Array.\n*\n* @module @stdlib/assert/is-uint8array\n*\n* @example\n* var isUint8Array = require( '@stdlib/assert/is-uint8array' );\n*\n* var bool = isUint8Array( new Uint8Array( 10 ) );\n* // returns true\n*\n* bool = isUint8Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUint8Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUint8Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8Array === 'function' ) ? Uint8Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint8Array = require( './../../is-uint8array' );\nvar UINT8_MAX = require( '@stdlib/constants/uint8/max' );\nvar GlobalUint8Array = require( './uint8array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8Array` support\n*\n* @example\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT8_MAX+1, UINT8_MAX+2 ];\n\t\tarr = new GlobalUint8Array( arr );\n\t\tbool = (\n\t\t\tisUint8Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&           // truncation\n\t\t\tarr[ 2 ] === UINT8_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&           // wrap around\n\t\t\tarr[ 4 ] === 1              // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint8Array` support.\n*\n* @module @stdlib/assert/has-uint8array-support\n*\n* @example\n* var hasUint8ArraySupport = require( '@stdlib/assert/has-uint8array-support' );\n*\n* var bool = hasUint8ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint8ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint8ClampedArray = ( typeof Uint8ClampedArray === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint8ClampedArray.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint8ClampedArray\n*\n* @example\n* var bool = isUint8ClampedArray( new Uint8ClampedArray( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint8ClampedArray( [] );\n* // returns false\n*/\nfunction isUint8ClampedArray( value ) {\n\treturn (\n\t\t( hasUint8ClampedArray && value instanceof Uint8ClampedArray ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint8ClampedArray]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint8ClampedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Uint8ClampedArray.\n*\n* @module @stdlib/assert/is-uint8clampedarray\n*\n* @example\n* var isUint8ClampedArray = require( '@stdlib/assert/is-uint8clampedarray' );\n*\n* var bool = isUint8ClampedArray( new Uint8ClampedArray( 10 ) );\n* // returns true\n*\n* bool = isUint8ClampedArray( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUint8ClampedArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUint8ClampedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint8ClampedArray === 'function' ) ? Uint8ClampedArray : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint8ClampedArray = require( './../../is-uint8clampedarray' );\nvar GlobalUint8ClampedArray = require( './uint8clampedarray.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint8ClampedArray` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint8ClampedArray` support\n*\n* @example\n* var bool = hasUint8ClampedArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint8ClampedArraySupport() { // eslint-disable-line id-length\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint8ClampedArray !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = new GlobalUint8ClampedArray( [ -1, 0, 1, 3.14, 4.99, 255, 256 ] );\n\t\tbool = (\n\t\t\tisUint8ClampedArray( arr ) &&\n\t\t\tarr[ 0 ] === 0 &&   // clamped\n\t\t\tarr[ 1 ] === 0 &&\n\t\t\tarr[ 2 ] === 1 &&\n\t\t\tarr[ 3 ] === 3 &&   // round to nearest\n\t\t\tarr[ 4 ] === 5 &&   // round to nearest\n\t\t\tarr[ 5 ] === 255 &&\n\t\t\tarr[ 6 ] === 255    // clamped\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ClampedArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint8ClampedArray` support.\n*\n* @module @stdlib/assert/has-uint8clampedarray-support\n*\n* @example\n* var hasUint8ClampedArraySupport = require( '@stdlib/assert/has-uint8clampedarray-support' );\n*\n* var bool = hasUint8ClampedArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint8ClampedArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint8ClampedArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint16Array = ( typeof Uint16Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint16Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint16Array\n*\n* @example\n* var bool = isUint16Array( new Uint16Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint16Array( [] );\n* // returns false\n*/\nfunction isUint16Array( value ) {\n\treturn (\n\t\t( hasUint16Array && value instanceof Uint16Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint16Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Uint16Array.\n*\n* @module @stdlib/assert/is-uint16array\n*\n* @example\n* var isUint16Array = require( '@stdlib/assert/is-uint16array' );\n*\n* var bool = isUint16Array( new Uint16Array( 10 ) );\n* // returns true\n*\n* bool = isUint16Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUint16Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUint16Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint16Array === 'function' ) ? Uint16Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint16Array = require( './../../is-uint16array' );\nvar UINT16_MAX = require( '@stdlib/constants/uint16/max' );\nvar GlobalUint16Array = require( './uint16array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint16Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint16Array` support\n*\n* @example\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint16ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint16Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT16_MAX+1, UINT16_MAX+2 ];\n\t\tarr = new GlobalUint16Array( arr );\n\t\tbool = (\n\t\t\tisUint16Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT16_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint16Array` support.\n*\n* @module @stdlib/assert/has-uint16array-support\n*\n* @example\n* var hasUint16ArraySupport = require( '@stdlib/assert/has-uint16array-support' );\n*\n* var bool = hasUint16ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint16ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint16ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasUint32Array = ( typeof Uint32Array === 'function' ); // eslint-disable-line stdlib/require-globals\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Uint32Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Uint32Array\n*\n* @example\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isUint32Array( [] );\n* // returns false\n*/\nfunction isUint32Array( value ) {\n\treturn (\n\t\t( hasUint32Array && value instanceof Uint32Array ) || // eslint-disable-line stdlib/require-globals\n\t\tnativeClass( value ) === '[object Uint32Array]'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUint32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Uint32Array.\n*\n* @module @stdlib/assert/is-uint32array\n*\n* @example\n* var isUint32Array = require( '@stdlib/assert/is-uint32array' );\n*\n* var bool = isUint32Array( new Uint32Array( 10 ) );\n* // returns true\n*\n* bool = isUint32Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUint32Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUint32Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Uint32Array === 'function' ) ? Uint32Array : null; // eslint-disable-line stdlib/require-globals\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint32Array = require( './../../is-uint32array' );\nvar UINT32_MAX = require( '@stdlib/constants/uint32/max' );\nvar GlobalUint32Array = require( './uint32array.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `Uint32Array` support.\n*\n* @returns {boolean} boolean indicating if an environment has `Uint32Array` support\n*\n* @example\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\nfunction hasUint32ArraySupport() {\n\tvar bool;\n\tvar arr;\n\n\tif ( typeof GlobalUint32Array !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tarr = [ 1, 3.14, -3.14, UINT32_MAX+1, UINT32_MAX+2 ];\n\t\tarr = new GlobalUint32Array( arr );\n\t\tbool = (\n\t\t\tisUint32Array( arr ) &&\n\t\t\tarr[ 0 ] === 1 &&\n\t\t\tarr[ 1 ] === 3 &&            // truncation\n\t\t\tarr[ 2 ] === UINT32_MAX-2 && // truncation and wrap around\n\t\t\tarr[ 3 ] === 0 &&            // wrap around\n\t\t\tarr[ 4 ] === 1               // wrap around\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUint32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `Uint32Array` support.\n*\n* @module @stdlib/assert/has-uint32array-support\n*\n* @example\n* var hasUint32ArraySupport = require( '@stdlib/assert/has-uint32array-support' );\n*\n* var bool = hasUint32ArraySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasUint32ArraySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUint32ArraySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative integer value\n*\n* @example\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() >= 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative integer\n*\n* @example\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeInteger( null );\n* // returns false\n*/\nfunction isNonNegativeInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative integer.\n*\n* @module @stdlib/assert/is-nonnegative-integer\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' );\n*\n* var bool = isNonNegativeInteger( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeInteger( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( 3.14 );\n* // returns false\n*\n* bool = isNonNegativeInteger( null );\n* // returns false\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isObject;\n*\n* var bool = isNonNegativeInteger( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNonNegativeInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isNonNegativeInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\nvar isNonNegativeInteger = require( './../../is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\n// Range for a high surrogate\nvar OxD800 = 0xD800|0; // 55296\nvar OxDBFF = 0xDBFF|0; // 56319\n\n// Range for a low surrogate\nvar OxDC00 = 0xDC00|0; // 56320\nvar OxDFFF = 0xDFFF|0; // 57343\n\n\n// MAIN //\n\n/**\n* Tests if a position in a string marks the start of a UTF-16 surrogate pair.\n*\n* @private\n* @param {string} str - input string\n* @param {NonNegativeInteger} pos - position in string\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {RangeError} position must be a valid index in string\n* @returns {boolean} boolean indicating whether the string has a surrogate pair at a position\n*\n* @example\n* var out = hasUTF16SurrogatePairAt( '🌷', 0 );\n* // returns true\n*\n* @example\n* var out = hasUTF16SurrogatePairAt( '🌷', 1 );\n* // returns false\n*/\nfunction hasUTF16SurrogatePairAt( str, pos ) {\n\tvar ch1;\n\tvar ch2;\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isNonNegativeInteger( pos ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a valid position (i.e., a nonnegative integer). Value: `%s`.', pos ) );\n\t}\n\tif ( pos >= str.length ) {\n\t\tthrow new RangeError( format( 'invalid argument. Must provide a valid position (i.e., within string bounds). Value: `%u`.', pos ) );\n\t}\n\tch1 = str.charCodeAt( pos );\n\tch2 = str.charCodeAt( pos + 1 );\n\treturn ch1 >= OxD800 && ch1 <= OxDBFF && ch2 >= OxDC00 && ch2 <= OxDFFF;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasUTF16SurrogatePairAt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a position in a string marks the start of a UTF-16 surrogate pair.\n*\n* @module @stdlib/assert/has-utf16-surrogate-pair-at\n*\n* @example\n* var hasUTF16SurrogatePairAt = require( '@stdlib/assert/has-utf16-surrogate-pair-at' );\n*\n* var bool = hasUTF16SurrogatePairAt( '🌷', 0 );\n* // returns true\n*\n* bool = hasUTF16SurrogatePairAt( '🌷', 1 );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasUTF16SurrogatePairAt = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasUTF16SurrogatePairAt;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests for native WebAssembly support.\n*\n* @returns {boolean} boolean indicating if an environment has native WebAssembly support\n*\n* @example\n* var bool = hasWebAssemblySupport();\n* // returns <boolean>\n*/\nfunction hasWebAssemblySupport() {\n\treturn ( typeof WebAssembly === 'object' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasWebAssemblySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native WebAssembly support.\n*\n* @module @stdlib/assert/has-wasm-support\n*\n* @example\n* var hasWebAssemblySupport = require( '@stdlib/assert/has-wasm-support' );\n*\n* var bool = hasWebAssemblySupport();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar hasWebAssemblySupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasWebAssemblySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar GlobalWeakMap = require( './weakmap.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `WeakMap` support.\n*\n* @returns {boolean} boolean indicating if an environment has `WeakMap` support\n*\n* @example\n* var bool = hasWeakMapSupport();\n* // returns <boolean>\n*/\nfunction hasWeakMapSupport() {\n\tvar bool;\n\tvar key;\n\tvar wm;\n\n\tif ( typeof GlobalWeakMap !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tkey = {};\n\t\twm = new GlobalWeakMap();\n\t\twm.set( key, 'beep' );\n\t\tbool = (\n\t\t\twm.has( key ) &&\n\t\t\twm.get( key ) === 'beep'\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasWeakMapSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof WeakMap === 'function' ) ? WeakMap : null;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `WeakMap` support.\n*\n* @module @stdlib/assert/has-weakmap-support\n*\n* @example\n* var hasWeakMapSupport = require( '@stdlib/assert/has-weakmap-support' );\n*\n* var bool = hasWeakMapSupport();\n* // returns <Boolean>\n*/\n\n// MODULES //\n\nvar hasWeakMapSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasWeakMapSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar GlobalWeakSet = require( './weakset.js' );\n\n\n// MAIN //\n\n/**\n* Tests for native `WeakSet` support.\n*\n* @returns {boolean} boolean indicating if an environment has `WeakSet` support\n*\n* @example\n* var bool = hasWeakSetSupport();\n* // returns <boolean>\n*/\nfunction hasWeakSetSupport() {\n\tvar bool;\n\tvar val;\n\tvar ws;\n\n\tif ( typeof GlobalWeakSet !== 'function' ) {\n\t\treturn false;\n\t}\n\t// Test basic support...\n\ttry {\n\t\tval = {};\n\t\tws = new GlobalWeakSet();\n\t\tws.add( val );\n\t\tws.add( val );\n\t\tbool = ws.has( val );\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\tbool = false;\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasWeakSetSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof WeakSet === 'function' ) ? WeakSet : null;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test for native `WeakSet` support.\n*\n* @module @stdlib/assert/has-weakset-support\n*\n* @example\n* var hasWeakSetSupport = require( '@stdlib/assert/has-weakset-support' );\n*\n* var bool = hasWeakSetSupport();\n* // returns <Boolean>\n*/\n\n// MODULES //\n\nvar hasWeakSetSupport = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = hasWeakSetSupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests whether a value has in its prototype chain a specified constructor as a prototype property.\n*\n* @param {*} value - value to test\n* @param {Function} constructor - constructor to test against\n* @throws {TypeError} constructor must be callable\n* @returns {boolean} boolean indicating whether a value is an instance of a provided constructor\n*\n* @example\n* var bool = instanceOf( [], Array );\n* // returns true\n*\n* @example\n* var bool = instanceOf( {}, Object ); // exception\n* // returns true\n*\n* @example\n* var bool = instanceOf( 'beep', String );\n* // returns false\n*\n* @example\n* var bool = instanceOf( null, Object );\n* // returns false\n*\n* @example\n* var bool = instanceOf( 5, Object );\n* // returns false\n*/\nfunction instanceOf( value, constructor ) {\n\t// TODO: replace with `isCallable` check\n\tif ( typeof constructor !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be callable. Value: `%s`.', constructor ) );\n\t}\n\treturn ( value instanceof constructor );\n}\n\n\n// EXPORTS //\n\nmodule.exports = instanceOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a value has in its prototype chain a specified constructor as a prototype property.\n*\n* @module @stdlib/assert/instance-of\n*\n* @example\n* var instanceOf = require( '@stdlib/assert/instance-of' );\n*\n* var bool = instanceOf( [], Array );\n* // returns true\n*\n* bool = instanceOf( {}, Object ); // exception\n* // returns true\n*\n* bool = instanceOf( 'beep', String );\n* // returns false\n*\n* bool = instanceOf( null, Object );\n* // returns false\n*\n* bool = instanceOf( 5, Object );\n* // returns false\n*/\n\n// MODULES //\n\nvar instanceOf = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = instanceOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\n\n\n// VARIABLES //\n\n/**\n* Matches parts of a URI according to RFC 3986.\n*\n* ```text\n* <scheme name> : <hierarchical part > [ ? <query> ] [ # <fragment> ]\n* ```\n*\n* Regular expression: `/(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?[^#]*)?(?:#.*)?/`\n*\n* -   `(?:([^:\\/?#]+):)`\n*\n*     -   match the scheme, including the `:`, but only capture the scheme name\n*\n* -   `?`\n*\n*     -   match the scheme zero or one times\n*\n* -   `(?:\\/\\/([^\\/?#]*))`\n*\n*     -   match the hierarchical part which is everything which is not a `/`, `#`, or `?`, but only capture whatever comes after the `//`\n*\n* -   `?`\n*\n*     -   match the hierarchical part zero or one times\n*\n* -   `([^?#]*)`\n*\n*     -   capture everything (the path) until meeting a `?` or `#`\n*\n* -   `(?:\\?[^#]*)`\n*\n*     -   match, but don't capture, a query\n*\n* -   `?`\n*\n*     -   match the query zero or one times\n*\n* -   `(?:#.*)`\n*\n*     -   match, but don't capture, a fragment\n*\n* -   `?`\n*\n*     -   match the fragment zero or one times\n*\n* @private\n* @constant\n* @type {RegExp}\n* @default /(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?[^#]*)?(?:#.*)?/\n*/\nvar RE_URI = /(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?[^#]*)?(?:#.*)?/; // eslint-disable-line no-useless-escape\n\n// Illegal characters (anything which is not in between the square brackets):\nvar RE_ILLEGALS = /[^a-z0-9:\\/?#\\[\\]@!$&'()*+,;=.\\-_~%]/i; // eslint-disable-line no-useless-escape\n\n// Incomplete HEX escapes:\nvar RE_HEX1 = /%[^0-9a-f]/i;\nvar RE_HEX2 = /%[0-9a-f](:?[^0-9a-f]|$)/i;\n\n// If authority is not present, path must not begin with '//'\nvar RE_PATH = /^\\/\\//;\n\n// Scheme must begin with a letter, then consist of letters, digits, '+', '.', or '-' => e.g., 'http', 'https', 'ftp'\nvar RE_SCHEME = /^[a-z][a-z0-9+\\-.]*$/;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a URI.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a URI\n*\n* @example\n* var bool = isURI( 'http://google.com' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'http://localhost/' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'http://example.w3.org/path%20with%20spaces.html' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'http://example.w3.org/%20' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'ftp://ftp.is.co.za/rfc/rfc1808.txt' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'ftp://ftp.is.co.za/../../../rfc/rfc1808.txt' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'http://www.ietf.org/rfc/rfc2396.txt' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'ldap://[2001:db8::7]/c=GB?objectClass?one' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'mailto:John.Doe@example.com' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'news:comp.infosystems.www.servers.unix' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'tel:+1-816-555-1212' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'telnet://192.0.2.16:80/' );\n* // returns true\n*\n* @example\n* var bool = isURI( 'urn:oasis:names:specification:docbook:dtd:xml:4.1.2' );\n* // returns true\n*\n* @example\n* // No scheme:\n* var bool = isURI( '' );\n* // returns false\n*\n* @example\n* // No scheme:\n* var bool = isURI( 'foo' );\n* // returns false\n*\n* @example\n* // No scheme:\n* var bool = isURI( 'foo@bar' );\n* // returns false\n*\n* @example\n* // No scheme:\n* var bool = isURI( '://foo/' );\n* // returns false\n*\n* @example\n* // Illegal characters:\n* var bool = isURI( 'http://<foo>' );\n* // returns false\n*\n* @example\n* // Invalid path:\n* var bool = isURI( 'http:////foo.html' );\n* // returns false\n*\n* @example\n* // Incomplete hex escapes...\n* var bool = isURI( 'http://example.w3.org/%a' );\n* // returns false\n*\n* @example\n* var bool = isURI( 'http://example.w3.org/%a/foo' );\n* // returns false\n*\n* @example\n* var bool = isURI( 'http://example.w3.org/%at' );\n* // returns false\n*/\nfunction isURI( value ) {\n\tvar authority;\n\tvar scheme;\n\tvar parts;\n\tvar path;\n\n\tif ( !isString( value ) ) {\n\t\treturn false;\n\t}\n\t// Check for illegal characters:\n\tif ( RE_ILLEGALS.test( value ) ) {\n\t\treturn false;\n\t}\n\t// Check for incomplete HEX escapes:\n\tif (\n\t\tRE_HEX1.test( value ) ||\n\t\tRE_HEX2.test( value )\n\t) {\n\t\treturn false;\n\t}\n\t// Split the string into various URI components:\n\tparts = value.match( RE_URI );\n\tscheme = parts[ 1 ];\n\tauthority = parts[ 2 ];\n\tpath = parts[ 3 ];\n\n\t// Scheme is required and must be valid:\n\tif (\n\t\t!scheme ||\n\t\t!scheme.length ||\n\t\t!RE_SCHEME.test( scheme.toLowerCase() )\n\t) {\n\t\treturn false;\n\t}\n\t// If authority is not present, path must not begin with `//`:\n\tif (\n\t\t!authority &&\n\t\tRE_PATH.test( path )\n\t) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isURI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a URI.\n*\n* @module @stdlib/assert/is-uri\n*\n* @example\n* var isURI = require( '@stdlib/assert/is-uri' );\n*\n* var bool = isURI( 'http://google.com' );\n* // returns true\n*\n* bool = isURI( 'http://localhost/' );\n* // returns true\n*\n* bool = isURI( 'http://example.w3.org/path%20with%20spaces.html' );\n* // returns true\n*\n* bool = isURI( 'http://example.w3.org/%20' );\n* // returns true\n*\n* bool = isURI( 'ftp://ftp.is.co.za/rfc/rfc1808.txt' );\n* // returns true\n*\n* bool = isURI( 'ftp://ftp.is.co.za/../../../rfc/rfc1808.txt' );\n* // returns true\n*\n* bool = isURI( 'http://www.ietf.org/rfc/rfc2396.txt' );\n* // returns true\n*\n* bool = isURI( 'ldap://[2001:db8::7]/c=GB?objectClass?one' );\n* // returns true\n*\n* bool = isURI( 'mailto:John.Doe@example.com' );\n* // returns true\n*\n* bool = isURI( 'news:comp.infosystems.www.servers.unix' );\n* // returns true\n*\n* bool = isURI( 'tel:+1-816-555-1212' );\n* // returns true\n*\n* bool = isURI( 'telnet://192.0.2.16:80/' );\n* // returns true\n*\n* bool = isURI( 'urn:oasis:names:specification:docbook:dtd:xml:4.1.2' );\n* // returns true\n*\n* // No scheme:\n* bool = isURI( '' );\n* // returns false\n*\n* // No scheme:\n* bool = isURI( 'foo' );\n* // returns false\n*\n* // No scheme:\n* bool = isURI( 'foo@bar' );\n* // returns false\n*\n* // No scheme:\n* bool = isURI( '://foo/' );\n* // returns false\n*\n* // Illegal characters:\n* bool = isURI( 'http://<foo>' );\n* // returns false\n*\n* // Invalid path:\n* bool = isURI( 'http:////foo.html' );\n* // returns false\n*\n* // Incomplete hex escapes...\n* bool = isURI( 'http://example.w3.org/%a' );\n* // returns false\n*\n* bool = isURI( 'http://example.w3.org/%a/foo' );\n* // returns false\n*\n* bool = isURI( 'http://example.w3.org/%at' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isURI = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isURI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isURI = require( './../../is-uri' );\n\n\n// VARIABLES //\n\nvar RE_HTTPS = /^https?:\\/\\//;\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an absolute HTTP(S) URI.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an absolute URI\n*\n* @example\n* var bool = isAbsoluteHttpURI( 'https://example.com' );\n* // returns true\n*\n* @example\n* var bool = isAbsoluteHttpURI( 'https://example.com/docs#heading' );\n* // returns true\n*\n* @example\n* var bool = isAbsoluteHttpURI( 'ftp://example.com' );\n* // returns false\n*\n* @example\n* var bool = isAbsoluteHttpURI( '/dashboard' );\n* // returns false\n*\n* @example\n* var bool = isAbsoluteHttpURI( './png.json' );\n* // returns false\n*\n* @example\n* var bool = isAbsoluteHttpURI( null );\n* // returns false\n*/\nfunction isAbsoluteHttpURI( value ) {\n\treturn isURI( value ) && RE_HTTPS.test( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isAbsoluteHttpURI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a value is an absolute HTTP(S) URI.\n*\n* @module @stdlib/assert/is-absolute-http-uri\n*\n* @example\n* var isAbsoluteHttpURI = require( '@stdlib/assert/is-absolute-http-uri' );\n*\n* var bool = isAbsoluteHttpURI( 'http://example.com' );\n* // returns true\n*\n* bool = isAbsoluteHttpURI( './beep/boop' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isAbsoluteHttpURI = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isAbsoluteHttpURI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if the current process is running on Windows.\n*\n* @module @stdlib/assert/is-windows\n* @type {boolean}\n*\n* @example\n* var PLATFORM = require( '@stdlib/os/platform' );\n* var IS_WINDOWS = require( '@stdlib/assert/is-windows' );\n*\n* if ( IS_WINDOWS ) {\n*     console.log( 'Running on Windows...' );\n* } else {\n*     console.log( 'Running on %s...', PLATFORM );\n* }\n*/\n\n// MODULES //\n\nvar PLATFORM = require( '@stdlib/os/platform' );\n\n\n// MAIN //\n\n/**\n* Boolean indicating if the current process is running on Windows.\n*\n* @constant\n* @type {boolean}\n*/\nvar IS_WINDOWS = ( PLATFORM === 'win32' );\n\n\n// EXPORTS //\n\nmodule.exports = IS_WINDOWS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a POSIX absolute path.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a POSIX absolute path\n*\n* @example\n* var bool = isAbsolutePath( '/foo/bar/baz' );\n* // returns true\n*\n* @example\n* var bool = isAbsolutePath( 'foo/bar/baz' );\n* // returns false\n*/\nfunction isAbsolutePath( value ) {\n\t// Must be string longer than `0` characters and start with a forward slash '/':\n\treturn (\n\t\tisString( value ) &&\n\t\tvalue.length > 0 &&\n\t\tvalue.charCodeAt( 0 ) === 47\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isAbsolutePath;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Windows absolute path.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a Windows absolute path\n*\n* @example\n* var bool = isAbsolutePath( 'C:\\\\foo\\\\bar\\\\baz' );\n* // returns true\n*\n* @example\n* var bool = isAbsolutePath( 'foo\\\\bar\\\\baz' );\n* // returns false\n*/\nfunction isAbsolutePath( value ) {\n\tvar code;\n\tvar len;\n\tif ( !isString( value ) ) {\n\t\treturn false;\n\t}\n\tlen = value.length;\n\tif ( len === 0 ) {\n\t\treturn false;\n\t}\n\tcode = value.charCodeAt( 0 );\n\n\t// Check if the string begins with either a forward '/' or backward slash '\\\\':\n\tif ( code === 47 || code === 92 ) {\n\t\treturn true;\n\t}\n\t// Check for a device root (e.g., C:\\\\)...\n\tif (\n\t\t(code >= 65 && code <= 90) || // A-Z\n\t\t(code >= 97 && code <= 122)   // a-z\n\t) {\n\t\t// Check if the string has a colon ':' character:\n\t\tif ( len > 2 && value.charCodeAt( 1 ) === 58 ) {\n\t\t\tcode = value.charCodeAt( 2 );\n\n\t\t\t// Check for either a forward or backward slash:\n\t\t\tif ( code === 47 || code === 92 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isAbsolutePath;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an absolute path.\n*\n* @module @stdlib/assert/is-absolute-path\n*\n* @example\n* var IS_WINDOWS = require( '@stdlib/assert/is-windows' );\n* var isAbsolutePath = require( '@stdlib/assert/is-absolute-path' );\n*\n* var bool;\n* if ( IS_WINDOWS ) {\n*     bool = isAbsolutePath( 'C:\\\\foo\\\\bar\\\\baz' );\n*     // returns true\n* } else {\n*     bool = isAbsolutePath( '/foo/bar/baz' );\n*     // returns true\n* }\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar IS_WINDOWS = require( './../../is-windows' );\nvar isAbsolutePathPosix = require( './posix.js' );\nvar isAbsolutePathWin32 = require( './win32.js' );\n\n\n// MAIN //\n\nvar isAbsolutePath;\nif ( IS_WINDOWS ) {\n\tisAbsolutePath = isAbsolutePathWin32;\n} else {\n\tisAbsolutePath = isAbsolutePathPosix;\n}\nsetReadOnly( isAbsolutePath, 'posix', isAbsolutePathPosix );\nsetReadOnly( isAbsolutePath, 'win32', isAbsolutePathWin32 );\n\n\n// EXPORTS //\n\nmodule.exports = isAbsolutePath;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isURI = require( './../../is-uri' );\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an absolute URI.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an absolute URI\n*\n* @example\n* var bool = isAbsoluteURI( 'https://example.com' );\n* // returns true\n*\n* @example\n* var bool = isAbsoluteURI( 'https://example.com/docs#heading' );\n* // returns true\n*\n* @example\n* var bool = isAbsoluteURI( '/dashboard' );\n* // returns false\n*\n* @example\n* var bool = isAbsoluteURI( './png.json' );\n* // returns false\n*\n* @example\n* var bool = isAbsoluteURI( null );\n* // returns false\n*/\nfunction isAbsoluteURI( value ) {\n\treturn isURI( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isAbsoluteURI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a value is an absolute URI.\n*\n* @module @stdlib/assert/is-absolute-uri\n*\n* @example\n* var isAbsoluteURI = require( '@stdlib/assert/is-absolute-uri' );\n*\n* var bool = isAbsoluteURI( 'http://example.com' );\n* // returns true\n*\n* bool = isAbsoluteURI( './beep/boop' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isAbsoluteURI = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isAbsoluteURI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptor = require( '@stdlib/utils/property-descriptor' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property has an accessor descriptor.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property has an accessor descriptor\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function getter() {\n*     return 'beep';\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'get': getter\n* });\n*\n* var bool = isAccessorProperty( obj, 'boop' );\n* // returns false\n*\n* bool = isAccessorProperty( obj, 'beep' );\n* // returns true\n*/\nfunction isAccessorProperty( value, property ) {\n\tvar desc = propertyDescriptor( value, property );\n\treturn (\n\t\tdesc !== null &&\n\t\t(\n\t\t\ttypeof desc.get === 'function' ||\n\t\t\ttypeof desc.set === 'function'\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isAccessorProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own property has an accessor descriptor.\n*\n* @module @stdlib/assert/is-accessor-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isAccessorProperty = require( '@stdlib/assert/is-accessor-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function getter() {\n*     return 'beep';\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'get': getter\n* });\n*\n* var bool = isAccessorProperty( obj, 'boop' );\n* // returns false\n*\n* bool = isAccessorProperty( obj, 'beep' );\n* // returns true\n*/\n\n// MODULES //\n\nvar isAccessorProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isAccessorProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptorIn = require( '@stdlib/utils/property-descriptor-in' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own or inherited property has an accessor descriptor.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property has an accessor descriptor\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function getter() {\n*     return 'beep';\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'get': getter\n* });\n*\n* var bool = isAccessorPropertyIn( obj, 'boop' );\n* // returns false\n*\n* bool = isAccessorPropertyIn( obj, 'beep' );\n* // returns true\n*/\nfunction isAccessorPropertyIn( value, property ) {\n\tvar desc = propertyDescriptorIn( value, property );\n\treturn (\n\t\tdesc !== null &&\n\t\t(\n\t\t\ttypeof desc.get === 'function' ||\n\t\t\ttypeof desc.set === 'function'\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isAccessorPropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own or inherited property has an accessor descriptor.\n*\n* @module @stdlib/assert/is-accessor-property-in\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isAccessorPropertyIn = require( '@stdlib/assert/is-accessor-property-in' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function getter() {\n*     return 'beep';\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'get': getter\n* });\n*\n* var bool = isAccessorPropertyIn( obj, 'boop' );\n* // returns false\n*\n* bool = isAccessorPropertyIn( obj, 'beep' );\n* // returns true\n*/\n\n// MODULES //\n\nvar isAccessorPropertyIn = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isAccessorPropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an alphagram.\n*\n* @param {*} x - value to test\n* @returns {boolean} boolean indicating if a value is an alphagram\n*\n* @example\n* var out = isAlphagram( 'beep' );\n* // returns true\n*\n* @example\n* var out = isAlphagram( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var out = isAlphagram( 'zba' );\n* // returns false\n*\n* @example\n* var out = isAlphagram( '' );\n* // returns false\n*\n* @example\n* var out = isAlphagram( 123 );\n* // returns false\n*/\nfunction isAlphagram( x ) {\n\tvar len;\n\tvar i;\n\n\tif ( !isString( x ) ) {\n\t\treturn false;\n\t}\n\tlen = x.length;\n\tif ( !len ) {\n\t\treturn false;\n\t}\n\tfor ( i = 1; i < len; i++ ) {\n\t\tif ( x[ i-1 ] > x[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isAlphagram;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an alphagram.\n*\n* @module @stdlib/assert/is-alphagram\n*\n* @example\n* var isAlphagram = require( '@stdlib/assert/is-alphagram' );\n*\n* var out = isAlphagram( 'beep' );\n* // returns true\n*\n* out = isAlphagram( 'zba' );\n* // returns false\n*\n* out = isAlphagram( '' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isAlphagram = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isAlphagram;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\n\n\n// VARIABLES //\n\n// Character codes:\nvar ZERO = 48;\nvar NINE = 57;\nvar A = 65;\nvar Z = 90;\nvar a = 97;\nvar z = 122;\n\n\n// MAIN //\n\n/**\n* Tests whether a string contains only alphanumeric characters.\n*\n* @param {*} x - value to test\n* @returns {boolean} boolean indicating if a string contains only alphanumeric characters\n*\n* @example\n* var out = isAlphaNumeric( 'abc123def456' );\n* // returns true\n*\n* @example\n* var out = isAlphaNumeric( '0xffffff' );\n* // returns true\n*\n* @example\n* var out = isAlphaNumeric( '123' );\n* // returns true\n*\n* @example\n* var out = isAlphaNumeric( '' );\n* // returns false\n*\n* @example\n* var out = isAlphaNumeric( 123 );\n* // returns false\n*/\nfunction isAlphaNumeric( x ) {\n\tvar len;\n\tvar ch;\n\tvar i;\n\tif ( !isString( x ) ) {\n\t\treturn false;\n\t}\n\tlen = x.length;\n\tif ( len === 0 ) {\n\t\treturn false;\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tch = x.charCodeAt( i );\n\t\tif (\n\t\t\t(ch < ZERO || ch > NINE) &&\n\t\t\t(ch < a || ch > z) &&\n\t\t\t(ch < A || ch > Z)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isAlphaNumeric;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a string contains only alphanumeric characters.\n*\n* @module @stdlib/assert/is-alphanumeric\n*\n* @example\n* var isAlphaNumeric = require( '@stdlib/assert/is-alphanumeric' );\n*\n* var out = isAlphaNumeric( 'abc123a' );\n* // returns true\n*\n* out = isAlphaNumeric( '0xffffff' );\n* // returns true\n*\n* out = isAlphaNumeric( '' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isAlphaNumeric = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isAlphaNumeric;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lowercase = require( '@stdlib/string/lowercase' );\nvar replace = require( '@stdlib/string/replace' );\nvar isString = require( './../../is-string' ).isPrimitive;\nvar format = require( '@stdlib/string/format' );\n\n\n// VARIABLES //\n\nvar RE_NON_ALPHANUMERIC = /[^a-z0-9]/g;\n\n\n// FUNCTIONS //\n\n/**\n* Comparator function for sorting characters in ascending order.\n*\n* @private\n* @param {string} a - character\n* @param {string} b - character\n* @returns {number} comparison value\n*/\nfunction ascending( a, b ) {\n\tif ( a < b ) {\n\t\treturn -1;\n\t}\n\tif ( a === b ) {\n\t\treturn 0;\n\t}\n\treturn 1;\n}\n\n\n// MAIN //\n\n/**\n* Tests if a value is an anagram.\n*\n* @param {string} str - comparison string\n* @param {*} x - value to test\n* @throws {TypeError} first argument must be a string\n* @returns {boolean} boolean indicating if a value is an anagram\n*\n* @example\n* var bool = isAnagram( 'I am a weakish speller', 'William Shakespeare' );\n* // returns true\n*\n* @example\n* var bool = isAnagram( 'bat', 'tabba' );\n* // returns false\n*/\nfunction isAnagram( str, x ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\tif ( !isString( x ) ) {\n\t\treturn false;\n\t}\n\tstr = lowercase( str );\n\tstr = replace( str, RE_NON_ALPHANUMERIC, '' );\n\tx = lowercase( x );\n\tx = replace( x, RE_NON_ALPHANUMERIC, '' );\n\tif ( str.length !== x.length ) {\n\t\treturn false;\n\t}\n\tstr = str.split( '' )\n\t\t.sort( ascending )\n\t\t.join( '' );\n\tx = x.split( '' )\n\t\t.sort( ascending )\n\t\t.join( '' );\n\treturn ( str === x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isAnagram;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an anagram.\n*\n* @module @stdlib/assert/is-anagram\n*\n* @example\n* var isAnagram = require( '@stdlib/assert/is-anagram' );\n*\n* var bool = isAnagram( 'I am a weakish speller', 'William Shakespeare' );\n* // returns true\n*\n* bool = isAnagram( 'bat', 'tabba' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isAnagram = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isAnagram;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn ( nativeClass( value ) === '[object Arguments]' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArguments = require( './main.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment returns the expected internal class of the `arguments` object.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment behaves as expected\n*\n* @example\n* var bool = detect();\n* // returns <boolean>\n*/\nfunction detect() {\n\treturn isArguments( arguments );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isEnum = require( './native.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Detects whether an environment has a bug where String indices are not detected as \"enumerable\" properties. Observed in Node v0.10.\n*\n* @private\n* @returns {boolean} boolean indicating whether an environment has the bug\n*/\nfunction detect() {\n\treturn !isEnum.call( 'beep', '0' );\n}\n\n\n// MAIN //\n\nbool = detect();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @private\n* @name isEnumerableProperty\n* @type {Function}\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nvar isEnumerableProperty = Object.prototype.propertyIsEnumerable;\n\n\n// EXPORTS //\n\nmodule.exports = isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' );\nvar isnan = require( './../../is-nan' ).isPrimitive;\nvar isInteger = require( './../../is-integer' ).isPrimitive;\nvar isEnum = require( './native.js' );\nvar hasStringEnumBug = require( './has_string_enumerability_bug.js' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is enumerable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\nfunction isEnumerableProperty( value, property ) {\n\tvar bool;\n\tif (\n\t\tvalue === void 0 ||\n\t\tvalue === null\n\t) {\n\t\treturn false;\n\t}\n\tbool = isEnum.call( value, property );\n\tif ( !bool && hasStringEnumBug && isString( value ) ) {\n\t\t// Note: we only check for indices, as properties attached to a `String` object are properly detected as enumerable above.\n\t\tproperty = +property;\n\t\treturn (\n\t\t\t!isnan( property ) &&\n\t\t\tisInteger( property ) &&\n\t\t\tproperty >= 0 &&\n\t\t\tproperty < value.length\n\t\t);\n\t}\n\treturn bool;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own property is enumerable.\n*\n* @module @stdlib/assert/is-enumerable-property\n*\n* @example\n* var isEnumerableProperty = require( '@stdlib/assert/is-enumerable-property' );\n*\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isEnumerableProperty( beep, 'boop' );\n* // returns true\n*\n* bool = isEnumerableProperty( beep, 'hasOwnProperty' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isEnumerableProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( './../../has-own-property' );\nvar isEnumerableProperty = require( './../../is-enumerable-property' );\nvar isArray = require( './../../is-array' );\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/uint32/max' );\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an `arguments` object.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `arguments` object\n*\n* @example\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* @example\n* var bool = isArguments( [] );\n* // returns false\n*/\nfunction isArguments( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\t!isArray( value ) &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH &&\n\t\thasOwnProp( value, 'callee' ) &&\n\t\t!isEnumerableProperty( value, 'callee' )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an `arguments` object.\n*\n* @module @stdlib/assert/is-arguments\n*\n* @example\n* var isArguments = require( '@stdlib/assert/is-arguments' );\n*\n* function foo() {\n*     return arguments;\n* }\n*\n* var bool = isArguments( foo() );\n* // returns true\n*\n* bool = isArguments( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasArgumentsClass = require( './detect.js' );\nvar main = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar isArguments;\nif ( hasArgumentsClass ) {\n\tisArguments = main;\n} else {\n\tisArguments = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArguments;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array of arrays.\n*\n* @module @stdlib/assert/is-array-array\n*\n* @example\n* var isArrayArray = require( '@stdlib/assert/is-array-array' );\n*\n* var bool = isArrayArray( [ [], [] ] );\n* // returns true\n*\n* bool = isArrayArray( [ {}, {} ] );\n* // returns false\n*\n* bool = isArrayArray( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isArrayArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arrayfun = require( './../../tools/array-function' );\nvar isArray = require( './../../is-array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array of arrays.\n*\n* @name isArrayArray\n* @type {Function}\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an array of arrays\n*\n* @example\n* var bool = isArrayArray( [ [], [] ] );\n* // returns true\n*\n* bool = isArrayArray( [ {}, {} ] );\n* // returns false\n*\n* bool = isArrayArray( [] );\n* // returns false\n*/\nvar isArrayArray = arrayfun( isArray );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\nvar MAX_ARRAY_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a valid array length.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a valid array length\n*\n* @example\n* var bool = isArrayLength( 3 );\n* // returns true\n*\n* @example\n* var bool = isArrayLength( 3.14 );\n* // returns false\n*/\nfunction isArrayLength( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue >= 0 &&\n\t\tvalue <= MAX_ARRAY_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLength;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a valid array length.\n*\n* @module @stdlib/assert/is-array-length\n*\n* @example\n* var isArrayLength = require( '@stdlib/assert/is-array-length' );\n*\n* var bool = isArrayLength( 5 );\n* // returns true\n*\n* bool = isArrayLength( 2.0e200 );\n* // returns false\n*\n* bool = isArrayLength( -3.14 );\n* // returns false\n*\n* bool = isArrayLength( null );\n* // returns false\n*/\n\n// MODULES //\n\nvar isArrayLength = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLength;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is array-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is array-like\n*\n* @example\n* var bool = isArrayLike( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLike( {'length':10} );\n* // returns true\n*/\nfunction isArrayLike( value ) {\n\treturn (\n\t\tvalue !== void 0 &&\n\t\tvalue !== null &&\n\t\ttypeof value !== 'function' &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is array-like.\n*\n* @module @stdlib/assert/is-array-like\n*\n* @example\n* var isArrayLike = require( '@stdlib/assert/is-array-like' );\n*\n* var bool = isArrayLike( [] );\n* // returns true\n*\n* bool = isArrayLike( { 'length': 10 } );\n* // returns true\n*\n* bool = isArrayLike( 'beep' );\n* // returns true\n*/\n\n// MODULES //\n\nvar isArrayLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math/base/assert/is-integer' );\nvar MAX_LENGTH = require( '@stdlib/constants/array/max-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is an array-like object\n*\n* @example\n* var bool = isArrayLikeObject( [] );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( { 'length':10 } );\n* // returns true\n*\n* @example\n* var bool = isArrayLikeObject( 'beep' );\n* // returns false\n*/\nfunction isArrayLikeObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.length === 'number' &&\n\t\tisInteger( value.length ) &&\n\t\tvalue.length >= 0 &&\n\t\tvalue.length <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLikeObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object.\n*\n* @module @stdlib/assert/is-array-like-object\n*\n* @example\n* var isArrayLikeObject = require( '@stdlib/assert/is-array-like-object' );\n*\n* var bool = isArrayLikeObject( [] );\n* // returns true\n*\n* bool = isArrayLikeObject( { 'length':10 } );\n* // returns true\n*\n* bool = isArrayLikeObject( 'beep' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isArrayLikeObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayLikeObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\n\n\n// MAIN //\n\nvar isArrayBufferView = constantFunction( false );\n\n\n// EXPORTS //\n\nmodule.exports = isArrayBufferView;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( '@stdlib/utils/constructor-name' );\nvar fcnName = require( '@stdlib/utils/function-name' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar hasFloat64ArraySupport = require( './../../has-float64array-support' );\nvar Float64Array = require( '@stdlib/array/float64' );\nvar CTORS = require( './ctors.js' );\nvar NAMES = require( './names.json' );\n\n\n// VARIABLES //\n\n// Abstract `TypedArray` class:\nvar TypedArray = ( hasFloat64ArraySupport() ) ? getPrototypeOf( Float64Array ) : Dummy; // eslint-disable-line max-len\n\n// Ensure abstract typed array class has expected name:\nTypedArray = ( fcnName( TypedArray ) === 'TypedArray' ) ? TypedArray : Dummy;\n\n\n// FUNCTIONS //\n\n/**\n* Dummy constructor.\n*\n* @private\n*/\nfunction Dummy() {} // eslint-disable-line no-empty-function\n\n\n// MAIN //\n\n/**\n* Tests if a value is a typed array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a typed array\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n*\n* var bool = isTypedArray( new Int8Array( 10 ) );\n* // returns true\n*/\nfunction isTypedArray( value ) {\n\tvar v;\n\tvar i;\n\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for the abstract class...\n\tif ( value instanceof TypedArray ) {\n\t\treturn true;\n\t}\n\t// Check for typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired class...\n\twhile ( value ) {\n\t\tv = ctorName( value );\n\t\tfor ( i = 0; i < NAMES.length; i++ ) {\n\t\t\tif ( NAMES[ i ] === v ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isTypedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Int8Array = require( '@stdlib/array/int8' );\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar Uint8ClampedArray = require( '@stdlib/array/uint8c' );\nvar Int16Array = require( '@stdlib/array/int16' );\nvar Uint16Array = require( '@stdlib/array/uint16' );\nvar Int32Array = require( '@stdlib/array/int32' );\nvar Uint32Array = require( '@stdlib/array/uint32' );\nvar Float32Array = require( '@stdlib/array/float32' );\nvar Float64Array = require( '@stdlib/array/float64' );\n\n\n// MAIN //\n\nvar CTORS = [\n\tFloat64Array,\n\tFloat32Array,\n\tInt32Array,\n\tUint32Array,\n\tInt16Array,\n\tUint16Array,\n\tInt8Array,\n\tUint8Array,\n\tUint8ClampedArray\n];\n\n\n// EXPORTS //\n\nmodule.exports = CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a typed array.\n*\n* @module @stdlib/assert/is-typed-array\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n* var isTypedArray = require( '@stdlib/assert/is-typed-array' );\n*\n* var bool = isTypedArray( new Int8Array( 10 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar isTypedArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isTypedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isTypedArray = require( './../../is-typed-array' );\nvar isDataView = require( './../../is-dataview' );\n\n\n// MAIN //\n\n/**\n* Polyfill for determining whether an object is an array buffer view.\n*\n* ## Notes\n*\n* -   This polyfill should only be used in environments which do not provide native `ArrayBuffer.isView` support.\n* -   The implementation checks whether a value is a data view or typed array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array buffer view\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n* var bool = isArrayBufferView( new Int8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isArrayBufferView( [] );\n* // returns false\n*/\nfunction isArrayBufferView( value ) {\n\treturn isTypedArray( value ) || isDataView( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayBufferView;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ArrayBuffer = require( '@stdlib/array/buffer' );\n\n\n// MAIN //\n\n/**\n* Determines whether an object is an array buffer view.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array buffer view\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n* var bool = isArrayBufferView( new Int8Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isArrayBufferView( [] );\n* // returns false\n*/\nfunction isArrayBufferView( value ) {\n\treturn ArrayBuffer.isView( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayBufferView;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an `ArrayBuffer` view.\n*\n* @module @stdlib/assert/is-arraybuffer-view\n*\n* @example\n* var isArrayBufferView = require( '@stdlib/assert/is-arraybuffer-view' );\n* var Int32Array = require( '@stdlib/array/int32' );\n*\n* var bool = isArrayBufferView( new Int32Array( 10 ) );\n* // returns true\n*\n* bool = isArrayBufferView( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasArrayBufferSupport = require( './../../has-arraybuffer-support' );\nvar isFunction = require( './../../is-function' );\nvar ArrayBuffer = require( '@stdlib/array/buffer' );\nvar noArraybuffer = require( './no_arraybuffer.js' );\nvar polyfill = require( './polyfill.js' );\nvar main = require( './main.js' );\n\n\n// MAIN //\n\nvar isArrayBufferView;\nif ( hasArrayBufferSupport() ) {\n\tif ( isFunction( ArrayBuffer.isView ) ) {\n\t\tisArrayBufferView = main;\n\t} else {\n\t\tisArrayBufferView = polyfill;\n\t}\n} else {\n\tisArrayBufferView = noArraybuffer;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrayBufferView;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( './../../is-function' );\n\n\n// VARIABLES //\n\nvar RE_ARROW_FUNCTION = /^(?:\\([^)]*\\) *|[^=]*)=>/;\n\n// Using `Function#toString` bypasses a value's own `toString` method to provide an extra, but not security proof, precaution to prevent a provided function from impersonating an arrow function:\nvar fcn2str = Function.prototype.toString;\n\n\n// MAIN //\n\n/**\n* Tests whether a value is an arrow function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an arrow function\n*\n* @example\n* var arrow = () => {};\n* var bool = isArrowFunction( arrow );\n* // returns true\n*\n* @example\n* function beep() {\n*     return 'beep';\n* }\n*\n* var bool = isArrowFunction( beep );\n* // returns false\n*/\nfunction isArrowFunction( value ) {\n\tvar str;\n\tif ( !isFunction( value ) ) {\n\t\treturn false;\n\t}\n\tstr = fcn2str.call( value );\n\treturn RE_ARROW_FUNCTION.test( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isArrowFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an arrow function.\n*\n* @module @stdlib/assert/is-arrow-function\n*\n* @example\n* var isArrowFunction = require( '@stdlib/assert/is-arrow-function' );\n*\n* var beep = () => 'beep';\n*\n* var bool = isArrowFunction( beep );\n* // returns true\n\n* function boop() {\n*     return 'boop';\n* }\n*\n* bool = isArrowFunction( boop );\n* // returns false\n*/\n\n// MODULES //\n\nvar isArrowFunction = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isArrowFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\n\n\n// VARIABLES //\n\nvar MAX_ASCII = 127;\n\n\n// MAIN //\n\n/**\n* Tests whether a character belongs to the ASCII character set and whether this is true for all characters in a provided string.\n*\n* @param {*} x - value to test\n* @returns {boolean} boolean indicating if a string has all ASCII characters\n*\n* @example\n* var out = isASCII( 'beep' );\n* // returns true\n*\n* @example\n* var out = isASCII( 'È' );\n* // returns false\n*\n* @example\n* var out = isASCII( '' );\n* // returns false\n*\n* @example\n* var out = isASCII( 123 );\n* // returns false\n*/\nfunction isASCII( x ) {\n\tvar len;\n\tvar i;\n\tif ( !isString( x ) ) {\n\t\treturn false;\n\t}\n\tlen = x.length;\n\tif ( !len ) {\n\t\treturn false;\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( x.charCodeAt( i ) > MAX_ASCII ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isASCII;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a character belongs to the ASCII character set and whether this is true for all characters in a provided string.\n*\n* @module @stdlib/assert/is-ascii\n*\n* @example\n* var isASCII = require( '@stdlib/assert/is-ascii' );\n*\n* var out = isASCII( 'beep' );\n* // returns true\n*\n* out = isASCII( 'È' );\n* // returns false\n*\n* out = isASCII( '' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isASCII = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isASCII;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is between two values.\n*\n* @param {*} value - value to test\n* @param {*} a - left comparison value\n* @param {*} b - right comparison value\n* @param {string} [left=\"closed\"] - indicates whether the left comparison value is inclusive\n* @param {string} [right=\"closed\"] - indicates whether the right comparison value is inclusive\n* @throws {TypeError} `left` must be a recognized string\n* @throws {TypeError} `right` must be a recognized string\n* @returns {boolean} boolean indicating whether a value is between two values\n*\n* @example\n* var bool = isBetween( 3.14, 3.0, 4.0 );\n* // returns true\n*\n* @example\n* var bool = isBetween( 4.5, 3.0, 4.0 );\n* // returns false\n*\n* @example\n* var bool = isBetween( 3.14, 3.14, 4.0 );\n* // returns true\n*\n* @example\n* var bool = isBetween( 3.14, 3.14, 4.0, 'open', 'closed' );\n* // returns false\n*\n* @example\n* var bool = isBetween( 3.14, 3.0, 3.14 );\n* // returns true\n*\n* @example\n* var bool = isBetween( 3.14, 3.0, 3.14, 'closed', 'open' );\n* // returns false\n*/\nfunction isBetween( value, a, b, left, right ) {\n\tif ( arguments.length > 3 ) {\n\t\tif ( left !== 'closed' && left !== 'open' ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be one of the following: \"%s\". Value: `%s`.', [ 'closed', 'open' ].join( '\", \"' ), left ) );\n\t\t}\n\t\tif ( right !== 'closed' && right !== 'open' ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be one of the following: \"%s\". Value: `%s`.', [ 'closed', 'open' ].join( '\", \"' ), right ) );\n\t\t}\n\t}\n\tif ( left === 'closed' || left === void 0 ) {\n\t\tif ( right === 'closed' || right === void 0 ) {\n\t\t\treturn ( value >= a && value <= b );\n\t\t}\n\t\treturn ( value >= a && value < b );\n\t}\n\tif ( right === 'closed' || right === void 0 ) {\n\t\treturn ( value > a && value <= b );\n\t}\n\treturn ( value > a && value < b );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBetween;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is between two values.\n*\n* @module @stdlib/assert/is-between\n*\n* @example\n* var isBetween = require( '@stdlib/assert/is-between' );\n*\n* var bool = isBetween( 3.14, 3.0, 4.0 );\n* // returns true\n*\n* bool = isBetween( 4.5, 3.0, 4.0 );\n* // returns false\n*\n* bool = isBetween( 3.14, 3.14, 4.0 );\n* // returns true\n*\n* bool = isBetween( 3.14, 3.14, 4.0, 'open', 'closed' );\n* // returns false\n*\n* bool = isBetween( 3.14, 3.0, 3.14 );\n* // returns true\n*\n* bool = isBetween( 3.14, 3.0, 3.14, 'closed', 'open' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isBetween = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isBetween;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( './../../is-collection' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array-like object where every element is between two values.\n*\n* @param {*} value - value to test\n* @param {*} a - left comparison value\n* @param {*} b - right comparison value\n* @param {string} [left=\"closed\"] - indicates whether the left comparison value is inclusive\n* @param {string} [right=\"closed\"] - indicates whether the right comparison value is inclusive\n* @throws {TypeError} `left` must be a recognized string\n* @throws {TypeError} `right` must be a recognized string\n* @returns {boolean} boolean indicating whether a value is an array-like object where every element is between two values\n*\n* @example\n* var arr = [ 3.0, 3.14, 4.0 ];\n* var bool = isBetweenArray( arr, 3.0, 4.0 );\n* // returns true\n*\n* @example\n* var arr = [ 3.0, 3.14, 4.0 ];\n* var bool = isBetweenArray( arr, 3.14, 4.0 );\n* // returns false\n*\n* @example\n* var arr = [ 3.0, 3.14, 4.0 ];\n* var bool = isBetweenArray( arr, 3.0, 3.14 );\n* // returns false\n*\n* @example\n* var arr = [ 3.0, 3.14, 4.0 ];\n* var bool = isBetweenArray( arr, 3.0, 4.0, 'open', 'closed' );\n* // returns false\n*\n* @example\n* var arr = [ 3.0, 3.14, 4.0 ];\n* var bool = isBetweenArray( arr, 3.0, 4.0, 'closed', 'open' );\n* // returns false\n*/\nfunction isBetweenArray( value, a, b, left, right ) {\n\tvar len;\n\tvar i;\n\tif ( arguments.length > 3 ) {\n\t\tif ( left !== 'closed' && left !== 'open' ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fourth argument must be one of the following: \"%s\". Value: `%s`.', [ 'closed', 'open' ].join( '\", \"' ), left ) );\n\t\t}\n\t\tif ( right !== 'closed' && right !== 'open' ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Fifth argument must be one of the following: \"%s\". Value: `%s`.', [ 'closed', 'open' ].join( '\", \"' ), right ) );\n\t\t}\n\t}\n\tif ( !isCollection( value ) ) {\n\t\treturn false;\n\t}\n\tlen = value.length;\n\tif ( len === 0 ) {\n\t\treturn false;\n\t}\n\tif ( left === 'closed' || left === void 0 ) {\n\t\tif ( right === 'closed' || right === void 0 ) {\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tif ( value[ i ] < a || value[ i ] > b ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( value[ i ] < a || value[ i ] >= b ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tif ( right === 'closed' || right === void 0 ) {\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( value[ i ] <= a || value[ i ] > b ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( value[ i ] <= a || value[ i ] >= b ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBetweenArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctors = require( './ctors.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an environment is big endian.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment is big endian\n*\n* @example\n* var bool = isBigEndian();\n* // returns <boolean>\n*/\nfunction isBigEndian() {\n\tvar uint16view;\n\tvar uint8view;\n\n\tuint16view = new ctors[ 'uint16' ]( 1 );\n\n\t/*\n\t* Set the uint16 view to a value having distinguishable lower and higher order words.\n\t*\n\t* 4660 => 0x1234 => 0x12 0x34 => '00010010 00110100' => (0x12,0x34) == (18,52)\n\t*/\n\tuint16view[ 0 ] = 0x1234;\n\n\t// Create a uint8 view on top of the uint16 buffer:\n\tuint8view = new ctors[ 'uint8' ]( uint16view.buffer );\n\n\t// If big endian, the least significant byte will be last...\n\treturn ( uint8view[ 1 ] === 0x34 );\n}\n\n\n// MAIN //\n\nbool = isBigEndian();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object where every element is between two values.\n*\n* @module @stdlib/assert/is-between-array\n*\n* @example\n* var isBetweenArray = require( '@stdlib/assert/is-between-array' );\n*\n* var arr = [ 3.0, 3.14, 4.0 ];\n*\n* var bool = isBetweenArray( arr, 3.0, 4.0 );\n* // returns true\n*\n* bool = isBetweenArray( arr, 3.14, 4.0 );\n* // returns false\n*\n* bool = isBetweenArray( arr, 3.0, 3.14 );\n* // returns false\n*\n* bool = isBetweenArray( arr, 3.0, 4.0, 'open', 'closed' );\n* // returns false\n*\n* bool = isBetweenArray( arr, 3.0, 4.0, 'closed', 'open' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isBetweenArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isBetweenArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar Uint16Array = require( '@stdlib/array/uint16' );\n\n\n// MAIN //\n\nvar ctors = {\n\t'uint16': Uint16Array,\n\t'uint8': Uint8Array\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if an environment is big endian.\n*\n* @module @stdlib/assert/is-big-endian\n*\n* @example\n* var IS_BIG_ENDIAN = require( '@stdlib/assert/is-big-endian' );\n*\n* var bool = IS_BIG_ENDIAN;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar IS_BIG_ENDIAN = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = IS_BIG_ENDIAN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a binary string.\n*\n* @param {*} str - value to test\n* @returns {boolean} boolean indicating if an input value is a binary string\n*\n* @example\n* var bool = isBinaryString( '1000101' );\n* // returns true\n*\n* @example\n* var bool = isBinaryString( 'beep' );\n* // returns false\n*\n* @example\n* var bool = isBinaryString( '' );\n* // returns false\n*/\nfunction isBinaryString( str ) {\n\tvar ch;\n\tvar i;\n\tif ( !isString( str ) ) {\n\t\treturn false;\n\t}\n\tif ( str.length === 0 ) {\n\t\treturn false;\n\t}\n\tfor ( i = 0; i < str.length; i++ ) {\n\t\tch = str[ i ];\n\t\tif ( ch !== '1' && ch !== '0' ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBinaryString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a binary string.\n*\n* @module @stdlib/assert/is-binary-string\n*\n* @example\n* var isBinaryString = require( '@stdlib/assert/is-binary-string' );\n*\n* var bool = isBinaryString( '1000101' );\n* // returns true\n*\n* bool = isBinaryString( 'beep' );\n* // returns false\n*\n* bool = isBinaryString( '' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isBinaryString = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isBinaryString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\nvar reWhitespace = require( '@stdlib/regexp/whitespace' );\n\n\n// VARIABLES //\n\nvar RE = new RegExp( '^' + reWhitespace.REGEXP.source + '*$' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a blank string (i.e., an empty string or a string consisting only of whitespace characters).\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if an input value is a blank string\n*\n* @example\n* var bool = isBlankString( '   ' );\n* // returns true\n*\n* @example\n* var bool = isBlankString( '' );\n* // returns true\n*\n* @example\n* var bool = isBlankString( '\\t\\t\\t' );\n* // returns true\n*\n* @example\n* var bool = isBlankString( '\\r\\n\\r\\n' );\n* // returns true\n*\n* @example\n* var bool = isBlankString( 'beep' );\n* // returns false\n*/\nfunction isBlankString( value ) {\n\tif ( !isString( value ) ) {\n\t\treturn false;\n\t}\n\treturn RE.test( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBlankString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a blank string (i.e., an empty string or a string consisting only of whitespace characters).\n*\n* @module @stdlib/assert/is-blank-string\n*\n* @example\n* var isBlankString = require( '@stdlib/assert/is-blank-string' );\n*\n* var bool = isBlankString( '   ' );\n* // returns true\n*\n* bool = isBlankString( '' );\n* // returns true\n*\n* bool = isBlankString( 'beep' );\n* // returns false\n*\n*/\n\n// MODULES //\n\nvar isBlankString = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isBlankString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a boolean primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean primitive\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( true ) );\n* // returns false\n*/\nfunction isBoolean( value ) {\n\treturn ( typeof value === 'boolean' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toString = require( './tostring.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Attempts to serialize a value to a string.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value can be serialized\n*/\nfunction test( value ) {\n\ttry {\n\t\ttoString.call( value );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// eslint-disable-next-line stdlib/no-redeclare\nvar toString = Boolean.prototype.toString; // non-generic\n\n\n// EXPORTS //\n\nmodule.exports = toString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasToStringTag = require( './../../has-tostringtag-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2serialize.js' );\n\n\n// VARIABLES //\n\nvar FLG = hasToStringTag();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a boolean object\n*\n* @example\n* var bool = isBoolean( true );\n* // returns false\n*\n* @example\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\tif ( typeof value === 'object' ) {\n\t\tif ( value instanceof Boolean ) {\n\t\t\treturn true;\n\t\t}\n\t\tif ( FLG ) {\n\t\t\treturn test( value );\n\t\t}\n\t\treturn ( nativeClass( value ) === '[object Boolean]' );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a boolean.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a boolean\n*\n* @example\n* var bool = isBoolean( false );\n* // returns true\n*\n* @example\n* var bool = isBoolean( true );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* var bool = isBoolean( new Boolean( true ) );\n* // returns true\n*/\nfunction isBoolean( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a boolean.\n*\n* @module @stdlib/assert/is-boolean\n*\n* @example\n* var isBoolean = require( '@stdlib/assert/is-boolean' );\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*\n* @example\n* // Use interface to check for boolean primitives...\n* var isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\n*\n* var bool = isBoolean( false );\n* // returns true\n*\n* bool = isBoolean( new Boolean( true ) );\n* // returns false\n*\n* @example\n* // Use interface to check for boolean objects...\n* var isBoolean = require( '@stdlib/assert/is-boolean' ).isObject;\n*\n* var bool = isBoolean( true );\n* // returns false\n*\n* bool = isBoolean( new Boolean( false ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isBoolean = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isBoolean, 'isPrimitive', isPrimitive );\nsetReadOnly( isBoolean, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isBoolean;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayLike = require( './../../../is-array-like' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Returns a function which tests if every element in an array-like object passes a test condition.\n*\n* @param {Function} predicate - function to apply\n* @throws {TypeError} must provide a function\n* @returns {Function} an array-like object function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arraylikefcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\nfunction arraylikefcn( predicate ) {\n\tif ( typeof predicate !== 'function' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a function. Value: `%s`.', predicate ) );\n\t}\n\treturn every;\n\n\t/**\n\t* Tests if every element in an array-like object passes a test condition.\n\t*\n\t* @private\n\t* @param {*} value - value to test\n\t* @returns {boolean} boolean indicating whether a value is an array-like object for which all elements pass a test condition\n\t*/\n\tfunction every( value ) {\n\t\tvar len;\n\t\tvar i;\n\t\tif ( !isArrayLike( value ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tlen = value.length;\n\t\tif ( len === 0 ) {\n\t\t\treturn false;\n\t\t}\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tif ( predicate( value[ i ] ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = arraylikefcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a function which tests if every element in an array-like object passes a test condition.\n*\n* @module @stdlib/assert/tools/array-like-function\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n* var arraylikefcn = require( '@stdlib/assert/tools/array-like-function' );\n*\n* var arr1 = [ 1, 3, 5, 7 ];\n* var arr2 = [ 3, 5, 8 ];\n*\n* var validate = arraylikefcn( isOdd );\n*\n* var bool = validate( arr1 );\n* // returns true\n*\n* bool = validate( arr2 );\n* // returns false\n*/\n\n// MODULES //\n\nvar arraylikefcn = require( './arraylikefcn.js' );\n\n\n// EXPORTS //\n\nmodule.exports = arraylikefcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object of booleans.\n*\n* @module @stdlib/assert/is-boolean-array\n*\n* @example\n* var isBooleanArray = require( '@stdlib/assert/is-boolean-array' );\n*\n* var bool = isBooleanArray( [ true, false, true ] );\n* // returns true\n*\n* bool = isBooleanArray( [ true, 'abc', false ] );\n* // returns false\n*\n* @example\n* var isBooleanArray = require( '@stdlib/assert/is-boolean-array' ).primitives;\n*\n* var bool = isBooleanArray( [ true, false ] );\n* // returns true\n*\n* bool = isBooleanArray( [ false, new Boolean( true ) ] );\n* // returns false\n*\n* @example\n* var isBooleanArray = require( '@stdlib/assert/is-boolean-array' ).objects;\n*\n* var bool = isBooleanArray( [ new Boolean( false ), new Boolean( true ) ] );\n* // returns true\n*\n* bool = isBooleanArray( [ new Boolean( false ), true ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\nvar isBoolean = require( './../../is-boolean' );\n\n\n// MAIN //\n\nvar isBooleanArray = arrayfun( isBoolean );\nsetReadOnly( isBooleanArray, 'primitives', arrayfun( isBoolean.isPrimitive ) );\nsetReadOnly( isBooleanArray, 'objects', arrayfun( isBoolean.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isBooleanArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a symbol primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a symbol primitive\n*/\nfunction isSymbol( value ) {\n\treturn ( typeof value === 'symbol' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* Note: we wrap `toString` to allow loading this file in non-ES2015 environments.\n*/\n\n// MAIN //\n\n/**\n* Attempts to serialize a value as a symbol.\n*\n* @private\n* @param {*} value - value to serialize\n* @returns {string} serialized value\n*/\nfunction toStr( value ) {\n\t// Non-generic:\n\treturn Symbol.prototype.toString.call( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = toStr;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar toStr = require( './tostring.js' );\n\n\n// VARIABLES //\n\nvar RE = /^Symbol\\(.*\\)$/;\n\n\n// MAIN //\n\n/**\n* Attempts to call a `Symbol` method.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if able to call a `Symbol` method\n*/\nfunction test( value ) {\n\ttry {\n\t\treturn (\n\t\t\t// Objects created via `Object.create( null )` have no `valueOf()` method:\n\t\t\ttypeof value.valueOf() === 'symbol' &&\n\n\t\t\t// Test output of a non-generic method:\n\t\t\tRE.test( toStr( value ) )\n\t\t);\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = test;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar test = require( './try2tostring.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a symbol object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a symbol object\n*/\nfunction isSymbol( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tnativeClass( value ) === '[object Symbol]' &&\n\t\ttest( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a symbol.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a symbol\n*/\nfunction isSymbol( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isSymbol = require( './generic.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isSymbol, 'isPrimitive', isPrimitive );\nsetReadOnly( isSymbol, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\n\n\n// MAIN //\n\nvar isSymbol = constantFunction( false );\nvar isPrimitive = constantFunction( false );\nvar isObject = constantFunction( false );\n\nsetReadOnly( isSymbol, 'isPrimitive', isPrimitive );\nsetReadOnly( isSymbol, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a symbol.\n*\n* @module @stdlib/assert/is-symbol\n*\n* @example\n* var Symbol = require( '@stdlib/symbol/ctor' );\n* var isSymbol = require( '@stdlib/assert/is-symbol' );\n*\n* var bool = isSymbol( Symbol( 'beep' ) );\n* // returns true\n*\n* bool = isSymbol( Object( Symbol( 'beep' ) ) );\n* // returns true\n*\n* bool = isSymbol( {} );\n* // returns false\n*\n* @example\n* var Symbol = require( '@stdlib/symbol/ctor' );\n* var isSymbol = require( '@stdlib/assert/is-symbol' ).isPrimitive;\n*\n* var bool = isSymbol( Symbol( 'beep' ) );\n* // returns true\n*\n* bool = isSymbol( Object( Symbol( 'beep' ) ) );\n* // returns false\n*\n* bool = isSymbol( {} );\n* // returns false\n*\n* @example\n* var Symbol = require( '@stdlib/symbol/ctor' );\n* var isSymbolObject = require( '@stdlib/assert/is-symbol' ).isObject;\n*\n* var bool = isSymbolObject( Symbol( 'beep' ) );\n* // returns false\n*\n* bool = isSymbolObject( Object( Symbol( 'beep' ) ) );\n* // returns true\n*\n* bool = isSymbolObject( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasSymbols = require( './../../has-symbol-support' );\nvar main = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar isSymbol;\nif ( hasSymbols() ) {\n\tisSymbol = main;\n} else {\n\tisSymbol = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSymbol;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( './../../is-boolean' ).isObject;\nvar isNumber = require( './../../is-number' ).isObject;\nvar isString = require( './../../is-string' ).isObject;\nvar isSymbol = require( './../../is-symbol' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a JavaScript boxed primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a JavaScript boxed primitive\n*\n* @example\n* var bool = isBoxedPrimitive( new String( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isBoxedPrimitive( new Number( 3.21 ) );\n* // returns true\n*\n* @example\n* var Symbol = require( '@stdlib/symbol/ctor' );\n* var bool = isBoxedPrimitive( Object( Symbol( 'beep' ) ) );\n* // returns true\n*\n* @example\n* var bool = isBoxedPrimitive( true );\n* // returns false\n*\n* @example\n* var bool = isBoxedPrimitive( {} );\n* // returns false\n*\n* @example\n* var Symbol = require( '@stdlib/symbol/ctor' );\n* var bool = isBoxedPrimitive( Symbol( 'beep' ) );\n* // returns false\n*/\nfunction isBoxedPrimitive( value ) {\n\tif ( typeof value !== 'object' ) {\n\t\treturn false;\n\t}\n\treturn (\n\t\tisBoolean( value ) ||\n\t\tisNumber( value ) ||\n\t\tisString( value ) ||\n\t\tisSymbol( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBoxedPrimitive;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a JavaScript boxed primitive.\n*\n* @module @stdlib/assert/is-boxed-primitive\n*\n* @example\n* var isBoxedPrimitive = require( '@stdlib/assert/is-boxed-primitive' );\n*\n* var bool = isBoxedPrimitive( new Boolean( true ) );\n* // returns true\n*\n* bool = isBoxedPrimitive( true );\n* // returns false\n*/\n\n// MODULES //\n\nvar isBoxedPrimitive = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isBoxedPrimitive;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\nvar getGlobal = require( '@stdlib/utils/global' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar isObject = require( './../../is-plain-object' );\nvar isString = require( './../../is-string' ).isPrimitive;\nvar toStr = require( './to_string.js' );\nvar globalScope = require( './global_scope.js' );\n\n\n// VARIABLES //\n\nvar Global = getGlobal();\nvar RE = /node|io\\.js/;\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if the runtime is Node.js.\n*\n* @returns {boolean} boolean indicating if runtime is Node.js\n*\n* @example\n* var bool = isNode();\n* // returns <boolean>\n*/\nfunction isNode() {\n\treturn (\n\t\t// Check for presence of `global` variable:\n\t\ttypeof global === 'object' &&\n\n\t\t// Check that the `global` variable matches the determined global variable:\n\t\tglobal === Global &&\n\n\t\t// Check for a circular reference to the global variable:\n\t\tGlobal === Global.global &&\n\n\t\t// Check that the global variable has the expected internal class:\n\t\t(\n\t\t\t// Node < v7\n\t\t\tnativeClass( Global ) === '[object global]' ||\n\n\t\t\t// Node >= v7 (https://github.com/nodejs/node/issues/9274)\n\t\t\tnativeClass( Global ) === '[object Object]'\n\t\t) &&\n\n\t\t// Check that the `global` variable is equal to the global scope:\n\t\tglobalScope === true &&\n\n\t\t// Check for a `require` global variable:\n\t\ttypeof require === 'function' &&\n\n\t\t// Check for a `process` global variable:\n\t\ttypeof proc === 'object' &&\n\n\t\t// Check that the `process` global variable has the expected internal class (NOTE: we use `toStr`, rather than `nativecClass` to address changes introduced in Node >= v14.6.0; see https://github.com/stdlib-js/stdlib/issues/375):\n\t\ttoStr( proc ) === '[object process]' &&\n\n\t\t// Check for a `versions` property:\n\t\tisObject( proc.versions ) &&\n\n\t\t// Check for a `node` property:\n\t\tisString( proc.versions.node ) &&\n\n\t\t(\n\t\t\t// `process.release` was added in Node v3.0.0 via io.js:\n\t\t\ttypeof proc.release === 'undefined' ||\n\n\t\t\t(\n\t\t\t\t// Check for a `release` property:\n\t\t\t\tisObject( proc.release ) &&\n\n\t\t\t\t// Check for a `name` property:\n\t\t\t\tisString( proc.release.name ) &&\n\n\t\t\t\t// Check that the release name contains either `node` or `io.js` (in Node.js/io.js, the release name is read-only):\n\t\t\t\tRE.test( proc.release.name )\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNode;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-new-func */\n\n'use strict';\n\n// VARIABLES //\n\nvar scope;\n\n\n// FUNCTIONS //\n\n/**\n* Test if the global scope is bound to the \"window\" variable present in browser environments. When creating a new function using the `Function(){}` constructor, the execution scope aliased by the `this` variable is the global scope.\n*\n* @private\n* @returns {boolean} boolean indicating if global scope is bound to \"window\" variable\n*/\nfunction globalScope() {\n\tvar fcn = '';\n\tfcn += 'try {';\n\tfcn += 'return this === window;';\n\tfcn += '} catch ( err ) {';\n\tfcn += 'return false;';\n\tfcn += '}';\n\treturn (new Function( fcn ))();\n}\n\n\n// MAIN //\n\nscope = globalScope();\n\n\n// EXPORTS //\n\nmodule.exports = scope;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if the runtime is Node.js.\n*\n* @module @stdlib/assert/is-node\n*\n* @example\n* var IS_NODE = require( '@stdlib/assert/is-node' );\n*\n* var bool = IS_NODE;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar isNode = require( './main.js' );\n\n\n// MAIN //\n\nvar bool = isNode();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* global window */\n\n'use strict';\n\n// MODULES //\n\nvar getGlobal = require( '@stdlib/utils/global' );\nvar IS_NODE = require( './../../is-node' );\nvar globalScope = require( './global_scope.js' );\n\n\n// VARIABLES //\n\nvar Global = getGlobal();\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if the runtime is a web browser.\n*\n* @returns {boolean} boolean indicating if runtime is a web browser\n*\n* @example\n* var bool = isBrowser();\n* // returns <boolean>\n*/\nfunction isBrowser() {\n\treturn (\n\t\t// Check that we are not running in a Node.js runtime:\n\t\tIS_NODE === false &&\n\n\t\t// Check for presence of `window` variable:\n\t\ttypeof window === 'object' &&\n\n\t\t// Check that the `window` variable matches the determined global variable:\n\t\twindow === Global &&\n\n\t\t// Check that the `window` variable is equal to the global scope:\n\t\tglobalScope === true\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBrowser;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if the runtime is a web browser.\n*\n* @module @stdlib/assert/is-browser\n*\n* @example\n* var IS_BROWSER = require( '@stdlib/assert/is-browser' );\n*\n* var bool = IS_BROWSER;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar isBrowser = require( './main.js' );\n\n\n// MAIN //\n\nvar bool = isBrowser();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lowercase = require( '@stdlib/string/lowercase' );\nvar uppercase = require( '@stdlib/string/uppercase' );\nvar isString = require( './../../is-string' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a string having an uppercase first character.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a string with an uppercase first character\n*\n* @example\n* var bool = isCapitalized( 'Hello' );\n* // returns true\n*\n* @example\n* var bool = isCapitalized( 'WORLD' );\n* // returns true\n*\n* @example\n* var bool = isCapitalized( '!' );\n* // returns false\n*\n* @example\n* var bool = isCapitalized( 'salt and light' );\n* // returns false\n*/\nfunction isCapitalized( value ) {\n\tvar ch;\n\tif ( isString( value ) && value !== '' ) {\n\t\tch = value[ 0 ];\n\t\treturn ( ch === uppercase( ch ) && ch !== lowercase( ch ) );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isCapitalized;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a string having an uppercase first character.\n*\n* @module @stdlib/assert/is-capitalized\n*\n* @example\n* var isCapitalized = require( '@stdlib/assert/is-capitalized' );\n*\n* var bool = isCapitalized( 'Hello' );\n* // returns true\n*\n* bool = isCapitalized( 'world' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isCapitalized = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isCapitalized;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ndarray = require( '@stdlib/ndarray/base/ctor' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is ndarray-like.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is ndarray-like\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var arr = ndarray( 'generic', [ 0, 0, 0, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isndarrayLike( arr );\n* // returns true\n*\n* bool = isndarrayLike( [] );\n* // returns false\n*/\nfunction isndarrayLike( v ) {\n\treturn (\n\t\tv instanceof ndarray ||\n\t\t(\n\t\t\tv !== null &&\n\t\t\ttypeof v === 'object' &&\n\t\t\ttypeof v.data === 'object' &&\n\t\t\ttypeof v.shape === 'object' &&\n\t\t\ttypeof v.strides === 'object' &&\n\t\t\ttypeof v.offset === 'number' &&\n\t\t\ttypeof v.order === 'string' &&\n\t\t\ttypeof v.ndims === 'number' &&\n\t\t\ttypeof v.dtype === 'string' &&\n\t\t\ttypeof v.length === 'number' &&\n\t\t\ttypeof v.flags === 'object' &&\n\t\t\ttypeof v.get === 'function' &&\n\t\t\ttypeof v.set === 'function'\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isndarrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is ndarray-like.\n*\n* @module @stdlib/assert/is-ndarray-like\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var isndarrayLike = require( '@stdlib/assert/is-ndarray-like' );\n*\n* var arr = ndarray( 'generic', [ 0, 0, 0, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isndarrayLike( arr );\n* // returns true\n*\n* bool = isndarrayLike( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isndarrayLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isndarrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isndarrayLike = require( './../../is-ndarray-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a 2-dimensional ndarray-like object.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a 2-dimensional ndarray-like object\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var arr = ndarray( 'generic', [ 0, 0, 0, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isMatrixLike( arr );\n* // returns true\n*\n* bool = isMatrixLike( [] );\n* // returns false\n*/\nfunction isMatrixLike( v ) {\n\treturn (\n\t\tisndarrayLike( v ) &&\n\t\tv.ndims === 2 &&\n\t\tv.shape.length === 2 &&\n\t\tv.strides.length === 2\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isMatrixLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a 2-dimensional ndarray-like object.\n*\n* @module @stdlib/assert/is-matrix-like\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var isMatrixLike = require( '@stdlib/assert/is-matrix-like' );\n*\n* var arr = ndarray( 'float64', [ 0, 0, 0, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isMatrixLike( arr );\n* // returns true\n*\n* bool = isMatrixLike( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isMatrixLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isMatrixLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isMatrixLike = require( './../../is-matrix-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a 2-dimensional ndarray-like object having equal dimensions.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a 2-dimensional ndarray-like object having equal dimensions\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var arr = ndarray( 'generic', [ 0, 0, 0, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isSquareMatrix( arr );\n* // returns true\n*\n* bool = isSquareMatrix( [] );\n* // returns false\n*/\nfunction isSquareMatrix( v ) {\n\treturn (\n\t\tisMatrixLike( v ) &&\n\t\tv.shape[ 0 ] === v.shape[ 1 ]\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSquareMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a 2-dimensional ndarray-like object having equal dimensions.\n*\n* @module @stdlib/assert/is-square-matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var isSquareMatrix = require( '@stdlib/assert/is-square-matrix' );\n*\n* var arr = ndarray( 'generic', [ 0, 0, 0, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isSquareMatrix( arr );\n* // returns true\n*\n* bool = isSquareMatrix( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isSquareMatrix = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isSquareMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isSquareMatrix = require( './../../is-square-matrix' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar isOdd = require( '@stdlib/math/base/assert/is-odd' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a centrosymmetric matrix.\n*\n* ## Notes\n*\n* -   The implementation must rely on manually checking that \\\\(M_{ij} = M_{N-i-1,N-j-1}\\\\), and, while element access is deterministic, no way exists to prevent cache misses outside of reordering the underlying matrix elements, thus incurring a larger performance penalty than just \"jumping around\" in a single pass.\n* -   Worst case scenario: O(N^2).\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a centrosymmetric matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var arr = ndarray( 'generic', [ 2, 1, 1, 2 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isCentrosymmetricMatrix( arr );\n* // returns true\n*\n* bool = isCentrosymmetricMatrix( [] );\n* // returns false\n*/\nfunction isCentrosymmetricMatrix( v ) {\n\tvar m1;\n\tvar M;\n\tvar N;\n\tvar n;\n\tvar i;\n\tvar j;\n\tif ( !isSquareMatrix( v ) ) {\n\t\treturn false;\n\t}\n\tM = v.shape[ 0 ];\n\tN = floor( M/2.0 ); // corresponds to a row index + 1\n\tm1 = M - 1;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tn = m1 - i;\n\t\tfor ( j = 0; j < M; j++ ) {\n\t\t\tif ( v.get( i, j ) !== v.get( n, m1-j ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\tif ( isOdd( M ) ) {\n\t\t// Only need to examine the first half of the row (up until the center element) due to symmetry...\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tif ( v.get( i, j ) !== v.get( N, m1-j ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isCentrosymmetricMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a centrosymmetric matrix.\n*\n* @module @stdlib/assert/is-centrosymmetric-matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var isCentrosymmetricMatrix = require( '@stdlib/assert/is-centrosymmetric-matrix' );\n*\n* var arr = ndarray( 'generic', [ 2, 1, 1, 2 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isCentrosymmetricMatrix( arr );\n* // returns true\n*\n* bool = isCentrosymmetricMatrix( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isCentrosymmetricMatrix = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isCentrosymmetricMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils/keys' );\n\n\n// FUNCTIONS //\n\n/**\n* Tests if a value is an object.\n*\n* ## Notes\n*\n* -   The function excludes `null`.\n*\n* @private\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is an object\n*/\nfunction isObject( value ) {\n\tvar type = typeof value;\n\treturn ( value !== null && ( type === 'object' || type === 'function' ) );\n}\n\n/**\n* Tests if the seen array contains a search value.\n*\n* @private\n* @param {Array} seen - array of seen objects\n* @param {*} searchValue - search value\n* @returns {boolean} boolean indicating whether array contains search value\n*/\nfunction contains( seen, searchValue ) {\n\tvar i;\n\tfor ( i = 0; i < seen.length; i++ ) {\n\t\tif ( seen[ i ] === searchValue ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n* Tests if an object contains a circular reference by recursively traversing object keys.\n*\n* @private\n* @param {Object} obj - object to test\n* @param {Array} seen - array of seen objects\n* @returns {boolean} boolean indicating whether object contains a circular reference\n*/\nfunction isCircObj( obj, seen ) {\n\tvar keys;\n\tvar val;\n\tvar i;\n\n\tseen.push( obj );\n\tkeys = objectKeys( obj );\n\tif ( keys.length === 0 ) {\n\t\treturn false;\n\t}\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tval = obj[ keys[ i ] ];\n\t\tif ( isObject( val ) && ( contains( seen, val ) || isCircObj( val, seen ) ) ) { // eslint-disable-line max-len\n\t\t\treturn true;\n\t\t}\n\t}\n\tseen.pop( obj );\n\treturn false;\n}\n\n\n// MAIN //\n\n/**\n* Tests if an object-like value contains a circular reference.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is object-like and contains a circular reference\n*\n* @example\n* var obj = {\n*   'a': 'beep',\n*   'b': {\n*     'c': 'boop'\n*   }\n* };\n* obj.b.self = obj;\n* var bool = isCircular( obj );\n* // returns true\n*\n* @example\n* var arr = [ 1, 2, 3 ];\n* arr.push( arr );\n* var bool = isCircular( arr );\n* // returns true\n*\n* @example\n* var bool = isCircular( {} );\n* // returns false\n*\n* @example\n* var bool = isCircular( null );\n* // returns false\n*/\nfunction isCircular( value ) {\n\tif ( !isObject( value ) ) {\n\t\treturn false;\n\t}\n\treturn isCircObj( value, [] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isCircular;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if an object-like value contains a circular reference.\n*\n* @module @stdlib/assert/is-circular\n*\n* @example\n* var isCircular = require( '@stdlib/assert/is-circular' );\n*\n* var obj = {\n*   'a': 'beep',\n*   'b': {\n*     'c': 'boop'\n*   }\n* };\n* obj.b.self = obj;\n*\n* var bool = isCircular( obj );\n* // returns true\n*\n* bool = isCircular( null );\n* // returns false\n*/\n\n// MODULES //\n\nvar isCircular = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isCircular;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( './../../is-array' );\nvar isCircular = require( './../../is-circular' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array containing a circular reference.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an array containing a circular reference\n*\n* @example\n* var arr = [ 1, 2, 3 ];\n* arr.push( arr );\n* var bool = isCircularArray( arr );\n* // returns true\n*\n* @example\n* var obj = {\n*   'a': 'beep',\n*   'b': {\n*     'c': 'boop'\n*   }\n* };\n* obj.b.self = obj;\n* var bool = isCircularArray( obj );\n* // returns false\n*\n* @example\n* var bool = isCircularArray( [] );\n* // returns false\n*\n* @example\n* var bool = isCircularArray( null );\n* // returns false\n*/\nfunction isCircularArray( value ) {\n\tif ( !isArray( value ) ) {\n\t\treturn false;\n\t}\n\treturn isCircular( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isCircularArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array containing a circular reference.\n*\n* @module @stdlib/assert/is-circular-array\n*\n* @example\n* var isCircularArray = require( '@stdlib/assert/is-circular-array' );\n*\n* var arr = [ 1, 2, 3 ];\n* arr.push( arr );\n*\n* var bool = isCircularArray( arr );\n* // returns true\n*\n* bool = isCircularArray( null );\n* // returns false\n*/\n\n// MODULES //\n\nvar isCircularArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isCircularArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( './../../is-plain-object' );\nvar isCircular = require( './../../is-circular' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a plain object containing a circular reference.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a plain object containing a circular reference\n*\n* @example\n* var obj = {\n*   'a': 'beep',\n*   'b': {\n*     'c': 'boop'\n*   }\n* };\n* obj.b.self = obj;\n* var bool = isCircularPlainObject( obj );\n* // returns true\n*\n* @example\n* var arr = [ 1, 2, 3 ];\n* arr.push( arr );\n* var bool = isCircularPlainObject( arr );\n* // returns false\n*\n* @example\n* var bool = isCircularPlainObject( {} );\n* // returns false\n*\n* @example\n* var bool = isCircularPlainObject( null );\n* // returns false\n*/\nfunction isCircularPlainObject( value ) {\n\tif ( !isPlainObject( value ) ) {\n\t\treturn false;\n\t}\n\treturn isCircular( value, [] );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isCircularPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a plain object containing a circular reference.\n*\n* @module @stdlib/assert/is-circular-plain-object\n*\n* @example\n* var isCircular = require( '@stdlib/assert/is-circular-plain-object' );\n*\n* var obj = {\n*   'a': 'beep',\n*   'b': {\n*     'c': 'boop'\n*   }\n* };\n* obj.b.self = obj;\n*\n* var bool = isCircularPlainObject( obj );\n* // returns true\n*\n* bool = isCircularPlainObject( null );\n* // returns false\n*/\n\n// MODULES //\n\nvar isCircularPlainObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isCircularPlainObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( './../../is-function' );\n\n\n// VARIABLES //\n\nvar RE_CLASS = /^\\s*class\\s/;\n\n// Using `Function#toString` bypasses a value's own `toString` method to provide an extra, but not security proof, precaution to prevent a provided function from impersonating a class:\nvar fcn2str = Function.prototype.toString;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a class.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a class\n*\n* @example\n* var bool = isClass( class Person {} );\n* // returns true\n*\n* @example\n* var bool = isClass( function Person() {} );\n* // returns false\n*\n* @example\n* var bool = isClass( null );\n* // returns false\n*/\nfunction isClass( value ) {\n\tvar str;\n\tif ( !isFunction( value ) ) {\n\t\treturn false;\n\t}\n\tstr = fcn2str.call( value );\n\treturn RE_CLASS.test( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a class.\n*\n* @module @stdlib/assert/is-class\n*\n* @example\n* var isClass = require( '@stdlib/assert/is-class' );\n*\n* var bool = isClass( class Person {} );\n* // returns true\n*\n* bool = isClass( function Person() {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex128 = require( '@stdlib/complex/float64' );\nvar Complex64 = require( '@stdlib/complex/float32' );\nvar constructorName = require( '@stdlib/utils/constructor-name' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a 64-bit or 128-bit complex number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a 64-bit or 128-bit complex number\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n* var Complex64 = require( '@stdlib/complex/float32' );\n*\n* var x = new Complex128( 4.0, 2.0 );\n* var bool = isComplex( x );\n* // returns true\n*\n* x = new Complex64( 4.0, 2.0 );\n* bool = isComplex( x );\n* // returns true\n*/\nfunction isComplex( value ) {\n\tvar type;\n\tif ( value instanceof Complex128 || value instanceof Complex64 ) {\n\t\treturn true;\n\t}\n\ttype = constructorName( value );\n\treturn ( type === 'Complex64' || type === 'Complex128' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComplex;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a 64-bit or 128-bit complex number.\n*\n* @module @stdlib/assert/is-complex\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n* var Complex64 = require( '@stdlib/complex/float32' );\n* var isComplex = require( '@stdlib/assert/is-complex' );\n*\n* var x = new Complex128( 4.0, 2.0 );\n* var bool = isComplex( x );\n* // returns true\n*\n* x = new Complex64( 4.0, 2.0 );\n* bool = isComplex( x );\n* // returns true\n*/\n\n// MODULES //\n\nvar isComplex = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isComplex;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex128 = require( '@stdlib/complex/float64' );\nvar Complex64 = require( '@stdlib/complex/float32' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a complex number-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex number-like object.\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n* var Complex64 = require( '@stdlib/complex/float32' );\n*\n* var x = new Complex128( 4.0, 2.0 );\n* var bool = isComplexLike( x );\n* // returns true\n*\n* x = new Complex64( 4.0, 2.0 );\n* bool = isComplexLike( x );\n* // returns true\n*/\nfunction isComplexLike( value ) {\n\tif ( value instanceof Complex128 || value instanceof Complex64 ) {\n\t\treturn true;\n\t}\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\ttypeof value.re === 'number' &&\n\t\ttypeof value.im === 'number'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComplexLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a complex number-like object.\n*\n* @module @stdlib/assert/is-complex-like\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n* var Complex64 = require( '@stdlib/complex/float32' );\n* var isComplexLike = require( '@stdlib/assert/is-complex-like' );\n*\n* var x = new Complex128( 4.0, 2.0 );\n* var bool = isComplexLike( x );\n* // returns true\n*\n* x = new Complex64( 4.0, 2.0 );\n* bool = isComplexLike( x );\n* // returns true\n*/\n\n// MODULES //\n\nvar isComplexLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isComplexLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctorName = require( '@stdlib/utils/constructor-name' );\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar CTORS = require( './ctors.js' );\nvar NAMES = require( './names.json' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a complex typed array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a complex typed array\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n*\n* var bool = isComplexTypedArray( new Complex128Array( 10 ) );\n* // returns true\n*/\nfunction isComplexTypedArray( value ) {\n\tvar v;\n\tvar i;\n\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for complex typed array objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tfor ( i = 0; i < CTORS.length; i++ ) {\n\t\tif ( value instanceof CTORS[ i ] ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// Walk the prototype tree until we find an object having a desired class...\n\twhile ( value ) {\n\t\tv = ctorName( value );\n\t\tfor ( i = 0; i < NAMES.length; i++ ) {\n\t\t\tif ( NAMES[ i ] === v ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tvalue = getPrototypeOf( value );\n\t}\n\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComplexTypedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex64Array = require( '@stdlib/array/complex64' );\nvar Complex128Array = require( '@stdlib/array/complex128' );\n\n\n// MAIN //\n\nvar CTORS = [\n\tComplex128Array,\n\tComplex64Array\n];\n\n\n// EXPORTS //\n\nmodule.exports = CTORS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a complex typed array.\n*\n* @module @stdlib/assert/is-complex-typed-array\n*\n* @example\n* var Complex128Array = require( '@stdlib/array/complex128' );\n* var isComplexTypedArray = require( '@stdlib/assert/is-complex-typed-array' );\n*\n* var bool = isComplexTypedArray( new Complex128Array( 10 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar isComplexTypedArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isComplexTypedArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( './../../is-nonnegative-integer' ).isPrimitive;\nvar MAX = require( '@stdlib/constants/array/max-typed-array-length' );\n\n\n// VARIABLES //\n\nvar MAX_LENGTH = MAX / 2; // every complex array element has both a real and imaginary component stored as separate numbers, so the maximum length is half that of a normal typed array\n\n\n// MAIN //\n\n/**\n* Tests if a value is complex-typed-array-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is complex-typed-array-like\n*\n* @example\n* var arr = {\n*\t'BYTES_PER_ELEMENT': 8,\n*\t'length': 10,\n*\t'byteOffset': 0,\n*\t'byteLength': 10,\n*   'get': function get() {},\n*   'set': function set() {}\n* };\n* var val = isComplexTypedArrayLike( arr );\n* // returns true\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n*\n* var val = isComplexTypedArrayLike( new Complex64Array( 4 ) );\n* // returns true\n*\n* @example\n* var val = isComplexTypedArrayLike( [] );\n* // returns false\n*\n* @example\n* var val = isComplexTypedArrayLike( {} );\n* // returns false\n*\n* @example\n* var val = isComplexTypedArrayLike( null );\n* // returns false\n*\n* @example\n* var val = isComplexTypedArrayLike( 'beep' );\n* // returns false\n*/\nfunction isComplexTypedArrayLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\n\t\t// Check for standard typed array properties:\n\t\tisNonNegativeInteger( value.length ) &&\n\t\tvalue.length <= MAX_LENGTH &&\n\t\ttypeof value.BYTES_PER_ELEMENT === 'number' &&\n\t\ttypeof value.byteOffset === 'number' &&\n\t\ttypeof value.byteLength === 'number' &&\n\n\t\t// Check for properties necessary for complex typed arrays:\n\t\ttypeof value.get === 'function' &&\n\t\ttypeof value.set === 'function'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComplexTypedArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is complex-typed-array-like.\n*\n* @module @stdlib/assert/is-complex-typed-array-like\n*\n* @example\n* var Complex64Array = require( '@stdlib/array/complex64' );\n* var isComplexTypedArrayLike = require( '@stdlib/assert/is-complex-typed-array-like' );\n*\n* var bool = isComplexTypedArrayLike( new Complex64Array() );\n* // returns true\n*\n* bool = isComplexTypedArrayLike({\n*\t'length': 10,\n*\t'byteOffset': 0,\n*\t'byteLength': 10,\n*\t'BYTES_PER_ELEMENT': 4,\n*   'get': function get() {},\n*   'set': function set() {}\n* });\n* // returns true\n*/\n\n// MODULES //\n\nvar isComplexTypedArrayLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isComplexTypedArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex64 = require( '@stdlib/complex/float32' );\nvar constructorName = require( '@stdlib/utils/constructor-name' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a 64-bit complex number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a 64-bit complex number\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n*\n* var x = new Complex64( 4.0, 2.0 );\n*\n* var bool = isComplex64( x );\n* // returns true\n*/\nfunction isComplex64( value ) {\n\treturn (\n\t\tvalue instanceof Complex64 ||\n\t\tconstructorName( value ) === 'Complex64'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComplex64;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a 64-bit complex number.\n*\n* @module @stdlib/assert/is-complex64\n*\n* @example\n* var Complex64 = require( '@stdlib/complex/float32' );\n* var isComplex64 = require( '@stdlib/assert/is-complex64' );\n*\n* var x = new Complex64( 4.0, 2.0 );\n*\n* var bool = isComplex64( x );\n* // returns true\n*/\n\n// MODULES //\n\nvar isComplex64 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isComplex64;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex64Array = require( '@stdlib/array/complex64' );\nvar constructorName = require( '@stdlib/utils/constructor-name' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Complex64Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Complex64Array\n*\n* @example\n* var bool = isComplex64Array( new Complex64Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isComplex64Array( [] );\n* // returns false\n*/\nfunction isComplex64Array( value ) {\n\treturn (\n\t\tvalue instanceof Complex64Array ||\n\t\tconstructorName( value ) === 'Complex64Array'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComplex64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Complex64Array.\n*\n* @module @stdlib/assert/is-complex64array\n*\n* @example\n* var isComplex64Array = require( '@stdlib/assert/is-complex64array' );\n*\n* var bool = isComplex64Array( new Complex64Array( 10 ) );\n* // returns true\n*\n* bool = isComplex64Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isComplex64Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isComplex64Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex128 = require( '@stdlib/complex/float64' );\nvar constructorName = require( '@stdlib/utils/constructor-name' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a 128-bit complex number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a 128-bit complex number\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n*\n* var x = new Complex128( 4.0, 2.0 );\n*\n* var bool = isComplex128( x );\n* // returns true\n*/\nfunction isComplex128( value ) {\n\treturn (\n\t\tvalue instanceof Complex128 ||\n\t\tconstructorName( value ) === 'Complex128'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComplex128;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a 128-bit complex number.\n*\n* @module @stdlib/assert/is-complex128\n*\n* @example\n* var Complex128 = require( '@stdlib/complex/float64' );\n* var isComplex128 = require( '@stdlib/assert/is-complex128' );\n*\n* var x = new Complex128( 4.0, 2.0 );\n*\n* var bool = isComplex128( x );\n* // returns true\n*/\n\n// MODULES //\n\nvar isComplex128 = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isComplex128;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Complex128Array = require( '@stdlib/array/complex128' );\nvar constructorName = require( '@stdlib/utils/constructor-name' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Complex128Array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a Complex128Array\n*\n* @example\n* var bool = isComplex128Array( new Complex128Array( 10 ) );\n* // returns true\n*\n* @example\n* var bool = isComplex128Array( [] );\n* // returns false\n*/\nfunction isComplex128Array( value ) {\n\treturn (\n\t\tvalue instanceof Complex128Array ||\n\t\tconstructorName( value ) === 'Complex128Array'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComplex128Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a Complex128Array.\n*\n* @module @stdlib/assert/is-complex128array\n*\n* @example\n* var isComplex128Array = require( '@stdlib/assert/is-complex128array' );\n*\n* var bool = isComplex128Array( new Complex128Array( 10 ) );\n* // returns true\n*\n* bool = isComplex128Array( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isComplex128Array = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isComplex128Array;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar iscomposite = require( '@stdlib/math/base/assert/is-composite' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a value which is a composite number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a value which is a composite number\n*\n* @example\n* var bool = isComposite( 4.0 );\n* // returns true\n*\n* @example\n* var bool = isComposite( new Number( 4.0 ) );\n* // returns false\n*/\nfunction isComposite( value ) {\n\tif ( !isNumber( value ) ) {\n\t\treturn false;\n\t}\n\treturn iscomposite( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComposite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar iscomposite = require( '@stdlib/math/base/assert/is-composite' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value which is a composite number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value which is a composite number\n*\n* @example\n* var bool = isComposite( 4.0 );\n* // returns false\n*\n* @example\n* var bool = isComposite( new Number( 4.0 ) );\n* // returns true\n*/\nfunction isComposite( value ) {\n\tif ( !isNumber( value ) ) {\n\t\treturn false;\n\t}\n\treturn iscomposite( value.valueOf() );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComposite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a composite number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a composite number\n*\n* @example\n* var bool = isComposite( 4.0 );\n* // returns true\n*\n* @example\n* var bool = isComposite( new Number( 4.0 ) );\n* // returns true\n*\n* @example\n* var bool = isComposite( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isComposite( -4.0 );\n* // returns false\n*\n* @example\n* var bool = isComposite( null );\n* // returns false\n*/\nfunction isComposite( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isComposite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a composite number.\n*\n* @module @stdlib/assert/is-composite\n*\n* @example\n* var isComposite = require( '@stdlib/assert/is-composite' );\n*\n* var bool = isComposite( 4.0 );\n* // returns true\n*\n* bool = isComposite( new Number( 4.0 ) );\n* // returns true\n*\n* bool = isComposite( 3.14 );\n* // returns false\n*\n* bool = isComposite( -4.0 );\n* // returns false\n*\n* bool = isComposite( null );\n* // returns false\n*\n* @example\n* var isComposite = require( '@stdlib/assert/is-composite' ).isPrimitive;\n*\n* var bool = isComposite( 4.0 );\n* // returns true\n*\n* bool = isComposite( new Number( 4.0 ) );\n* // returns false\n*\n* @example\n* var isComposite = require( '@stdlib/assert/is-composite' ).isObject;\n*\n* var bool = isComposite( 4.0 );\n* // returns false\n*\n* bool = isComposite( new Number( 4.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isComposite = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isComposite, 'isPrimitive', isPrimitive );\nsetReadOnly( isComposite, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isComposite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptor = require( '@stdlib/utils/property-descriptor' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is configurable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is configurable\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'writable': true,\n*     'value': true\n* });\n*\n* var bool = isConfigurableProperty( obj, 'boop' );\n* // returns true\n*\n* bool = isConfigurableProperty( obj, 'beep' );\n* // returns false\n*/\nfunction isConfigurableProperty( value, property ) {\n\tvar desc = propertyDescriptor( value, property );\n\treturn ( desc !== null && desc.configurable === true );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isConfigurableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own property is configurable.\n*\n* @module @stdlib/assert/is-configurable-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isConfigurableProperty = require( '@stdlib/assert/is-configurable-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'writable': true,\n*     'value': true\n* });\n*\n* var bool = isConfigurableProperty( obj, 'boop' );\n* // returns true\n*\n* bool = isConfigurableProperty( obj, 'beep' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isConfigurableProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isConfigurableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptorIn = require( '@stdlib/utils/property-descriptor-in' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own or inherited property is configurable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is configurable\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'writable': true,\n*     'value': true\n* });\n*\n* var bool = isConfigurablePropertyIn( obj, 'boop' );\n* // returns true\n*\n* bool = isConfigurablePropertyIn( obj, 'beep' );\n* // returns false\n*/\nfunction isConfigurablePropertyIn( value, property ) {\n\tvar desc = propertyDescriptorIn( value, property );\n\treturn ( desc !== null && desc.configurable === true );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isConfigurablePropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own or inherited property is configurable.\n*\n* @module @stdlib/assert/is-configurable-property-in\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isConfigurablePropertyIn = require( '@stdlib/assert/is-configurable-property-in' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'writable': true,\n*     'value': true\n* });\n*\n* var bool = isConfigurablePropertyIn( obj, 'boop' );\n* // returns true\n*\n* bool = isConfigurablePropertyIn( obj, 'beep' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isConfigurablePropertyIn = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isConfigurablePropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\nvar cbrt = require( '@stdlib/math/base/special/cbrt' );\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a value which is a cube number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a value which is a cube number\n*\n* @example\n* var bool = isCubeNumber( 8.0 );\n* // returns true\n*\n* @example\n* var bool = isCubeNumber( new Number( 8.0 ) );\n* // returns false\n*/\nfunction isCubeNumber( value ) {\n\tvar n;\n\tif ( !isInteger( value ) ) {\n\t\treturn false;\n\t}\n\tn = floor( cbrt( value ) + 0.5 );\n\treturn n*n*n === value;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isCubeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\nvar cbrt = require( '@stdlib/math/base/special/cbrt' );\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value which is a cube number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value which is a cube number\n*\n* @example\n* var bool = isCubeNumber( 8.0 );\n* // returns false\n*\n* @example\n* var bool = isCubeNumber( new Number( 8.0 ) );\n* // returns true\n*/\nfunction isCubeNumber( value ) {\n\tvar n;\n\tvar x;\n\tif ( !isInteger( value ) ) {\n\t\treturn false;\n\t}\n\tx = value.valueOf();\n\tn = floor( cbrt( x ) + 0.5 );\n\treturn n*n*n === x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isCubeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a cube number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a cube number\n*\n* @example\n* var bool = isCubeNumber( 8.0 );\n* // returns true\n*\n* @example\n* var bool = isCubeNumber( new Number( 8.0 ) );\n* // returns true\n*\n* @example\n* var bool = isCubeNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isCubeNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isCubeNumber( null );\n* // returns false\n*/\nfunction isCubeNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isCubeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a cube number.\n*\n* @module @stdlib/assert/is-cube-number\n*\n* @example\n* var isCubeNumber = require( '@stdlib/assert/is-cube-number' );\n*\n* var bool = isCubeNumber( 8.0 );\n* // returns true\n*\n* bool = isCubeNumber( new Number( 8.0 ) );\n* // returns true\n*\n* bool = isCubeNumber( 3.14 );\n* // returns false\n*\n* bool = isCubeNumber( -5.0 );\n* // returns false\n*\n* bool = isCubeNumber( null );\n* // returns false\n*\n* @example\n* var isCubeNumber = require( '@stdlib/assert/is-cube-number' ).isPrimitive;\n*\n* var bool = isCubeNumber( 8.0 );\n* // returns true\n*\n* bool = isCubeNumber( new Number( 8.0 ) );\n* // returns false\n*\n* @example\n* var isCubeNumber = require( '@stdlib/assert/is-cube-number' ).isObject;\n*\n* var bool = isCubeNumber( 8.0 );\n* // returns false\n*\n* bool = isCubeNumber( new Number( 8.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isCubeNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isCubeNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isCubeNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isCubeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if the current process is running on Darwin.\n*\n* @module @stdlib/assert/is-darwin\n* @type {boolean}\n*\n* @example\n* var PLATFORM = require( '@stdlib/os/platform' );\n* var IS_DARWIN = require( '@stdlib/assert/is-darwin' );\n*\n* if ( IS_DARWIN ) {\n*     console.log( 'Running on Darwin...' );\n* } else {\n*     console.log( 'Running on %s...', PLATFORM );\n* }\n*/\n\n// MODULES //\n\nvar PLATFORM = require( '@stdlib/os/platform' );\n\n\n// MAIN //\n\n/**\n* Boolean indicating if the current process is running on Darwin.\n*\n* @constant\n* @type {boolean}\n*/\nvar IS_DARWIN = ( PLATFORM === 'darwin' );\n\n\n// EXPORTS //\n\nmodule.exports = IS_DARWIN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptor = require( '@stdlib/utils/property-descriptor' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property has a data descriptor.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property has a data descriptor\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function getter() {\n*     return 'beep';\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'get': getter\n* });\n*\n* var bool = isDataProperty( obj, 'boop' );\n* // returns true\n*\n* bool = isDataProperty( obj, 'beep' );\n* // returns false\n*/\nfunction isDataProperty( value, property ) {\n\tvar desc = propertyDescriptor( value, property );\n\treturn ( desc !== null && typeof desc.writable === 'boolean' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isDataProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own property has a data descriptor.\n*\n* @module @stdlib/assert/is-data-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isDataProperty = require( '@stdlib/assert/is-data-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function getter() {\n*     return 'beep';\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'get': getter\n* });\n*\n* var bool = isDataProperty( obj, 'boop' );\n* // returns true\n*\n* bool = isDataProperty( obj, 'beep' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isDataProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isDataProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptorIn = require( '@stdlib/utils/property-descriptor-in' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own or inherited property has a data descriptor.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property has a data descriptor\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function getter() {\n*     return 'beep';\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'get': getter\n* });\n*\n* var bool = isDataPropertyIn( obj, 'boop' );\n* // returns true\n*\n* bool = isDataPropertyIn( obj, 'beep' );\n* // returns false\n*/\nfunction isDataPropertyIn( value, property ) {\n\tvar desc = propertyDescriptorIn( value, property );\n\treturn ( desc !== null && typeof desc.writable === 'boolean' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isDataPropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own or inherited property has a data descriptor.\n*\n* @module @stdlib/assert/is-data-property-in\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isDataPropertyIn = require( '@stdlib/assert/is-data-property-in' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function getter() {\n*     return 'beep';\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'get': getter\n* });\n*\n* var bool = isDataPropertyIn( obj, 'boop' );\n* // returns true\n*\n* bool = isDataPropertyIn( obj, 'beep' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isDataPropertyIn = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isDataPropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\n\n\n// VARIABLES //\n\n// Character codes:\nvar ZERO = 48;\nvar NINE = 57;\n\n\n// MAIN //\n\n/**\n* Tests whether a string contains only numeric digits.\n*\n* @param {*} x - value to test\n* @returns {boolean} boolean indicating if a string contains only numeric digits\n*\n* @example\n* var out = isDigitString( '0123456789' );\n* // returns true\n*\n* @example\n* var out = isDigitString( '0xffffff' );\n* // returns false\n*\n* @example\n* var out = isDigitString( '' );\n* // returns false\n*\n* @example\n* var out = isDigitString( 123 );\n* // returns false\n*/\nfunction isDigitString( x ) {\n\tvar len;\n\tvar ch;\n\tvar i;\n\tif ( !isString( x ) ) {\n\t\treturn false;\n\t}\n\tlen = x.length;\n\tif ( len === 0 ) {\n\t\treturn false;\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tch = x.charCodeAt( i );\n\t\tif ( ch < ZERO || ch > NINE ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isDigitString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a string contains only numeric digits.\n*\n* @module @stdlib/assert/is-digit-string\n*\n* @example\n* var isDigitString = require( '@stdlib/assert/is-digit-string' );\n*\n* var out = isDigitString( '0123456789' );\n* // returns true\n*\n* out = isDigitString( '0xffffff' );\n* // returns false\n*\n* out = isDigitString( '' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isDigitString = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isDigitString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar readFile = require( '@stdlib/fs/read-file' ).sync;\nvar contains = require( './../../contains' );\nvar exists = require( '@stdlib/fs/exists' ).sync;\n\n\n// VARIABLES //\n\nvar OPTS = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if the process is running in a Docker container.\n*\n* @returns {boolean} boolean indicating if the process is running in a Docker container\n*\n* @example\n* var bool = isDocker();\n* // returns <boolean>\n*/\nfunction isDocker() {\n\tvar file;\n\tif ( exists( '/.dockerenv' ) ) {\n\t\treturn true;\n\t}\n\tfile = readFile( '/proc/self/cgroup', OPTS );\n\tif ( file instanceof Error ) {\n\t\treturn false;\n\t}\n\treturn contains( file, 'docker' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isDocker;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if the process is running in a Docker container.\n*\n* @module @stdlib/assert/is-docker\n*\n* @example\n* var IS_DOCKER = require( '@stdlib/assert/is-docker' );\n*\n* var bool = IS_DOCKER;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar isDocker = require( './main.js' );\n\n\n// MAIN //\n\nvar bool = isDocker();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nmodule.exports = process;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\nvar isObject = require( './../../is-plain-object' );\nvar isString = require( './../../is-string' ).isPrimitive;\nvar proc = require( './process.js' );\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if the runtime is Electron.\n*\n* @returns {boolean} boolean indicating if runtime is Electron\n*\n* @example\n* var bool = isElectron();\n* // returns <boolean>\n*/\nfunction isElectron() {\n\treturn (\n\t\t// Check for a `process` global variable:\n\t\ttypeof proc === 'object' &&\n\n\t\t// Check that the `process` global variable has the expected internal class:\n\t\tnativeClass( proc ) === '[object process]' &&\n\n\t\t// Check for a `versions` property:\n\t\tisObject( proc.versions ) &&\n\n\t\t// Check for an `electron` property:\n\t\tisString( proc.versions.electron ) &&\n\n\t\t// Check for a `chrome` property:\n\t\tisString( proc.versions.chrome ) &&\n\n\t\t// Check for a `type` property:\n\t\t(\n\t\t\tproc.type === 'browser' ||\n\t\t\tproc.type === 'renderer'\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isElectron;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if the runtime is Electron.\n*\n* @module @stdlib/assert/is-electron\n*\n* @example\n* var IS_ELECTRON = require( '@stdlib/assert/is-electron' );\n*\n* var bool = IS_ELECTRON;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar isElectron = require( './main.js' );\n\n\n// MAIN //\n\nvar bool = isElectron();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nmodule.exports = process;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isElectron = require( './../../is-electron' );\nvar proc = require( './process.js' );\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if the runtime is the main Electron process.\n*\n* @returns {boolean} boolean indicating if runtime is the main Electron process\n*\n* @example\n* var bool = isElectronMain();\n* // returns <boolean>\n*/\nfunction isElectronMain() {\n\treturn (\n\t\tisElectron &&\n\t\tproc.type === 'browser'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isElectronMain;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if the runtime is the main Electron process.\n*\n* @module @stdlib/assert/is-electron-main\n*\n* @example\n* var IS_ELECTRON_MAIN = require( '@stdlib/assert/is-electron-main' );\n*\n* var bool = IS_ELECTRON_MAIN;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar isElectronMain = require( './main.js' );\n\n\n// MAIN //\n\nvar bool = isElectronMain();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nmodule.exports = process;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isElectron = require( './../../is-electron' );\nvar proc = require( './process.js' );\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if the runtime is the Electron renderer process.\n*\n* @returns {boolean} boolean indicating if runtime is the Electron renderer process\n*\n* @example\n* var bool = isElectronRenderer();\n* // returns <boolean>\n*/\nfunction isElectronRenderer() {\n\treturn (\n\t\tisElectron &&\n\t\tproc.type === 'renderer'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isElectronRenderer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if the runtime is the Electron renderer process.\n*\n* @module @stdlib/assert/is-electron-renderer\n*\n* @example\n* var IS_ELECTRON_RENDERER = require( '@stdlib/assert/is-electron-renderer' );\n*\n* var bool = IS_ELECTRON_RENDERER;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar isElectronRenderer = require( './main.js' );\n\n\n// MAIN //\n\nvar bool = isElectronRenderer();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\n\n\n// VARIABLES //\n\nvar RE = /@/;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a valid(ish) email address.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a valid(ish) email address\n*\n* @example\n* var bool = isEmail( 'beep@boop.com' );\n* // returns true\n*\n* @example\n* var bool = isEmail( 'beep' );\n* // returns false\n*\n* @example\n* var bool = isEmail( 'beep.com' );\n* // returns false\n*\n* @example\n* var bool = isEmail( null );\n* // returns false\n*/\nfunction isEmail( value ) {\n\treturn isString( value ) && RE.test( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEmail;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an email address.\n*\n* @module @stdlib/assert/is-email-address\n*\n* @example\n* var isEmail = require( '@stdlib/assert/is-email-address' );\n*\n* var bool = isEmail( 'beep@boop.com' );\n* // returns true\n*\n* bool = isEmail( 'beep' );\n* // returns false\n*\n* bool = isEmail( null );\n* // returns false\n*/\n\n// MODULES //\n\nvar isEmail = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isEmail;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( './../../is-array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an empty array.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an empty array\n*\n* @example\n* var bool = isEmptyArray( [] );\n* // returns true\n*\n* @example\n* var bool = isEmptyArray( [ 1, 2, 3 ] );\n* // returns false\n*\n* @example\n* var bool = isEmptyArray( {} );\n* // returns false\n*/\nfunction isEmptyArray( value ) {\n\treturn (\n\t\tisArray( value ) &&\n\t\tvalue.length === 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEmptyArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an empty array.\n*\n* @module @stdlib/assert/is-empty-array\n*\n* @example\n* var isEmptyArray = require( '@stdlib/assert/is-empty-array' );\n*\n* var bool = isEmptyArray( [] );\n* // returns true\n*\n* bool = isEmptyArray( [ 1, 2, 3 ] );\n* // returns false\n*\n* bool = isEmptyArray( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isEmptyArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isEmptyArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a value is an empty array-like object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is an empty array-like object\n*\n* @example\n* var bool = isEmptyArrayLikeObject( [] );\n* // returns true\n*\n* @example\n* var bool = isEmptyArrayLikeObject( { 'length': 0 } );\n* // returns true\n*\n* @example\n* var bool = isEmptyArrayLikeObject( '' );\n* // returns false\n*/\nfunction isEmptyArrayLikeObject( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.length === 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEmptyArrayLikeObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an empty array-like object.\n*\n* @module @stdlib/assert/is-empty-array-like-object\n*\n* @example\n* var isEmptyArrayLikeObject = require( '@stdlib/assert/is-empty-array-like-object' );\n*\n* var bool = isEmptyArrayLikeObject( [] );\n* // returns true\n*\n* bool = isEmptyArrayLikeObject( { 'length': 0 } );\n* // returns true\n*\n* bool = isEmptyArrayLikeObject( '' );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a value is an empty collection.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an empty collection\n*\n* @example\n* var bool = isEmptyCollection( [] );\n* // returns true\n*\n* @example\n* var bool = isEmptyCollection( { 'length': 0 } );\n* // returns true\n*\n* @example\n* var bool = isEmptyCollection( [ 1, 2, 3 ] );\n* // returns false\n*\n* @example\n* var bool = isEmptyCollection( {} );\n* // returns false\n*/\nfunction isEmptyCollection( value ) {\n\treturn (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\tvalue.length === 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEmptyCollection;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an empty collection.\n*\n* @module @stdlib/assert/is-empty-collection\n*\n* @example\n* var isEmptyCollection = require( '@stdlib/assert/is-empty-collection' );\n*\n* var bool = isEmptyCollection( [] );\n* // returns true\n*\n* bool = isEmptyCollection( [ 1, 2, 3 ] );\n* // returns false\n*\n* bool = isEmptyCollection( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar isPlainObject = require( './../../is-plain-object' );\nvar hasSymbolSupport = require( './../../has-symbol-support' );\n\n\n// VARIABLES //\n\nvar FLG = hasSymbolSupport();\n\n\n// MAIN //\n\n/**\n* Tests if a value is an empty object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an empty object\n*\n* @example\n* var bool = isEmptyObject( {} );\n* // returns true\n*\n* @example\n* var bool = isEmptyObject( { 'beep': 'boop' } );\n* // returns false\n*\n* @example\n* var bool = isEmptyObject( [] );\n* // returns false\n*/\nfunction isEmptyObject( value ) {\n\tif ( !isPlainObject( value ) ) {\n\t\treturn false;\n\t}\n\tif ( objectKeys( value ).length > 0 ) {\n\t\treturn false;\n\t}\n\tif ( FLG && Object.getOwnPropertySymbols( value ).length > 0 ) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEmptyObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an empty object.\n*\n* @module @stdlib/assert/is-empty-object\n*\n* @example\n* var isEmptyObject = require( '@stdlib/assert/is-empty-object' );\n*\n* var bool = isEmptyObject( {} );\n* // returns true\n*\n* bool = isEmptyObject( { 'beep': 'boop' } );\n* // returns false\n*\n* bool = isEmptyObject( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isEmptyObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isEmptyObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a value is an empty string primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an empty string primitive\n*\n* @example\n* var bool = isEmptyString( '' );\n* // returns true\n*\n* @example\n* var bool = isEmptyString( 'beep' );\n* // returns false\n*\n* @example\n* var bool = isEmptyString( [] );\n* // returns false\n*/\nfunction isEmptyString( value ) {\n\treturn ( value === '' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEmptyString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is an empty string object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an empty string object\n*\n* @example\n* var bool = isEmptyString( '' );\n* // returns false\n*\n* @example\n* var bool = isEmptyString( new String( '' ) );\n* // returns true\n*\n* @example\n* var bool = isEmptyString( [] );\n* // returns false\n*/\nfunction isEmptyString( value ) {\n\treturn (\n\t\tisString( value ) &&\n\t\tvalue.valueOf() === ''\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEmptyString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an empty string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an empty string\n*\n* @example\n* var bool = isEmptyString( '' );\n* // returns true\n*\n* @example\n* var bool = isEmptyString( 'beep' );\n* // returns false\n*\n* @example\n* var bool = isEmptyString( [] );\n* // returns false\n*/\nfunction isEmptyString( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEmptyString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an empty string.\n*\n* @module @stdlib/assert/is-empty-string\n*\n* @example\n* var isEmptyString = require( '@stdlib/assert/is-empty-string' );\n*\n* var bool = isEmptyString( '' );\n* // returns true\n*\n* bool = isEmptyString( 'beep' );\n* // returns false\n*\n* bool = isEmptyString( [] );\n* // returns false\n*\n* @example\n* var isEmptyString = require( '@stdlib/assert/is-empty-string' ).isObject;\n*\n* var bool = isEmptyString( new String( '' ) );\n* // returns true\n*\n* bool = isEmptyString( '' );\n* // returns false\n*\n* @example\n* var isEmptyString = require( '@stdlib/assert/is-empty-string' ).isPrimitive;\n*\n* var bool = isEmptyString( '' );\n* // returns true\n*\n* bool = isEmptyString( new String( '' ) );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isEmptyString = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isEmptyString, 'isPrimitive', isPrimitive );\nsetReadOnly( isEmptyString, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isEmptyString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptorIn = require( '@stdlib/utils/property-descriptor-in' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own or inherited property is enumerable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is enumerable\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': true,\n*     'enumerable': false,\n*     'writable': true,\n*     'value': true\n* });\n*\n* var bool = isEnumerablePropertyIn( obj, 'boop' );\n* // returns true\n*\n* bool = isEnumerablePropertyIn( obj, 'beep' );\n* // returns false\n*/\nfunction isEnumerablePropertyIn( value, property ) {\n\tvar desc = propertyDescriptorIn( value, property ); // Note: works for both property names and symbols, which the `in` operator does not.\n\treturn ( desc !== null && desc.enumerable === true );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEnumerablePropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own or inherited property is enumerable.\n*\n* @module @stdlib/assert/is-enumerable-property-in\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isEnumerablePropertyIn = require( '@stdlib/assert/is-enumerable-property-in' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': true,\n*     'enumerable': false,\n*     'writable': true,\n*     'value': true\n* });\n*\n* var bool = isEnumerablePropertyIn( obj, 'boop' );\n* // returns true\n*\n* bool = isEnumerablePropertyIn( obj, 'beep' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isEnumerablePropertyIn = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isEnumerablePropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar typeOf = require( '@stdlib/utils/type-of' );\nvar isError = require( './../../is-error' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an `EvalError` object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an `EvalError` object\n*\n* @example\n* var bool = isEvalError( new EvalError( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isEvalError( {} );\n* // returns false\n*/\nfunction isEvalError( value ) {\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for `EvalError` objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tif ( value instanceof EvalError ) {\n\t\treturn true;\n\t}\n\t// All `EvalError` objects are `Error` objects...\n\tif ( isError( value ) ) {\n\t\t// Walk the prototype tree until we find the desired constructor...\n\t\twhile ( value ) {\n\t\t\tif ( typeOf( value ) === 'evalerror' ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvalue = getPrototypeOf( value );\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEvalError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an `EvalError` object.\n*\n* @module @stdlib/assert/is-eval-error\n*\n* @example\n* var isEvalError = require( '@stdlib/assert/is-eval-error' );\n*\n* var bool = isEvalError( new EvalError( 'beep' ) );\n* // returns true\n*\n* bool = isEvalError( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isEvalError = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isEvalError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive that is an even number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive that is an even number\n*\n* @example\n* var bool = isEven( -4.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( new Number( -4.0 ) );\n* // returns false\n*/\nfunction isEven( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue % 2 === 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEven;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object that is an even number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object that is an even number\n*\n* @example\n* var bool = isEven( 4.0 );\n* // returns false\n*\n* @example\n* var bool = isEven( new Number( 4.0 ) );\n* // returns true\n*/\nfunction isEven( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue % 2 === 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEven;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an even number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an even number.\n*\n* @example\n* var bool = isEven( 4.0 );\n* // returns true\n*\n* @example\n* var bool = isEven( new Number( 4.0 ) );\n* // returns true\n*\n* @example\n* var bool = isEven( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isEven( new Number( 5.0 ) );\n* // returns false\n*\n* @example\n* var bool = isEven( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isEven( null );\n* // returns false\n*/\nfunction isEven( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isEven;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an even number.\n*\n* @module @stdlib/assert/is-even\n*\n* @example\n* var isEven = require( '@stdlib/assert/is-even' );\n*\n* var bool = isEven( 4.0 );\n* // returns true\n*\n* bool = isEven( new Number( 4.0 ) );\n* // returns true\n*\n* bool = isEven( 3.0 );\n* // returns false\n*\n* bool = isEven( new Number( 5.0 ) );\n* // returns false\n*\n* bool = isEven( -3.14 );\n* // returns false\n*\n* bool = isEven( null );\n* // returns false\n*\n* @example\n* // Use interface to check for even number primitives...\n* var isEven = require( '@stdlib/assert/is-even' ).isPrimitive;\n*\n* var bool = isEven( -4.0 );\n* // returns true\n*\n* bool = isEven( new Number( -4.0 ) );\n* // returns false\n*\n* @example\n* // Use interface to check for even number objects...\n* var isEven = require( '@stdlib/assert/is-even' ).isObject;\n*\n* var bool = isEven( 4.0 );\n* // returns false\n*\n* bool = isEven( new Number( 4.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isEven = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isEven, 'isPrimitive', isPrimitive );\nsetReadOnly( isEven, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isEven;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a value is falsy.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is falsy\n*\n* @example\n* var bool = isFalsy( false );\n* // returns true\n*\n* @example\n* var bool = isFalsy( null );\n* // returns true\n*\n* @example\n* var bool = isFalsy( '' );\n* // returns true\n*\n* @example\n* var bool = isFalsy( 0 );\n* // returns true\n*\n* @example\n* var bool = isFalsy( void 0 );\n* // returns true\n*\n* @example\n* var bool = isFalsy( NaN );\n* // returns true\n*\n* @example\n* var bool = isFalsy( [] );\n* // returns false\n*/\nfunction isFalsy( value ) {\n\treturn ( value ) ? false : true; // eslint-disable-line no-unneeded-ternary\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFalsy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is falsy.\n*\n* @module @stdlib/assert/is-falsy\n*\n* @example\n* var isFalsy = require( '@stdlib/assert/is-falsy' );\n*\n* var bool = isFalsy( false );\n* // returns true\n*\n* bool = isFalsy( null );\n* // returns true\n*\n* bool = isFalsy( '' );\n* // returns true\n*\n* bool = isFalsy( 0 );\n* // returns true\n*\n* bool = isFalsy( void 0 );\n* // returns true\n*\n* bool = isFalsy( NaN );\n* // returns true\n*\n* bool = isFalsy( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isFalsy = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFalsy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only falsy values.\n*\n* @module @stdlib/assert/is-falsy-array\n*\n* @example\n* var isFalsyArray = require( '@stdlib/assert/is-falsy-array' );\n*\n* var bool = isFalsyArray( [ false, null, void 0, '', 0, NaN ] );\n* // returns true\n*\n* bool = isFalsyArray( [ {}, [] ] );\n* // returns false\n*\n* bool = isFalsyArray( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar arrayfun = require( './../../tools/array-like-function' );\nvar isFalsy = require( './../../is-falsy' );\n\n\n// MAIN //\n\nvar isFalsyArray = arrayfun( isFalsy );\n\n\n// EXPORTS //\n\nmodule.exports = isFalsyArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/no-redeclare */\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar isfinite = require( '@stdlib/math/base/assert/is-finite' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a finite value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a finite value\n*\n* @example\n* var bool = isFinite( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isFinite( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isFinite( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisfinite( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/no-redeclare */\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar isfinite = require( '@stdlib/math/base/assert/is-finite' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a finite value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a finite value\n*\n* @example\n* var bool = isFinite( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isFinite( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isFinite( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisfinite( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/no-redeclare */\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a finite number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a finite number\n*\n* @example\n* var bool = isFinite( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isFinite( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isFinite( 1.0/0.0 );\n* // returns false\n*\n* @example\n* var bool = isFinite( null );\n* // returns false\n*/\nfunction isFinite( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable stdlib/no-redeclare */\n\n'use strict';\n\n/**\n* Test if a value is a finite number.\n*\n* @module @stdlib/assert/is-finite\n*\n* @example\n* var isFinite = require( '@stdlib/assert/is-finite' );\n*\n* var bool = isFinite( 5.0 );\n* // returns true\n*\n* bool = isFinite( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isFinite( 1.0/0.0 );\n* // returns false\n*\n* bool = isFinite( null );\n* // returns false\n*\n* @example\n* var isFinite = require( '@stdlib/assert/is-finite' ).isPrimitive;\n*\n* var bool = isFinite( -3.0 );\n* // returns true\n*\n* bool = isFinite( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* var isFinite = require( '@stdlib/assert/is-finite' ).isObject;\n*\n* var bool = isFinite( 3.0 );\n* // returns false\n*\n* bool = isFinite( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isFinite = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isFinite, 'isPrimitive', isPrimitive );\nsetReadOnly( isFinite, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isFinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only finite numbers.\n*\n* @module @stdlib/assert/is-finite-array\n*\n* @example\n* var isFiniteArray = require( '@stdlib/assert/is-finite-array' );\n*\n* var bool = isFiniteArray( [ -3.0, new Number(0.0), 2.0 ] );\n* // returns true\n*\n* bool = isFiniteArray( [ -3.0, 1.0/0.0 ] );\n* // returns false\n*\n* @example\n* var isFiniteArray = require( '@stdlib/assert/is-finite-array' ).primitives;\n*\n* var bool = isFiniteArray( [ -1.0, 10.0 ] );\n* // returns true\n*\n* bool = isFiniteArray( [ -1.5, 0.0, 5.0 ] );\n* // returns true\n*\n* bool = isFiniteArray( [ -3.0, new Number(-1.0) ] );\n* // returns false\n*\n* @example\n* var isFiniteArray = require( '@stdlib/assert/is-finite-array' ).objects;\n*\n* var bool = isFiniteArray( [ new Number(1.0), new Number(3.0) ] );\n* // returns true\n*\n* bool = isFiniteArray( [ -1.0, 0.0, 3.0 ] );\n* // returns false\n*\n* bool = isFiniteArray( [ 3.0, new Number(-1.0) ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isFinite = require( './../../is-finite' ); // eslint-disable-line stdlib/no-redeclare\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isFiniteArray = arrayfun( isFinite );\nsetReadOnly( isFiniteArray, 'primitives', arrayfun( isFinite.isPrimitive ) );\nsetReadOnly( isFiniteArray, 'objects', arrayfun( isFinite.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isFiniteArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isMatrixLike = require( './../../is-matrix-like' );\nvar isFloat32Array = require( './../../is-float32array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a 2-dimensional ndarray-like object whose underlying data type is `float32`.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a 2-dimensional ndarray-like object whose underlying data type is `float32`\n*\n* @example\n* var Float32Array = require( '@stdlib/array/float32' );\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var buffer = new Float32Array( [ 0, 0, 0, 0 ] );\n* var arr = ndarray( 'float32', buffer, [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isFloat32MatrixLike( arr );\n* // returns true\n*\n* bool = isFloat32MatrixLike( [] );\n* // returns false\n*/\nfunction isFloat32MatrixLike( v ) {\n\treturn ( isMatrixLike( v ) && isFloat32Array( v.data ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat32MatrixLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a 2-dimensional ndarray-like object whose underlying data type is `float32`.\n*\n* @module @stdlib/assert/is-float32matrix-like\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var Float32Array = require( '@stdlib/array/float32' );\n* var isFloat32MatrixLike = require( '@stdlib/assert/is-float32matrix-like' );\n*\n* var buffer = new Float32Array( [ 0, 0, 0, 0 ] );\n*\n* var arr = ndarray( 'float32', buffer, [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isFloat32MatrixLike( arr );\n* // returns true\n*\n* bool = isFloat32MatrixLike( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isFloat32MatrixLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFloat32MatrixLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isndarrayLike = require( './../../is-ndarray-like' );\nvar isFloat32Array = require( './../../is-float32array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an ndarray-like object whose underlying data type is `float32`.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is an ndarray-like object whose underlying data type is `float32`\n*\n* @example\n* var Float32Array = require( '@stdlib/array/float32' );\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var buffer = new Float32Array( [ 0, 0, 0, 0 ] );\n* var arr = ndarray( 'float32', buffer, [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isFloat32ndarrayLike( arr );\n* // returns true\n*\n* bool = isFloat32ndarrayLike( [] );\n* // returns false\n*/\nfunction isFloat32ndarrayLike( v ) {\n\treturn ( isndarrayLike( v ) && isFloat32Array( v.data ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat32ndarrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an ndarray-like object whose underlying data type is `float32`.\n*\n* @module @stdlib/assert/is-float32ndarray-like\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var Float32Array = require( '@stdlib/array/float32' );\n* var isFloat32ndarrayLike = require( '@stdlib/assert/is-float32ndarray-like' );\n*\n* var buffer = new Float32Array( [ 0, 0, 0, 0 ] );\n*\n* var arr = ndarray( 'float32', buffer, [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isFloat32ndarrayLike( arr );\n* // returns true\n*\n* bool = isFloat32ndarrayLike( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isFloat32ndarrayLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFloat32ndarrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isndarrayLike = require( './../../is-ndarray-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a 1-dimensional ndarray-like object.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a 1-dimensional ndarray-like object\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var arr = ndarray( 'generic', [ 0, 0, 0, 0 ], [ 4 ], [ 1 ], 0, 'row-major' );\n* var bool = isVectorLike( arr );\n* // returns true\n*\n* bool = isVectorLike( [] );\n* // returns false\n*/\nfunction isVectorLike( v ) {\n\treturn (\n\t\tisndarrayLike( v ) &&\n\t\tv.ndims === 1 &&\n\t\tv.shape.length === 1 &&\n\t\tv.strides.length === 1\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isVectorLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a 1-dimensional ndarray-like object.\n*\n* @module @stdlib/assert/is-vector-like\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var isVectorLike = require( '@stdlib/assert/is-vector-like' );\n*\n* var arr = ndarray( 'generic', [ 0, 0, 0, 0 ], [ 4 ], [ 1 ], 0, 'row-major' );\n* var bool = isVectorLike( arr );\n* // returns true\n*\n* bool = isVectorLike( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isVectorLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isVectorLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isVectorLike = require( './../../is-vector-like' );\nvar isFloat32Array = require( './../../is-float32array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a 1-dimensional ndarray-like object whose underlying data type is `float32`.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a 1-dimensional ndarray-like object whose underlying data type is `float32`\n*\n* @example\n* var Float32Array = require( '@stdlib/array/float32' );\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var buffer = new Float32Array( [ 0, 0, 0, 0 ] );\n* var arr = ndarray( 'float32', buffer, [ 4 ], [ 1 ], 0, 'row-major' );\n*\n* var bool = isFloat32VectorLike( arr );\n* // returns true\n*\n* bool = isFloat32VectorLike( [] );\n* // returns false\n*/\nfunction isFloat32VectorLike( v ) {\n\treturn ( isVectorLike( v ) && isFloat32Array( v.data ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat32VectorLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a 1-dimensional ndarray-like object whose underlying data type is `float32`.\n*\n* @module @stdlib/assert/is-float32vector-like\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var Float32Array = require( '@stdlib/array/float32' );\n* var isFloat32VectorLike = require( '@stdlib/assert/is-float32vector-like' );\n*\n* var buffer = new Float32Array( [ 0, 0, 0, 0 ] );\n*\n* var arr = ndarray( 'float32', buffer, [ 4 ], [ 1 ], 0, 'row-major' );\n*\n* var bool = isFloat32VectorLike( arr );\n* // returns true\n*\n* bool = isFloat32VectorLike( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isFloat32VectorLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFloat32VectorLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isMatrixLike = require( './../../is-matrix-like' );\nvar isFloat64Array = require( './../../is-float64array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a 2-dimensional ndarray-like object whose underlying data type is `float64`.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a 2-dimensional ndarray-like object whose underlying data type is `float64`\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var buffer = new Float64Array( [ 0, 0, 0, 0 ] );\n* var arr = ndarray( 'float64', buffer, [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isFloat64MatrixLike( arr );\n* // returns true\n*\n* bool = isFloat64MatrixLike( [] );\n* // returns false\n*/\nfunction isFloat64MatrixLike( v ) {\n\treturn ( isMatrixLike( v ) && isFloat64Array( v.data ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat64MatrixLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a 2-dimensional ndarray-like object whose underlying data type is `float64`.\n*\n* @module @stdlib/assert/is-float64matrix-like\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var Float64Array = require( '@stdlib/array/float64' );\n* var isFloat64MatrixLike = require( '@stdlib/assert/is-float64matrix-like' );\n*\n* var buffer = new Float64Array( [ 0, 0, 0, 0 ] );\n*\n* var arr = ndarray( 'float64', buffer, [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isFloat64MatrixLike( arr );\n* // returns true\n*\n* bool = isFloat64MatrixLike( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isFloat64MatrixLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFloat64MatrixLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isndarrayLike = require( './../../is-ndarray-like' );\nvar isFloat64Array = require( './../../is-float64array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an ndarray-like object whose underlying data type is `float64`.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is an ndarray-like object whose underlying data type is `float64`\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var buffer = new Float64Array( [ 0, 0, 0, 0 ] );\n* var arr = ndarray( 'float64', buffer, [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isFloat64ndarrayLike( arr );\n* // returns true\n*\n* bool = isFloat64ndarrayLike( [] );\n* // returns false\n*/\nfunction isFloat64ndarrayLike( v ) {\n\treturn ( isndarrayLike( v ) && isFloat64Array( v.data ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat64ndarrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an ndarray-like object whose underlying data type is `float64`.\n*\n* @module @stdlib/assert/is-float64ndarray-like\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var Float64Array = require( '@stdlib/array/float64' );\n* var isFloat64ndarrayLike = require( '@stdlib/assert/is-float64ndarray-like' );\n*\n* var buffer = new Float64Array( [ 0, 0, 0, 0 ] );\n*\n* var arr = ndarray( 'float64', buffer, [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n*\n* var bool = isFloat64ndarrayLike( arr );\n* // returns true\n*\n* bool = isFloat64ndarrayLike( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isFloat64ndarrayLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFloat64ndarrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isVectorLike = require( './../../is-vector-like' );\nvar isFloat64Array = require( './../../is-float64array' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a 1-dimensional ndarray-like object whose underlying data type is `float64`.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a 1-dimensional ndarray-like object whose underlying data type is `float64`\n*\n* @example\n* var Float64Array = require( '@stdlib/array/float64' );\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var buffer = new Float64Array( [ 0, 0, 0, 0 ] );\n* var arr = ndarray( 'float64', buffer, [ 4 ], [ 1 ], 0, 'row-major' );\n*\n* var bool = isFloat64VectorLike( arr );\n* // returns true\n*\n* bool = isFloat64VectorLike( [] );\n* // returns false\n*/\nfunction isFloat64VectorLike( v ) {\n\treturn ( isVectorLike( v ) && isFloat64Array( v.data ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isFloat64VectorLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a 1-dimensional ndarray-like object whose underlying data type is `float64`.\n*\n* @module @stdlib/assert/is-float64vector-like\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var Float64Array = require( '@stdlib/array/float64' );\n* var isFloat64VectorLike = require( '@stdlib/assert/is-float64vector-like' );\n*\n* var buffer = new Float64Array( [ 0, 0, 0, 0 ] );\n* var arr = ndarray( 'float64', buffer, [ 4 ], [ 1 ], 0, 'row-major' );\n*\n* var bool = isFloat64VectorLike( arr );\n* // returns true\n*\n* bool = isFloat64VectorLike( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isFloat64VectorLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isFloat64VectorLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only functions.\n*\n* @module @stdlib/assert/is-function-array\n*\n* @example\n* var isFunctionArray = require( '@stdlib/assert/is-function-array' );\n*\n* function beep() {}\n*\n* function boop() {}\n*\n* var bool = isFunctionArray( [ beep, boop ] );\n* // returns true\n*\n* bool = isFunctionArray( [ {}, beep ] );\n* // returns false\n*\n* bool = isFunctionArray( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar arrayfun = require( './../../tools/array-like-function' );\nvar isFunction = require( './../../is-function' );\n\n\n// MAIN //\n\nvar isFunctionArray = arrayfun( isFunction );\n\n\n// EXPORTS //\n\nmodule.exports = isFunctionArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasGeneratorSupport = require( './../../has-generator-support' );\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// VARIABLES //\n\nvar hasGenerators = hasGeneratorSupport();\n\n\n// MAIN //\n\n/**\n* Tests if a value is a generator object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a generator object\n*\n* @example\n* function* generateID() {\n*     var idx = 0;\n*     while ( idx < idx+1 ) {\n*         yield idx;\n*         idx += 1;\n*     }\n* }\n* var bool = isGeneratorObject( generateID() );\n* // returns true\n*\n* @example\n* var bool = isGeneratorObject( {} );\n* // returns false\n*\n* @example\n* var bool = isGeneratorObject( null );\n* // returns false\n*/\nfunction isGeneratorObject( value ) {\n\treturn ( hasGenerators && nativeClass( value ) === '[object Generator]' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isGeneratorObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a generator object.\n*\n* @module @stdlib/assert/is-generator-object\n*\n* @example\n* var isGeneratorObject = require( '@stdlib/assert/is-generator-object' );\n*\n* function* generateID() {\n*     var idx = 0;\n*     while ( idx < idx+1 ) {\n*         yield idx;\n*         idx += 1;\n*     }\n* }\n*\n* var bool = isGeneratorObject( generateID() );\n* // returns true\n*\n* bool = isGeneratorObject( generateID );\n* // returns false\n*\n* bool = isGeneratorObject( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isGeneratorObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isGeneratorObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a value is generator object-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is generator object-like\n*\n* @example\n* var gen = {\n*     'next': function noop() {},\n*     'return': function noop() {},\n*     'throw': function noop() {}\n* };\n* var bool = isGeneratorObjectLike( gen );\n* // returns true\n*\n* @example\n* function* generateID() {\n*     var idx = 0;\n*     while ( idx < idx+1 ) {\n*         yield idx;\n*         idx += 1;\n*     }\n* }\n* var bool = isGeneratorObjectLike( generateID() );\n* // returns true\n*\n* @example\n* var bool = isGeneratorObjectLike( {} );\n* // returns false\n*\n* @example\n* var bool = isGeneratorObjectLike( null );\n* // returns false\n*/\nfunction isGeneratorObjectLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.next === 'function' &&\n\t\ttypeof value.return === 'function' &&\n\t\ttypeof value.throw === 'function'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isGeneratorObjectLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is generator object-like.\n*\n* @module @stdlib/assert/is-generator-object-like\n*\n* @example\n* var isGeneratorObjectLike = require( '@stdlib/assert/is-generator-object-like' );\n*\n* var gen = {\n*     'next': function noop() {},\n*     'return': function noop() {},\n*     'throw': function noop() {}\n* };\n* var bool = isGeneratorObjectLike( gen );\n* // returns true\n*\n* bool = isGeneratorObjectLike( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isGeneratorObject = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isGeneratorObject;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isUint8Array = require( './../../is-uint8array' );\nvar isBuffer = require( './../../is-buffer' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a gzip buffer (or Uint8Array).\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a gzip buffer\n*\n* @example\n* var Uint8Array = require( '@stdlib/array/uint8' );\n*\n* var buf = new Uint8Array( 20 );\n* buf[ 0 ] = 31;  // 0x1f => magic number\n* buf[ 1 ] = 139; // 0x8b\n* buf[ 2 ] = 8;   // 0x08 => compression method\n*\n* var bool = isgzipBuffer( buf );\n* // returns true\n*\n* @example\n* var Uint8Array = require( '@stdlib/array/uint8' );\n*\n* var bool = isgzipBuffer( new Uint8Array( 20 ) );\n* // returns false\n*\n* @example\n* var bool = isgzipBuffer( [] );\n* // returns false\n*/\nfunction isgzipBuffer( value ) {\n\tif ( !isUint8Array( value ) && !isBuffer( value ) ) {\n\t\treturn false;\n\t}\n\tif ( value.length < 19 ) { // 10-byte header + 8-byte footer + payload\n\t\treturn false;\n\t}\n\treturn (\n\t\t// Check for expected magic number:\n\t\tvalue[ 0 ] === 0x1F &&\n\t\tvalue[ 1 ] === 0x8B &&\n\n\t\t// Check for expected compression method:\n\t\tvalue[ 2 ] === 0x08\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isgzipBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a gzip buffer (or Uint8Array).\n*\n* @module @stdlib/assert/is-gzip-buffer\n*\n* @example\n* var Uint8Array = require( '@stdlib/array/uint8' );\n* var isgzipBuffer = require( '@stdlib/assert/is-gzip-buffer' );\n*\n* var buf = new Uint8Array( 20 );\n* buf[ 0 ] = 31;  // 0x1f => magic number\n* buf[ 1 ] = 139; // 0x8b\n* buf[ 2 ] = 8;   // 0x08 => compression method\n*\n* var bool = isgzipBuffer( buf );\n* // returns true\n*\n* bool = isgzipBuffer( new Uint8Array( 20 ) );\n* // returns false\n*\n* bool = isgzipBuffer( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isgzipBuffer = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isgzipBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\n\n\n// VARIABLES //\n\n// Character codes:\nvar ZERO = 48;\nvar NINE = 57;\nvar A = 65;\nvar F = 70;\nvar a = 97;\nvar f = 102;\n\n\n// MAIN //\n\n/**\n* Tests whether a string contains only hexadecimal digits.\n*\n* @param {*} x - value to test\n* @returns {boolean} boolean indicating if a string contains only hexadecimal digits\n*\n* @example\n* var out = isHexString( '0123456789abcdefABCDEF' );\n* // returns true\n*\n* @example\n* var out = isHexString( '0xffffff' );\n* // returns false\n*\n* @example\n* var out = isHexString( '' );\n* // returns false\n*\n* @example\n* var out = isHexString( 123 );\n* // returns false\n*/\nfunction isHexString( x ) {\n\tvar len;\n\tvar ch;\n\tvar i;\n\tif ( !isString( x ) ) {\n\t\treturn false;\n\t}\n\tlen = x.length;\n\tif ( !len ) {\n\t\treturn false;\n\t}\n\tfor ( i = 0; i < len; i++ ) {\n\t\tch = x.charCodeAt( i );\n\t\tif (\n\t\t\tch < ZERO ||\n\t\t\t( ch > NINE && ch < A ) ||\n\t\t\t( ch > F && ch < a ) ||\n\t\t\tch > f\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isHexString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a string contains only hexadecimal digits.\n*\n* @module @stdlib/assert/is-hex-string\n*\n* @example\n* var isHexString = require( '@stdlib/assert/is-hex-string' );\n*\n* var out = isHexString( '0123456789abcdefABCDEF' );\n* // returns true\n*\n* out = isHexString( '0xffffff' );\n* // returns false\n*\n* out = isHexString( '' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isHexString = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isHexString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar isinf = require( '@stdlib/math/base/assert/is-infinite' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having an infinite value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having an infinite value\n*\n* @example\n* var bool = isInfinite( -1.0/0.0 );\n* // returns true\n*\n* @example\n* var bool = isInfinite( new Number( -1.0/0.0 ) );\n* // returns false\n*/\nfunction isInfinite( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisinf( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar isinf = require( '@stdlib/math/base/assert/is-infinite' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having an infinite value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having an infinite value\n*\n* @example\n* var bool = isInfinite( 1.0/0.0 );\n* // returns false\n*\n* @example\n* var bool = isInfinite( new Number( 1.0/0.0 ) );\n* // returns true\n*/\nfunction isInfinite( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisinf( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an infinite number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is an infinite number\n*\n* @example\n* var bool = isInfinite( 1.0/0.0 );\n* // returns true\n*\n* @example\n* var bool = isInfinite( new Number( 1.0/0.0 ) );\n* // returns true\n*\n* @example\n* var bool = isInfinite( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isInfinite( null );\n* // returns false\n*/\nfunction isInfinite( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an infinite number.\n*\n* @module @stdlib/assert/is-infinite\n*\n* @example\n* var isInfinite = require( '@stdlib/assert/is-infinite' );\n*\n* var bool = isInfinite( 1.0/0.0 );\n* // returns true\n*\n* bool = isInfinite( new Number( 1.0/0.0 ) );\n* // returns true\n*\n* bool = isInfinite( 5.0 );\n* // returns false\n*\n* bool = isInfinite( null );\n* // returns false\n*\n* @example\n* var isInfinite = require( '@stdlib/assert/is-infinite' ).isPrimitive;\n*\n* var bool = isInfinite( -1.0/0.0 );\n* // returns true\n*\n* bool = isInfinite( new Number( -1.0/0.0 ) );\n* // returns false\n*\n* @example\n* var isInfinite = require( '@stdlib/assert/is-infinite' ).isObject;\n*\n* var bool = isInfinite( 1.0/0.0 );\n* // returns false\n*\n* bool = isInfinite( new Number( 1.0/0.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isInfinite = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isInfinite, 'isPrimitive', isPrimitive );\nsetReadOnly( isInfinite, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isInfinite;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( './../../has-own-property' );\n\n\n// MAIN //\n\n/**\n* Tests if an object has an inherited property.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has an inherited property\n*\n* @example\n* var obj = {\n*     'boop': true\n* };\n*\n* var bool = isInheritedProperty( obj, 'toString' );\n* // returns true\n*\n* @example\n* var obj = {\n*     'boop': true\n* };\n*\n* var bool = isInheritedProperty( obj, 'boop' );\n* // returns false\n*\n* @example\n* var obj = {\n*     'boop': true\n* };\n*\n* var bool = isInheritedProperty( obj, 'bap' );\n* // returns false\n*/\nfunction isInheritedProperty( value, property ) {\n\tif ( value === void 0 || value === null || hasOwnProp( value, property ) ) {\n\t\treturn false;\n\t}\n\tif ( typeof property === 'symbol' ) {\n\t\treturn property in Object( value );\n\t}\n\treturn ( String( property ) in Object( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isInheritedProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object has an inherited property.\n*\n* @module @stdlib/assert/is-inherited-property\n*\n* @example\n* var isInheritedProperty = require( '@stdlib/assert/is-inherited-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* var bool = isInheritedProperty( obj, 'toString' );\n* // returns true\n*\n* bool = isInheritedProperty( obj, 'boop' );\n* // returns false\n*\n* bool = isInheritedProperty( obj, 'bop' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInheritedProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isInheritedProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only integers.\n*\n* @module @stdlib/assert/is-integer-array\n*\n* @example\n* var isIntegerArray = require( '@stdlib/assert/is-integer-array' );\n*\n* var bool = isIntegerArray( [ -3.0, new Number(0.0), 2.0 ] );\n* // returns true\n*\n* bool = isIntegerArray( [ -3.0, '3.0' ] );\n* // returns false\n*\n* @example\n* var isIntegerArray = require( '@stdlib/assert/is-integer-array' ).primitives;\n*\n* var bool = isIntegerArray( [ -1.0, 10.0 ] );\n* // returns true\n*\n* bool = isIntegerArray( [ -1.0, 0.0, 5.0 ] );\n* // returns true\n*\n* bool = isIntegerArray( [ -3.0, new Number(-1.0) ] );\n* // returns false\n*\n* @example\n* var isIntegerArray = require( '@stdlib/assert/is-integer-array' ).objects;\n*\n* var bool = isIntegerArray( [ new Number(1.0), new Number(3.0) ] );\n* // returns true\n*\n* bool = isIntegerArray( [ -1.0, 0.0, 3.0 ] );\n* // returns false\n*\n* bool = isIntegerArray( [ 3.0, new Number(-1.0) ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isIntegerArray = arrayfun( isInteger );\nsetReadOnly( isIntegerArray, 'primitives', arrayfun( isInteger.isPrimitive ) );\nsetReadOnly( isIntegerArray, 'objects', arrayfun( isInteger.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isIntegerArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is a JavaScript primitive.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a JavaScript primitive\n*\n* @example\n* var bool = isPrimitive( true );\n* // returns true\n*\n* @example\n* var bool = isPrimitive( {} );\n* // returns false\n*/\nfunction isPrimitive( value ) {\n\tvar type = typeof value;\n\treturn (\n\t\ttype === 'string' ||\n\t\ttype === 'number' ||\n\t\ttype === 'boolean' ||\n\t\ttype === 'symbol' ||  // ES6/ES2015\n\t\ttype === 'bigint' ||  // ES11/ES2020\n\t\tvalue === null ||\n\t\tvalue === void 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPrimitive;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a JavaScript primitive.\n*\n* @module @stdlib/assert/is-primitive\n*\n* @example\n* var isPrimitive = require( '@stdlib/assert/is-primitive' );\n*\n* var bool = isPrimitive( true );\n* // returns true\n*\n* bool = isPrimitive( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPrimitive = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isPrimitive;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( './../../is-function' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is iterator-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is iterator-like\n*\n* @example\n* var it = {\n*     'next': function noop() {}\n* };\n* var bool = isIteratorLike( it );\n* // returns true\n*\n* @example\n* var bool = isIteratorLike( {} );\n* // returns false\n*\n* @example\n* var bool = isIteratorLike( null );\n* // returns false\n*/\nfunction isIteratorLike( value ) {\n\tvar t = typeof value;\n\treturn (\n\t\tvalue !== null &&\n\t\t( t === 'object' || t === 'function' ) &&\n\t\tisFunction( value.next )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isIteratorLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is iterator-like.\n*\n* @module @stdlib/assert/is-iterator-like\n*\n* @example\n* var isIteratorLike = require( '@stdlib/assert/is-iterator-like' );\n*\n* var it = {\n*     'next': function noop() {}\n* };\n* var bool = isIteratorLike( it );\n* // returns true\n*\n* bool = isIteratorLike( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isIterator = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './../../is-primitive' );\nvar isFunction = require( './../../is-function' );\nvar ITERATOR = require( '@stdlib/symbol/iterator' );\nvar isIteratorLike = require( './../../is-iterator-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is iterable-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is iterable-like\n*\n* @example\n* var bool = isIterableLike( [] );\n* // returns <boolean>\n*\n* @example\n* var bool = isIterableLike( {} );\n* // returns false\n*\n* @example\n* var bool = isIterableLike( null );\n* // returns false\n*/\nfunction isIterableLike( value ) {\n\tvar f;\n\tif ( isPrimitive( value ) ) {\n\t\treturn false;\n\t}\n\tf = value[ ITERATOR ];\n\treturn (\n\t\tisFunction( f ) &&\n\t\tf.length === 0 &&\n\t\tisIteratorLike( value[ ITERATOR ]() ) // Why this form? In order to preserve `this`.\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isIterableLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is iterable-like.\n*\n* @module @stdlib/assert/is-iterable-like\n*\n* @example\n* var isIterableLike = require( '@stdlib/assert/is-iterable-like' );\n*\n* var bool = isIterableLike( [] );\n* // returns <boolean>\n*\n* bool = isIterableLike( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar hasIteratorSymbolSupport = require( './../../has-iterator-symbol-support' );\nvar constantFunction = require( '@stdlib/utils/constant-function' );\nvar main = require( './main.js' );\n\n\n// MAIN //\n\nvar isIterable;\nif ( hasIteratorSymbolSupport() ) {\n\tisIterable = main;\n} else {\n\tisIterable = constantFunction( false );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isIterable;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\n/**\n* Detects a JSON string.\n*\n* Regular expression: `/^\\{[\\s\\S]*\\}$|^\\[[\\s\\S]*\\]$/`\n*\n* -   `^\\{`\n*\n*     -   match a `{` literal which is the first character\n*\n* -   `[\\s\\S]*`\n*\n*     -   match any whitespace and non-whitespace characters which occur `0` or more times\n*\n* -   `\\}$`\n*\n*     -   match a `}` literal which is the last character\n*\n* -   `|`\n*\n*     -   alternatively\n*\n* -   `^\\[`\n*\n*     -   match a `[` literal which is the first character\n*\n* -   `[\\s\\S]*`\n*\n*     -   match any whitespace and non-whitespace characters which occur `0` or more times\n*\n* -   `\\]$`\n*\n*     -   match a `]` literal which is the last character\n*\n*\n* Example matching strings:\n*\n* -   `'{}'`\n* -   `'[]'`\n* -   `'{adjlkfaj3743.,><\\n\\t\\rdf}'`\n* -   `'[adjlkfaj3743.,><\\n\\t\\rdf]'`\n* -   `'{\"a\":5}'`\n*\n* @constant\n* @type {RegExp}\n* @default /^\\{[\\s\\S]*\\}$|^\\[[\\s\\S]*\\]$/\n*/\nvar re = /^\\{[\\s\\S]*\\}$|^\\[[\\s\\S]*\\]$/;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a parseable JSON string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a parseable JSON string\n*\n* @example\n* var v = isJSON( '{\"a\":5}' );\n* // returns true\n*\n* @example\n* var v = isJSON( '{a\":5}' );\n* // returns false\n*/\nfunction isJSON( value ) {\n\tif ( typeof value !== 'string' ) {\n\t\treturn false;\n\t}\n\tif ( !re.test( value ) ) {\n\t\treturn false;\n\t}\n\ttry {\n\t\tJSON.parse( value );\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a parseable JSON string.\n*\n* @module @stdlib/assert/is-json\n*\n* @example\n* var isJSON = require( '@stdlib/assert/is-json' );\n*\n* var v = isJSON( '{\"a\":5}' );\n* // returns true\n*\n* v = isJSON( '{a\":5}' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isJSON = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isJSON;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isDateObject = require( './../../is-date-object' );\nvar isInteger = require( './../../is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests whether a value corresponds to a leap year in the Gregorian calendar.\n*\n* ## Notes\n*\n* -   According to the Gregorian calendar, every year that is exactly divisible by `4` is a leap year, except those years which are also divisible by `100` and not by `400` (e.g., `1900`).\n*\n* @param {*} [value] - input value\n* @returns {boolean} boolean whether a value corresponds to a leap year\n*\n* @example\n* var bool = isLeapYear();\n* // returns <boolean>\n*\n* @example\n* var bool = isLeapYear( new Date() );\n* // returns <boolean>\n*\n* @example\n* var bool = isLeapYear( 1996 );\n* // returns true\n*\n* @example\n* var bool = isLeapYear( 2001 );\n* // returns false\n*/\nfunction isLeapYear( value ) {\n\tvar yr;\n\tif ( arguments.length ) {\n\t\tif ( isDateObject( value ) ) {\n\t\t\tyr = value.getFullYear();\n\t\t} else if ( isInteger( value ) ) {\n\t\t\tyr = value;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// Note: cannot cache, as possible for application to cross into a new year:\n\t\tyr = ( new Date() ).getFullYear();\n\t}\n\t// Special case if year is a new century...\n\tif ( (yr % 100) === 0 ) {\n\t\t// Centuries are only leap years at the end of \"leap cycles\" which happen every `400` years:\n\t\treturn ( (yr % 400) === 0 );\n\t}\n\t// All other years which are exactly divisible by `4` are leap years:\n\treturn ( (yr % 4) === 0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isLeapYear;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ctors = require( './ctors.js' );\n\n\n// VARIABLES //\n\nvar bool;\n\n\n// FUNCTIONS //\n\n/**\n* Returns a boolean indicating if an environment is little endian.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment is little endian\n*\n* @example\n* var bool = isLittleEndian();\n* // returns <boolean>\n*/\nfunction isLittleEndian() {\n\tvar uint16view;\n\tvar uint8view;\n\n\tuint16view = new ctors[ 'uint16' ]( 1 );\n\n\t/*\n\t* Set the uint16 view to a value having distinguishable lower and higher order words.\n\t*\n\t* 4660 => 0x1234 => 0x12 0x34 => '00010010 00110100' => (0x12,0x34) == (18,52)\n\t*/\n\tuint16view[ 0 ] = 0x1234;\n\n\t// Create a uint8 view on top of the uint16 buffer:\n\tuint8view = new ctors[ 'uint8' ]( uint16view.buffer );\n\n\t// If little endian, the least significant byte will be first...\n\treturn ( uint8view[ 0 ] === 0x34 );\n}\n\n\n// MAIN //\n\nbool = isLittleEndian();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a value corresponds to a leap year in the Gregorian calendar.\n*\n* @module @stdlib/assert/is-leap-year\n*\n* @example\n* var isLeapYear = require( '@stdlib/assert/is-leap-year' );\n*\n* var bool = isLeapYear();\n* // returns <boolean>\n*\n* bool = isLeapYear( new Date() );\n* // returns <boolean>\n*\n* bool = isLeapYear( 1996 );\n* // returns true\n*\n* bool = isLeapYear( 2001 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isLeapYear = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isLeapYear;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar Uint8Array = require( '@stdlib/array/uint8' );\nvar Uint16Array = require( '@stdlib/array/uint16' );\n\n\n// MAIN //\n\nvar ctors = {\n\t'uint16': Uint16Array,\n\t'uint8': Uint8Array\n};\n\n\n// EXPORTS //\n\nmodule.exports = ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a boolean indicating if an environment is little endian.\n*\n* @module @stdlib/assert/is-little-endian\n*\n* @example\n* var IS_LITTLE_ENDIAN = require( '@stdlib/assert/is-little-endian' );\n*\n* var bool = IS_LITTLE_ENDIAN;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar IS_LITTLE_ENDIAN = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = IS_LITTLE_ENDIAN;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\n\n\n// VARIABLES //\n\n// IPv4 127.0.0.0/8 address block:\nvar RE_LOCALHOST_IPV4 = /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/;\n\n\n// MAIN //\n\n/**\n* Tests whether a value is a localhost hostname.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a localhost hostname\n*\n* @example\n* var bool = isLocalhost( 'localhost' );\n* // returns true\n*\n* @example\n* var bool = isLocalhost( '127.0.0.1' );\n* // returns true\n*\n* @example\n* var bool = isLocalhost( '[::1]' );\n* // returns true\n*\n* @example\n* var bool = isLocalhost( 'wikipedia.org' );\n* // returns false\n*\n* @example\n* var bool = isLocalhost( 'stdlib.io' );\n* // returns false\n*\n* @example\n* var bool = isLocalhost( null );\n* // returns false\n*/\nfunction isLocalhost( value ) {\n\tif ( !isString( value ) ) {\n\t\treturn false;\n\t}\n\treturn (\n\t\tvalue === 'localhost' || value === 'LOCALHOST' ||\n\n\t\t// IPv6 localhost address:\n\t\tvalue === '[::1]' ||\n\n\t\tRE_LOCALHOST_IPV4.test( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isLocalhost;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a value is is a localhost hostname.\n*\n* @module @stdlib/assert/is-localhost\n*\n* @example\n* var isLocalhost = require( '@stdlib/assert/is-localhost' );\n*\n* var bool = isLocalhost( 'localhost' );\n* // returns true\n*\n* bool = isLocalhost( '127.0.0.1' );\n* // returns true\n*\n* bool = isLocalhost( '[::1]' );\n* // returns true\n*\n* bool = isLocalhost( 'stdlib.io' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isLocalhost = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isLocalhost;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lowercase = require( '@stdlib/string/lowercase' );\nvar uppercase = require( '@stdlib/string/uppercase' );\nvar isString = require( './../../is-string' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a lowercase string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a lowercase string\n*\n* @example\n* var bool = isLowercase( 'salt and light' );\n* // returns true\n*\n* @example\n* var bool = isLowercase( 'HELLO' );\n* // returns false\n*\n* @example\n* var bool = isLowercase( 'World' );\n* // returns false\n*\n* @example\n* var bool = isLowercase( '!' );\n* // returns false\n*/\nfunction isLowercase( value ) {\n\treturn (\n\t\tisString( value ) &&\n\t\tvalue === lowercase( value ) &&\n\t\tvalue !== uppercase( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isLowercase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a lowercase string.\n*\n* @module @stdlib/assert/is-lowercase\n*\n* @example\n* var isLowercase = require( '@stdlib/assert/is-lowercase' );\n*\n* var bool = isLowercase( 'hello' );\n* // returns true\n*\n* bool = isLowercase( 'World' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isLowercase = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isLowercase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( './../../has-own-property' );\nvar isFunction = require( './../../is-function' );\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified method name.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified method name\n*\n* @example\n* var beep = {\n*     'boop': isMethod\n* };\n*\n* var bool = isMethod( beep, 'boop' );\n* // returns true\n*\n* var bool = isMethod( beep, 'toString' );\n* // returns false\n*/\nfunction isMethod( value, property ) {\n\treturn (\n\t\thasOwnProp( value, property ) &&\n\t\tisFunction( value[ property ] )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isMethod;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object has a specified method name.\n*\n* @module @stdlib/assert/is-method\n*\n* @example\n* var isMethod = require( '@stdlib/assert/is-method' );\n*\n* var beep = {\n*     'boop': isMethod\n* };\n*\n* var bool = isMethod( beep, 'boop' );\n* // returns true\n*\n* bool = isMethod( beep, 'toString' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isMethod = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isMethod;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( './../../is-function' );\n\n\n// MAIN //\n\n/**\n* Tests if an object has a specified method name, either own or inherited.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object has a specified method name\n*\n* @example\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isMethodIn( beep, 'toString' );\n* // returns true\n*\n* bool = isMethodIn( beep, 'boop' );\n* // returns false\n*/\nfunction isMethodIn( value, property ) {\n\tif ( value === void 0 || value === null ) {\n\t\treturn false;\n\t}\n\tvalue = Object( value );\n\tif ( typeof property !== 'symbol' ) {\n\t\tproperty = String( property );\n\t}\n\treturn (\n\t\t( property in value ) &&\n\t\tisFunction( value[ property ] )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isMethodIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object has a specified method name, either own or inherited.\n*\n* @module @stdlib/assert/is-method-in\n*\n* @example\n* var isMethodIn = require( '@stdlib/assert/is-method-in' );\n*\n* var beep = {\n*     'boop': true\n* };\n*\n* var bool = isMethodIn( beep, 'toString' );\n* // returns true\n*\n* bool = isMethodIn( beep, 'boop' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isMethodIn = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isMethodIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if the current environment is a mobile device.\n*\n* @module @stdlib/assert/is-mobile\n*\n* @example\n* var IS_MOBILE = require( '@stdlib/assert/is-mobile' );\n*\n* var bool = IS_MOBILE;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar isMobile = require( './main.js' );\n\n\n// MAIN //\n\nvar IS_MOBILE = isMobile();\n\n\n// EXPORTS //\n\nmodule.exports = IS_MOBILE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\n\n\n// MAIN //\n\nvar isMobile = constantFunction( false );\n\n\n// EXPORTS //\n\nmodule.exports = isMobile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isTypedArray = require( './../../is-typed-array' );\nvar hasOwnProp = require( './../../has-own-property' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is named typed tuple-like.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is named typed tuple-like\n*\n* @example\n* var namedtypedtuple = require( '@stdlib/utils/named-typed-tuple' );\n*\n* var Point = namedtypedtuple( [ 'x', 'y' ] );\n*\n* var p = new Point();\n*\n* var bool = isNamedTypedTupleLike( p );\n* // returns true\n*\n* bool = isNamedTypedTupleLike( [] );\n* // returns false\n*/\nfunction isNamedTypedTupleLike( v ) {\n\treturn (\n\t\tisTypedArray( v ) &&\n\t\ttypeof v.fieldOf === 'function' &&\n\t\ttypeof v.findField === 'function' &&\n\t\ttypeof v.ind2key === 'function' &&\n\t\ttypeof v.key2ind === 'function' &&\n\t\ttypeof v.lastFieldOf === 'function' &&\n\t\ttypeof v.subtuple === 'function' &&\n\t\thasOwnProp( v, 'fields' ) &&\n\t\thasOwnProp( v, 'orderedFields' )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNamedTypedTupleLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is named typed tuple-like.\n*\n* @module @stdlib/assert/is-named-typed-tuple-like\n*\n* @example\n* var namedtypedtuple = require( '@stdlib/utils/named-typed-tuple' );\n* var isNamedTypedTupleLike = require( '@stdlib/assert/is-named-typed-tuple-like' );\n*\n* var Point = namedtypedtuple( [ 'x', 'y' ] );\n*\n* var p = new Point();\n*\n* var bool = isNamedTypedTupleLike( p );\n* // returns true\n*\n* bool = isNamedTypedTupleLike( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNamedTypedTupleLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNamedTypedTupleLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only `NaN` values.\n*\n* @module @stdlib/assert/is-nan-array\n*\n* @example\n* var isNaNArray = require( '@stdlib/assert/is-nan-array' );\n*\n* var bool = isNaNArray( [NaN,NaN,NaN] );\n* // returns true\n*\n* bool = isNaNArray( [NaN,2] );\n* // returns false\n*\n* bool = isNaNArray.primitives( [NaN,new Number( NaN )] );\n* // returns false\n*\n* bool = isNaNArray.primitives( [NaN,NaN,NaN] );\n* // returns true\n*\n* bool = isNaNArray.objects( [new Number( NaN ),new Number( NaN )] );\n* // returns true\n*\n* bool = isNaNArray.objects( [NaN,new Number( NaN ),new Number( NaN )] );\n* // returns false\n*\n* bool = isNaNArray.objects( [NaN,NaN,NaN] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\nvar isnan = require( './../../is-nan' );\n\n\n// MAIN //\n\nvar isNaNArray = arrayfun( isnan );\nsetReadOnly( isNaNArray, 'primitives', arrayfun( isnan.isPrimitive ) );\nsetReadOnly( isNaNArray, 'objects', arrayfun( isnan.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isNaNArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( './../../is-function' );\nvar reNativeFunction = require( '@stdlib/regexp/native-function' );\n\n\n// VARIABLES //\n\n// Using `Function#toString` bypasses a value's own `toString` method to provide an extra, but not security proof, precaution to prevent a provided function from impersonating a native function:\nvar fcn2str = Function.prototype.toString;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a native function.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a native function\n*\n* @example\n* function beep() {\n*     console.log( 'boop' );\n* }\n*\n* var bool = isNativeFunction( beep );\n* // returns false\n*\n* bool = isNativeFunction( Date );\n* // returns true\n*/\nfunction isNativeFunction( value ) {\n\treturn (\n\t\tisFunction( value ) &&\n\t\treNativeFunction.REGEXP.test( fcn2str.call( value ) )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNativeFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a native function.\n*\n* @module @stdlib/assert/is-native-function\n*\n* @example\n* var isNativeFunction = require( '@stdlib/assert/is-native-function' );\n*\n* function beep() {\n*     console.log( 'boop' );\n* }\n*\n* var bool = isNativeFunction( beep );\n* // returns false\n*\n* bool = isNativeFunction( Date );\n* // returns true\n*/\n\n// MODULES //\n\nvar isNativeFunction = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNativeFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a negative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a negative integer value\n*\n* @example\n* var bool = isNegativeInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isNegativeInteger( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue < 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a negative integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a negative integer value\n*\n* @example\n* var bool = isNegativeInteger( -3.0 );\n* // returns false\n*\n* @example\n* var bool = isNegativeInteger( new Number( -3.0 ) );\n* // returns true\n*/\nfunction isNegativeInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() < 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a negative integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a negative integer\n*\n* @example\n* var bool = isNegativeInteger( -5.0 );\n* // returns true\n*\n* @example\n* var bool = isNegativeInteger( new Number( -5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNegativeInteger( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isNegativeInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isNegativeInteger( null );\n* // returns false\n*/\nfunction isNegativeInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a negative integer.\n*\n* @module @stdlib/assert/is-negative-integer\n*\n* @example\n* var isNegativeInteger = require( '@stdlib/assert/is-negative-integer' );\n*\n* var bool = isNegativeInteger( -5.0 );\n* // returns true\n*\n* bool = isNegativeInteger( new Number( -5.0 ) );\n* // returns true\n*\n* bool = isNegativeInteger( 5.0 );\n* // returns false\n*\n* bool = isNegativeInteger( -3.14 );\n* // returns false\n*\n* bool = isNegativeInteger( null );\n* // returns false\n*\n* @example\n* var isNegativeInteger = require( '@stdlib/assert/is-negative-integer' ).isPrimitive;\n*\n* var bool = isNegativeInteger( -3.0 );\n* // returns true\n*\n* bool = isNegativeInteger( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* var isNegativeInteger = require( '@stdlib/assert/is-negative-integer' ).isObject;\n*\n* var bool = isNegativeInteger( -3.0 );\n* // returns false\n*\n* bool = isNegativeInteger( new Number( -3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNegativeInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNegativeInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isNegativeInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only negative integers.\n*\n* @module @stdlib/assert/is-negative-integer-array\n*\n* @example\n* var isNegativeIntegerArray = require( '@stdlib/assert/is-negative-integer-array' );\n*\n* var bool = isNegativeIntegerArray( [ -3.0, new Number(-3.0) ] );\n* // returns true\n*\n* bool = isNegativeIntegerArray( [ -3.0, '-3.0' ] );\n* // returns false\n*\n* @example\n* var isNegativeIntegerArray = require( '@stdlib/assert/is-negative-integer-array' ).primitives;\n*\n* var bool = isNegativeIntegerArray( [ -1.0, -10.0 ] );\n* // returns true\n*\n* bool = isNegativeIntegerArray( [ -1.0, 0.0, -10.0 ] );\n* // returns false\n*\n* bool = isNegativeIntegerArray( [ -3.0, new Number(-1.0) ] );\n* // returns false\n*\n* @example\n* var isNegativeIntegerArray = require( '@stdlib/assert/is-negative-integer-array' ).objects;\n*\n* var bool = isNegativeIntegerArray( [ new Number(-1.0), new Number(-10.0) ] );\n* // returns true\n*\n* bool = isNegativeIntegerArray( [ -1.0, 0.0, -10.0 ] );\n* // returns false\n*\n* bool = isNegativeIntegerArray( [ -3.0, new Number(-1.0) ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNegativeInteger = require( './../../is-negative-integer' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isNegativeIntegerArray = arrayfun( isNegativeInteger );\nsetReadOnly( isNegativeIntegerArray, 'primitives', arrayfun( isNegativeInteger.isPrimitive ) );\nsetReadOnly( isNegativeIntegerArray, 'objects', arrayfun( isNegativeInteger.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeIntegerArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a negative value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a negative value\n*\n* @example\n* var bool = isNegativeNumber( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isNegativeNumber( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isNegativeNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue < 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a negative value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a negative value\n*\n* @example\n* var bool = isNegativeNumber( -3.0 );\n* // returns false\n*\n* @example\n* var bool = isNegativeNumber( new Number( -3.0 ) );\n* // returns true\n*/\nfunction isNegativeNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue.valueOf() < 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a negative number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a negative number\n*\n* @example\n* var bool = isNegativeNumber( -5.0 );\n* // returns true\n*\n* @example\n* var bool = isNegativeNumber( new Number( -5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNegativeNumber( -3.14 );\n* // returns true\n*\n* @example\n* var bool = isNegativeNumber( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isNegativeNumber( null );\n* // returns false\n*/\nfunction isNegativeNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a negative number.\n*\n* @module @stdlib/assert/is-negative-number\n*\n* @example\n* var isNegativeNumber = require( '@stdlib/assert/is-negative-number' );\n*\n* var bool = isNegativeNumber( -5.0 );\n* // returns true\n*\n* bool = isNegativeNumber( new Number( -5.0 ) );\n* // returns true\n*\n* bool = isNegativeNumber( -3.14 );\n* // returns true\n*\n* bool = isNegativeNumber( 5.0 );\n* // returns false\n*\n* bool = isNegativeNumber( null );\n* // returns false\n*\n* @example\n* // Use interface to check for negative number primitives...\n* var isNegativeNumber = require( '@stdlib/assert/is-negative-number' ).isPrimitive;\n*\n* var bool = isNegativeNumber( -3.0 );\n* // returns true\n*\n* bool = isNegativeNumber( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* // Use interface to check for negative number objects...\n* var isNegativeNumber = require( '@stdlib/assert/is-negative-number' ).isObject;\n*\n* var bool = isNegativeNumber( -3.0 );\n* // returns false\n*\n* bool = isNegativeNumber( new Number( -3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNegativeNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNegativeNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isNegativeNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only negative numbers.\n*\n* @module @stdlib/assert/is-negative-number-array\n*\n* @example\n* var isNegativeNumberArray = require( '@stdlib/assert/is-negative-number-array' );\n*\n* var bool = isNegativeNumberArray( [ -3.0, new Number(-3.0) ] );\n* // returns true\n*\n* bool = isNegativeNumberArray( [ -3.0, '-3.0' ] );\n* // returns false\n*\n* @example\n* var isNegativeNumberArray = require( '@stdlib/assert/is-negative-number-array' ).primitives;\n*\n* var bool = isNegativeNumberArray( [ -1.0, -5.0, -10.0 ] );\n* // returns true\n*\n* bool = isNegativeNumberArray( [ -3.0, new Number(-1.0) ] );\n* // returns false\n*\n* @example\n* var isNegativeNumberArray = require( '@stdlib/assert/is-negative-number-array' ).objects;\n*\n* var bool = isNegativeNumberArray( [ new Number(-3.0), new Number(-1.0) ] );\n* // returns true\n*\n* bool = isNegativeNumberArray( [ -1.0, -5.0, -10.0 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNegativeNumber = require( './../../is-negative-number' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isNegativeNumberArray = arrayfun( isNegativeNumber );\nsetReadOnly( isNegativeNumberArray, 'primitives', arrayfun( isNegativeNumber.isPrimitive ) );\nsetReadOnly( isNegativeNumberArray, 'objects', arrayfun( isNegativeNumber.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeNumberArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar NINF = require( '@stdlib/constants/float64/ninf' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive equal to negative zero.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive equal to negative zero\n*\n* @example\n* var bool = isNegativeZero( -0.0 );\n* // returns true\n*\n* @example\n* var bool = isNegativeZero( new Number( -0.0 ) );\n* // returns false\n*/\nfunction isNegativeZero( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\t( 1.0 / value ) === NINF\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar NINF = require( '@stdlib/constants/float64/ninf' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value equal to negative zero.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value equal to negative zero\n*\n* @example\n* var bool = isNegativeZero( -0.0 );\n* // returns false\n*\n* @example\n* var bool = isNegativeZero( new Number( -0.0 ) );\n* // returns true\n*/\nfunction isNegativeZero( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\t( 1.0 / value.valueOf() ) === NINF\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is equal to negative zero.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is equal to negative zero\n*\n* @example\n* var bool = isNegativeZero( -0.0 );\n* // returns true\n*\n* @example\n* var bool = isNegativeZero( new Number( -0.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNegativeZero( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isNegativeZero( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isNegativeZero( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isNegativeZero( null );\n* // returns false\n*/\nfunction isNegativeZero( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is equal to negative zero.\n*\n* @module @stdlib/assert/is-negative-zero\n*\n* @example\n* var isNegativeZero = require( '@stdlib/assert/is-negative-zero' );\n*\n* var bool = isNegativeZero( -0.0 );\n* // returns true\n*\n* bool = isNegativeZero( new Number( -0.0 ) );\n* // returns true\n*\n* bool = isNegativeZero( -3.14 );\n* // returns false\n*\n* bool = isNegativeZero( 5.0 );\n* // returns false\n*\n* bool = isNegativeZero( 0.0 );\n* // returns false\n*\n* bool = isNegativeZero( null );\n* // returns false\n*\n* @example\n* var isNegativeZero = require( '@stdlib/assert/is-negative-zero' ).isPrimitive;\n*\n* var bool = isNegativeZero( -0.0 );\n* // returns true\n*\n* bool = isNegativeZero( new Number( -0.0 ) );\n* // returns false\n*\n* @example\n* var isNegativeZero = require( '@stdlib/assert/is-negative-zero' ).isObject;\n*\n* var bool = isNegativeZero( -0.0 );\n* // returns false\n*\n* bool = isNegativeZero( new Number( -0.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNegativeZero = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNegativeZero, 'isPrimitive', isPrimitive );\nsetReadOnly( isNegativeZero, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNegativeZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar mod = require( 'module' );\nvar contains = require( './../../contains' );\nvar isString = require( './../../is-string' ).isPrimitive;\nvar BUILTINS = require( './builtins.json' );\n\n\n// VARIABLES //\n\nvar LIST = mod.builtinModules || BUILTINS;\n\n\n// MAIN //\n\n/**\n* Tests whether a string matches a Node.js built-in module name.\n*\n* @param {*} x - value to test\n* @returns {boolean} boolean indicating whether a string matches a Node.js built-in module name\n*\n* @example\n* var out = isNodeBuiltin( 'cluster' );\n* // returns true\n*\n* @example\n* var out = isNodeBuiltin( 'crypto' );\n* // returns true\n*\n* @example\n* var out = isNodeBuiltin( 'fs-extra' );\n* // returns false\n*\n* @example\n* var out = isNodeBuiltin( '' );\n* // returns false\n*/\nfunction isNodeBuiltin( x ) {\n\tif ( !isString( x ) ) {\n\t\treturn false;\n\t}\n\treturn contains( LIST, x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNodeBuiltin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a string matches a Node.js built-in module name.\n*\n* @module @stdlib/assert/is-node-builtin\n*\n* @example\n* var isNodeBuiltin = require( '@stdlib/assert/is-node-builtin' );\n*\n* var out = isNodeBuiltin( 'crypto' );\n* // returns true\n*\n* out = isNodeBuiltin( 'cluster' );\n* // returns true\n*\n* out = isNodeBuiltin( '' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNodeBuiltin = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNodeBuiltin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a value is Node stream-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is Node stream-like\n*\n* @example\n* var transformStream = require( '@stdlib/streams/node/transform' );\n*\n* var stream = transformStream();\n*\n* var bool = isNodeStreamLike( stream );\n* // returns true\n*\n* bool = isNodeStreamLike( {} );\n* // returns false\n*/\nfunction isNodeStreamLike( value ) {\n\treturn (\n\t\t// Must be an object:\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\n\t\t// Should be an event emitter:\n\t\ttypeof value.on === 'function' &&\n\t\ttypeof value.once === 'function' &&\n\t\ttypeof value.emit === 'function' &&\n\t\ttypeof value.addListener === 'function' &&\n\t\ttypeof value.removeListener === 'function' &&\n\t\ttypeof value.removeAllListeners === 'function' &&\n\n\t\t// Should have a `pipe` method (Node streams inherit from `Stream`, including writable streams):\n\t\ttypeof value.pipe === 'function'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNodeStreamLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is Node stream-like.\n*\n* @module @stdlib/assert/is-node-stream-like\n*\n* @example\n* var transformStream = require( '@stdlib/streams/node/transform' );\n* var isNodeStreamLike = require( '@stdlib/assert/is-node-stream-like' );\n*\n* var stream = transformStream();\n*\n* var bool = isNodeStreamLike( stream );\n* // returns true\n*\n* bool = isNodeStreamLike( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNodeStreamLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNodeStreamLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar isNodeStreamLike = require( './../../is-node-stream-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is Node writable stream-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is Node writable stream-like\n*\n* @example\n* var transformStream = require( '@stdlib/streams/node/transform' );\n*\n* var stream = transformStream();\n*\n* var bool = isNodeWritableStreamLike( stream );\n* // returns true\n*\n* bool = isNodeWritableStreamLike( {} );\n* // returns false\n*/\nfunction isNodeWritableStreamLike( value ) {\n\treturn (\n\t\t// Must be stream-like:\n\t\tisNodeStreamLike( value ) &&\n\n\t\t// Should have writable stream methods:\n\t\ttypeof value._write === 'function' &&\n\n\t\t// Should have writable stream state:\n\t\ttypeof value._writableState === 'object'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNodeWritableStreamLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is Node writable stream-like.\n*\n* @module @stdlib/assert/is-node-writable-stream-like\n*\n* @example\n* var transformStream = require( '@stdlib/streams/node/transform' );\n* var isNodeWritableStreamLike = require( '@stdlib/assert/is-node-writable-stream-like' );\n*\n* var stream = transformStream();\n*\n* var bool = isNodeWritableStreamLike( stream );\n* // returns true\n*\n* bool = isNodeWritableStreamLike( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNodeWritableStreamLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNodeWritableStreamLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar isNodeStreamLike = require( './../../is-node-stream-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is Node readable stream-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is Node readable stream-like\n*\n* @example\n* var transformStream = require( '@stdlib/streams/node/transform' );\n*\n* var stream = transformStream();\n*\n* var bool = isNodeReadableStreamLike( stream );\n* // returns true\n*\n* bool = isNodeReadableStreamLike( {} );\n* // returns false\n*/\nfunction isNodeReadableStreamLike( value ) {\n\treturn (\n\t\t// Must be stream-like:\n\t\tisNodeStreamLike( value ) &&\n\n\t\t// Should have readable stream methods:\n\t\ttypeof value._read === 'function' &&\n\n\t\t// Should have readable stream state:\n\t\ttypeof value._readableState === 'object'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNodeReadableStreamLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is Node readable stream-like.\n*\n* @module @stdlib/assert/is-node-readable-stream-like\n*\n* @example\n* var transformStream = require( '@stdlib/streams/node/transform' );\n* var isNodeReadableStreamLike = require( '@stdlib/assert/is-node-readable-stream-like' );\n*\n* var stream = transformStream();\n*\n* var bool = isNodeReadableStreamLike( stream );\n* // returns true\n*\n* bool = isNodeReadableStreamLike( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNodeReadableStreamLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNodeReadableStreamLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNodeWritableStreamLike = require( './../../is-node-writable-stream-like' );\nvar isNodeReadableStreamLike = require( './../../is-node-readable-stream-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is Node duplex stream-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is Node duplex stream-like\n*\n* @example\n* var transformStream = require( '@stdlib/streams/node/transform' );\n*\n* var stream = transformStream();\n*\n* var bool = isNodeDuplexStreamLike( stream );\n* // returns true\n*\n* bool = isNodeDuplexStreamLike( {} );\n* // returns false\n*/\nfunction isNodeDuplexStreamLike( value ) {\n\treturn (\n\t\t// Must be both readable and writable:\n\t\tisNodeWritableStreamLike( value ) &&\n\t\tisNodeReadableStreamLike( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNodeDuplexStreamLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is Node duplex stream-like.\n*\n* @module @stdlib/assert/is-node-duplex-stream-like\n*\n* @example\n* var transformStream = require( '@stdlib/streams/node/transform' );\n* var isNodeDuplexStreamLike = require( '@stdlib/assert/is-node-duplex-stream-like' );\n*\n* var stream = transformStream();\n*\n* var bool = isNodeDuplexStreamLike( stream );\n* // returns true\n*\n* bool = isNodeDuplexStreamLike( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNodeDuplexStreamLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNodeDuplexStreamLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the parent module.\n*\n* @private\n* @returns {Module} parent module\n*/\nfunction parent() { // eslint-disable-line stdlib/no-redeclare\n\treturn module;\n}\n\n\n// EXPORTS //\n\nmodule.exports = parent;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a stacktrace.\n*\n* @private\n* @returns {(string|void)} stacktrace\n*/\nfunction stacktrace() {\n\tvar err = new Error();\n\treturn err.stack;\n}\n\n\n// EXPORTS //\n\nmodule.exports = stacktrace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar IS_NODE = require( './../../is-node' );\nvar p = require( './parent.js' );\nvar stacktrace = require( './stacktrace.js' );\n\n\n// VARIABLES //\n\n// The module id for the builtin REPL was `repl` in Node versions <4 and then changed to `<repl>` for Node versions >=4 (see https://github.com/nodejs/node/commit/ee72ee753118f2576bfd1ccf58fb2ff651e8bfb0#diff-b13d72249263845d8e8341db0426f9d3R527).\nvar RE_MODULE_ID = /^repl$|^<repl>$/;\n\n// This is V8 specific (!!), as this assumes the V8 stacktrace API. TODO: rely on an engine agnostic approach to determining callsites.\nvar RE_ERROR_STACK = /at REPLServer/;\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if the function is called from a Node.js REPL environment.\n*\n* ## Notes\n*\n* -   False positives are possible due to the existence of a userland package having the same module `id` (see [repl][repl-template-lib]) as the builtin Node.js `repl`.\n*\n* [repl-template-lib]: https://www.npmjs.com/package/repl\n*\n* @returns {boolean} boolean indicating if the function is called from a Node.js REPL environment\n*\n* @example\n* var bool = isNodeREPL();\n* // returns <boolean>\n*/\nfunction isNodeREPL() {\n\tvar stack;\n\tvar m;\n\tif ( !IS_NODE ) {\n\t\treturn false;\n\t}\n\t// If this module was required in a REPL environment, we can walk up the module dependency tree to find a `repl` ancestor...\n\tm = p();\n\twhile ( m ) {\n\t\tif ( RE_MODULE_ID.test( m.id ) ) {\n\t\t\treturn true;\n\t\t}\n\t\tm = m.parent;\n\t}\n\t// Unable to find a `repl` ancestor, so try determining if this function was called from a REPL environment...\n\tstack = stacktrace();\n\tif ( stack ) {\n\t\treturn RE_ERROR_STACK.test( stack );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNodeREPL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Check if running within a Node.js REPL environment.\n*\n* @module @stdlib/assert/is-node-repl\n*\n* @example\n* var isNodeREPL = require( '@stdlib/assert/is-node-repl' );\n*\n* var bool = isNodeREPL();\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar isNodeREPL = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNodeREPL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nvar isNodeDuplexStreamLike = require( './../../is-node-duplex-stream-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is Node transform stream-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is Node transform stream-like\n*\n* @example\n* var transformStream = require( '@stdlib/streams/node/transform' );\n*\n* var stream = transformStream();\n*\n* var bool = isNodeTransformStreamLike( stream );\n* // returns true\n*\n* bool = isNodeTransformStreamLike( {} );\n* // returns false\n*/\nfunction isNodeTransformStreamLike( value ) {\n\treturn (\n\t\t// Must be duplex stream-like:\n\t\tisNodeDuplexStreamLike( value ) &&\n\n\t\t// Should have transform stream methods:\n\t\ttypeof value._transform === 'function'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNodeTransformStreamLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is Node transform stream-like.\n*\n* @module @stdlib/assert/is-node-transform-stream-like\n*\n* @example\n* var transformStream = require( '@stdlib/streams/node/transform' );\n* var isNodeTransformStreamLike = require( '@stdlib/assert/is-node-transform-stream-like' );\n*\n* var stream = transformStream();\n*\n* var bool = isNodeTransformStreamLike( stream );\n* // returns true\n*\n* bool = isNodeTransformStreamLike( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNodeTransformStreamLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNodeTransformStreamLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptor = require( '@stdlib/utils/property-descriptor' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is non-configurable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is non-configurable\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'writable': true,\n*     'value': 'beep'\n* });\n*\n* var bool = isNonConfigurableProperty( obj, 'boop' );\n* // returns false\n*\n* bool = isNonConfigurableProperty( obj, 'beep' );\n* // returns true\n*/\nfunction isNonConfigurableProperty( value, property ) {\n\tvar desc = propertyDescriptor( value, property );\n\treturn ( desc !== null && desc.configurable === false );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonConfigurableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own property is non-configurable.\n*\n* @module @stdlib/assert/is-nonconfigurable-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isNonConfigurableProperty = require( '@stdlib/assert/is-nonconfigurable-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'writable': true,\n*     'value': 'beep'\n* });\n*\n* var bool = isNonConfigurableProperty( obj, 'boop' );\n* // returns false\n*\n* bool = isNonConfigurableProperty( obj, 'beep' );\n* // returns true\n*/\n\n// MODULES //\n\nvar isNonConfigurableProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNonConfigurableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptorIn = require( '@stdlib/utils/property-descriptor-in' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own or inherited property is non-configurable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is non-configurable\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'writable': true,\n*     'value': true\n* });\n*\n* var bool = isNonConfigurablePropertyIn( obj, 'boop' );\n* // returns false\n*\n* bool = isNonConfigurablePropertyIn( obj, 'beep' );\n* // returns true\n*/\nfunction isNonConfigurablePropertyIn( value, property ) { // eslint-disable-line id-length\n\tvar desc = propertyDescriptorIn( value, property );\n\treturn ( desc !== null && desc.configurable === false );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonConfigurablePropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own or inherited property is non-configurable.\n*\n* @module @stdlib/assert/is-nonconfigurable-property-in\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isNonConfigurablePropertyIn = require( '@stdlib/assert/is-nonconfigurable-property-in' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'writable': true,\n*     'value': true\n* });\n*\n* var bool = isNonConfigurablePropertyIn( obj, 'boop' );\n* // returns false\n*\n* bool = isNonConfigurablePropertyIn( obj, 'beep' );\n* // returns true\n*/\n\n// MODULES //\n\nvar isNonConfigurablePropertyIn = require( './main.js' ); // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nmodule.exports = isNonConfigurablePropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( './../../has-own-property' );\nvar isEnumerableProperty = require( './../../is-enumerable-property' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is non-enumerable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is non-enumerable\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': true,\n*     'value': 'beep'\n* });\n*\n* var bool = isNonEnumerableProperty( obj, 'boop' );\n* // returns false\n*\n* bool = isNonEnumerableProperty( obj, 'beep' );\n* // returns true\n*/\nfunction isNonEnumerableProperty( value, property ) {\n\tif ( hasOwnProp( value, property ) === false ) {\n\t\treturn false;\n\t}\n\treturn ( isEnumerableProperty( value, property ) === false );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own property is non-enumerable.\n*\n* @module @stdlib/assert/is-nonenumerable-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isNonEnumerableProperty = require( '@stdlib/assert/is-nonenumerable-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': true,\n*     'value': 'beep'\n* });\n*\n* var bool = isNonEnumerableProperty( obj, 'boop' );\n* // returns false\n*\n* bool = isNonEnumerableProperty( obj, 'beep' );\n* // returns true\n*/\n\n// MODULES //\n\nvar isNonEnumerableProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNonEnumerableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptorIn = require( '@stdlib/utils/property-descriptor-in' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own or inherited property is non-enumerable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is non-enumerable\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': true,\n*     'enumerable': false,\n*     'writable': true,\n*     'value': true\n* });\n*\n* var bool = isNonEnumerablePropertyIn( obj, 'boop' );\n* // returns false\n*\n* bool = isNonEnumerablePropertyIn( obj, 'beep' );\n* // returns true\n*/\nfunction isNonEnumerablePropertyIn( value, property ) {\n\tvar desc = propertyDescriptorIn( value, property );\n\treturn ( desc !== null && desc.enumerable === false );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonEnumerablePropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own or inherited property is non-enumerable.\n*\n* @module @stdlib/assert/is-nonenumerable-property-in\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isNonEnumerablePropertyIn = require( '@stdlib/assert/is-nonenumerable-property-in' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': true,\n*     'enumerable': false,\n*     'writable': true,\n*     'value': true\n* });\n*\n* var bool = isNonEnumerablePropertyIn( obj, 'boop' );\n* // returns false\n*\n* bool = isNonEnumerablePropertyIn( obj, 'beep' );\n* // returns true\n*/\n\n// MODULES //\n\nvar isNonEnumerablePropertyIn = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNonEnumerablePropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only nonnegative integers.\n*\n* @module @stdlib/assert/is-nonnegative-integer-array\n*\n* @example\n* var isNonNegativeIntegerArray = require( '@stdlib/assert/is-nonnegative-integer-array' );\n*\n* var bool = isNonNegativeIntegerArray( [ 3.0, new Number(3.0) ] );\n* // returns true\n*\n* bool = isNonNegativeIntegerArray( [ 3.0, '3.0' ] );\n* // returns false\n*\n* @example\n* var isNonNegativeIntegerArray = require( '@stdlib/assert/is-nonnegative-integer-array' ).primitives;\n*\n* var bool = isNonNegativeIntegerArray( [ 1.0, 0.0, 10.0 ] );\n* // returns true\n*\n* bool = isNonNegativeIntegerArray( [ 3.0, new Number(1.0) ] );\n* // returns false\n*\n* @example\n* var isNonNegativeIntegerArray = require( '@stdlib/assert/is-nonnegative-integer-array' ).objects;\n*\n* var bool = isNonNegativeIntegerArray( [ new Number(3.0), new Number(1.0) ] );\n* // returns true\n*\n* bool = isNonNegativeIntegerArray( [ 1.0, 0.0, 10.0 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNonNegativeInteger = require( './../../is-nonnegative-integer' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isNonNegativeIntegerArray = arrayfun( isNonNegativeInteger );\nsetReadOnly( isNonNegativeIntegerArray, 'primitives', arrayfun( isNonNegativeInteger.isPrimitive ) );\nsetReadOnly( isNonNegativeIntegerArray, 'objects', arrayfun( isNonNegativeInteger.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeIntegerArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonnegative value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonnegative number value\n*\n* @example\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isNonNegativeNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue >= 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonnegative value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonnegative number value\n*\n* @example\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isNonNegativeNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue.valueOf() >= 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonnegative number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonnegative number\n*\n* @example\n* var bool = isNonNegativeNumber( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isNonNegativeNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonNegativeNumber( null );\n* // returns false\n*/\nfunction isNonNegativeNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonnegative number.\n*\n* @module @stdlib/assert/is-nonnegative-number\n*\n* @example\n* var isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' );\n*\n* var bool = isNonNegativeNumber( 5.0 );\n* // returns true\n*\n* bool = isNonNegativeNumber( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isNonNegativeNumber( 3.14 );\n* // returns true\n*\n* bool = isNonNegativeNumber( -5.0 );\n* // returns false\n*\n* bool = isNonNegativeNumber( null );\n* // returns false\n*\n* @example\n* var isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' ).isPrimitive;\n*\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns true\n*\n* bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isNonNegativeNumber = require( '@stdlib/assert/is-nonnegative-number' ).isObject;\n*\n* var bool = isNonNegativeNumber( 3.0 );\n* // returns false\n*\n* bool = isNonNegativeNumber( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonNegativeNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNonNegativeNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isNonNegativeNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only nonnegative numbers.\n*\n* @module @stdlib/assert/is-nonnegative-number-array\n*\n* @example\n* var isNonNegativeNumberArray = require( '@stdlib/assert/is-nonnegative-number-array' );\n*\n* var bool = isNonNegativeNumberArray( [ 3.0, new Number(3.0) ] );\n* // returns true\n*\n* bool = isNonNegativeNumberArray( [ 3.0, '3.0' ] );\n* // returns false\n*\n* @example\n* var isNonNegativeNumberArray = require( '@stdlib/assert/is-nonnegative-number-array' ).primitives;\n*\n* var bool = isNonNegativeNumberArray( [ 1.0, 0.0, 10.0 ] );\n* // returns true\n*\n* bool = isNonNegativeNumberArray( [ 3.0, new Number(1.0) ] );\n* // returns false\n*\n* @example\n* var isNonNegativeNumberArray = require( '@stdlib/assert/is-nonnegative-number-array' ).objects;\n*\n* var bool = isNonNegativeNumberArray( [ new Number(3.0), new Number(1.0) ] );\n* // returns true\n*\n* bool = isNonNegativeNumberArray( [ 1.0, 0.0, 10.0 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNonNegativeNumber = require( './../../is-nonnegative-number' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isNonNegativeNumberArray = arrayfun( isNonNegativeNumber );\nsetReadOnly( isNonNegativeNumberArray, 'primitives', arrayfun( isNonNegativeNumber.isPrimitive ) );\nsetReadOnly( isNonNegativeNumberArray, 'objects', arrayfun( isNonNegativeNumber.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isNonNegativeNumberArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonpositive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonpositive integer value\n*\n* @example\n* var bool = isNonPositiveInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonPositiveInteger( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isNonPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue <= 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonpositive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonpositive integer value\n*\n* @example\n* var bool = isNonPositiveInteger( -3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonPositiveInteger( new Number( -3.0 ) );\n* // returns true\n*/\nfunction isNonPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() <= 0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonpositive integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonpositive integer\n*\n* @example\n* var bool = isNonPositiveInteger( -5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonPositiveInteger( new Number( -5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonPositiveInteger( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonPositiveInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isNonPositiveInteger( null );\n* // returns false\n*/\nfunction isNonPositiveInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonpositive integer.\n*\n* @module @stdlib/assert/is-nonpositive-integer\n*\n* @example\n* var isNonPositiveInteger = require( '@stdlib/assert/is-nonpositive-integer' );\n*\n* var bool = isNonPositiveInteger( -5.0 );\n* // returns true\n*\n* bool = isNonPositiveInteger( new Number( -5.0 ) );\n* // returns true\n*\n* bool = isNonPositiveInteger( 5.0 );\n* // returns false\n*\n* bool = isNonPositiveInteger( -3.14 );\n* // returns false\n*\n* bool = isNonPositiveInteger( null );\n* // returns false\n*\n* @example\n* var isNonPositiveInteger = require( '@stdlib/assert/is-nonpositive-integer' ).isPrimitive;\n*\n* var bool = isNonPositiveInteger( -3.0 );\n* // returns true\n*\n* bool = isNonPositiveInteger( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* var isNonPositiveInteger = require( '@stdlib/assert/is-nonpositive-integer' ).isObject;\n*\n* var bool = isNonPositiveInteger( -3.0 );\n* // returns false\n*\n* bool = isNonPositiveInteger( new Number( -3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonPositiveInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNonPositiveInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isNonPositiveInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNonPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only nonpositive integers.\n*\n* @module @stdlib/assert/is-nonpositive-integer-array\n*\n* @example\n* var isNonPositiveIntegerArray = require( '@stdlib/assert/is-nonpositive-integer-array' );\n*\n* var bool = isNonPositiveIntegerArray( [ -3.0, new Number(-3.0) ] );\n* // returns true\n*\n* bool = isNonPositiveIntegerArray( [ -3.0, '-3.0' ] );\n* // returns false\n*\n* @example\n* var isNonPositiveIntegerArray = require( '@stdlib/assert/is-nonpositive-integer-array' ).primitives;\n*\n* var bool = isNonPositiveIntegerArray( [ -1.0, 0.0, -10.0 ] );\n* // returns true\n*\n* bool = isNonPositiveIntegerArray( [ -3.0, new Number(-1.0) ] );\n* // returns false\n*\n* @example\n* var isNonPositiveIntegerArray = require( '@stdlib/assert/is-nonpositive-integer-array' ).objects;\n*\n* var bool = isNonPositiveIntegerArray( [ new Number(-3.0), new Number(-1.0) ] );\n* // returns true\n*\n* bool = isNonPositiveIntegerArray( [ -1.0, 0.0, -10.0 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNonPositiveInteger = require( './../../is-nonpositive-integer' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isNonPositiveIntegerArray = arrayfun( isNonPositiveInteger );\nsetReadOnly( isNonPositiveIntegerArray, 'primitives', arrayfun( isNonPositiveInteger.isPrimitive ) );\nsetReadOnly( isNonPositiveIntegerArray, 'objects', arrayfun( isNonPositiveInteger.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isNonPositiveIntegerArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a nonpositive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a nonpositive number value\n*\n* @example\n* var bool = isNonPositiveNumber( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isNonPositiveNumber( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isNonPositiveNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue <= 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a nonpositive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a nonpositive number value\n*\n* @example\n* var bool = isNonPositiveNumber( -3.0 );\n* // returns false\n*\n* @example\n* var bool = isNonPositiveNumber( new Number( -3.0 ) );\n* // returns true\n*/\nfunction isNonPositiveNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue.valueOf() <= 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a nonpositive number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a nonpositive number\n*\n* @example\n* var bool = isNonPositiveNumber( -5.0 );\n* // returns true\n*\n* @example\n* var bool = isNonPositiveNumber( new Number( -5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isNonPositiveNumber( -3.14 );\n* // returns true\n*\n* @example\n* var bool = isNonPositiveNumber( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isNonPositiveNumber( null );\n* // returns false\n*/\nfunction isNonPositiveNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a nonpositive number.\n*\n* @module @stdlib/assert/is-nonpositive-number\n*\n* @example\n* var isNonPositiveNumber = require( '@stdlib/assert/is-nonpositive-number' );\n*\n* var bool = isNonPositiveNumber( -5.0 );\n* // returns true\n*\n* bool = isNonPositiveNumber( new Number( -5.0 ) );\n* // returns true\n*\n* bool = isNonPositiveNumber( -3.14 );\n* // returns true\n*\n* bool = isNonPositiveNumber( 5.0 );\n* // returns false\n*\n* bool = isNonPositiveNumber( null );\n* // returns false\n*\n* @example\n* var isNonPositiveNumber = require( '@stdlib/assert/is-nonpositive-number' ).isPrimitive;\n*\n* var bool = isNonPositiveNumber( -3.0 );\n* // returns true\n*\n* bool = isNonPositiveNumber( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* var isNonPositiveNumber = require( '@stdlib/assert/is-nonpositive-number' ).isObject;\n*\n* var bool = isNonPositiveNumber( -3.0 );\n* // returns false\n*\n* bool = isNonPositiveNumber( new Number( -3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isNonPositiveNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isNonPositiveNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isNonPositiveNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isNonPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only nonpositive numbers.\n*\n* @module @stdlib/assert/is-nonpositive-number-array\n*\n* @example\n* var isNonPositiveNumberArray = require( '@stdlib/assert/is-nonpositive-number-array' );\n*\n* var bool = isNonPositiveNumberArray( [ -3.0, new Number(-3.0) ] );\n* // returns true\n*\n* bool = isNonPositiveNumberArray( [ -3.0, '-3.0' ] );\n* // returns false\n*\n* @example\n* var isNonPositiveNumberArray = require( '@stdlib/assert/is-nonpositive-number-array' ).primitives;\n*\n* var bool = isNonPositiveNumberArray( [ -1.0, 0.0, -10.0 ] );\n* // returns true\n*\n* bool = isNonPositiveNumberArray( [ -3.0, new Number(-1.0) ] );\n* // returns false\n*\n* @example\n* var isNonPositiveNumberArray = require( '@stdlib/assert/is-nonpositive-number-array' ).objects;\n*\n* var bool = isNonPositiveNumberArray( [ new Number(-3.0), new Number(-1.0) ] );\n* // returns true\n*\n* bool = isNonPositiveNumberArray( [ -1.0, 0.0, -10.0 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNonPositiveNumber = require( './../../is-nonpositive-number' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isNonPositiveNumberArray = arrayfun( isNonPositiveNumber );\nsetReadOnly( isNonPositiveNumberArray, 'primitives', arrayfun( isNonPositiveNumber.isPrimitive ) );\nsetReadOnly( isNonPositiveNumberArray, 'objects', arrayfun( isNonPositiveNumber.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isNonPositiveNumberArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isMatrixLike = require( './../../is-matrix-like' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a non-symmetric matrix.\n*\n* ## Notes\n*\n* -   The implementation must rely on manually checking that \\\\(M_{ij} \\neq M_{ji}\\\\), and, while element access is deterministic, no way exists to prevent cache misses outside of reordering the underlying matrix elements, thus incurring a larger performance penalty than just \"jumping around\" in a single pass.\n* -   Worst case scenario: O(N^2).\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a non-symmetric matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var arr = ndarray( 'generic', [ 1, 2, 3, 4 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isNonSymmetricMatrix( arr );\n* // returns true\n*\n* bool = isNonSymmetricMatrix( [] );\n* // returns false\n*/\nfunction isNonSymmetricMatrix( v ) {\n\tvar M;\n\tvar i;\n\tvar j;\n\tif ( !isMatrixLike( v ) ) {\n\t\treturn false;\n\t}\n\tM = v.shape[ 0 ];\n\tif ( M !== v.shape[ 1 ] ) {\n\t\treturn true;\n\t}\n\tfor ( i = 0; i < M; i++ ) {\n\t\tfor ( j = 0; j < i; j++ ) {\n\t\t\tif ( v.get( i, j ) !== v.get( j, i ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNonSymmetricMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a non-symmetric matrix.\n*\n* @module @stdlib/assert/is-nonsymmetric-matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var isNonSymmetricMatrix = require( '@stdlib/assert/is-nonsymmetric-matrix' );\n*\n* var arr = ndarray( 'generic', [ 1, 2, 3, 4 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isNonSymmetricMatrix( arr );\n* // returns true\n*\n* bool = isNonSymmetricMatrix( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNonSymmetricMatrix = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNonSymmetricMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is `null`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is null\n*\n* @example\n* var bool = isNull( null );\n* // returns true\n*\n* bool = isNull( true );\n* // returns false\n*/\nfunction isNull( value ) {\n\treturn value === null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNull;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is `null`.\n*\n* @module @stdlib/assert/is-null\n*\n* @example\n* var isNull = require( '@stdlib/assert/is-null' );\n*\n* var value = null;\n*\n* var bool = isNull( value );\n* // returns true\n*/\n\n// MODULES //\n\nvar isNull = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNull;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only `null` values.\n*\n* @module @stdlib/assert/is-null-array\n*\n* @example\n* var isNullArray = require( '@stdlib/assert/is-null-array' );\n*\n* var bool = isNullArray( [null,null,null] );\n* // returns true\n*\n* bool = isNullArray( [NaN,2,null] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNullArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNullArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arrayfun = require( './../../tools/array-like-function' );\nvar isNull = require( './../../is-null' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array-like object containing only `null` values.\n*\n* @name isNullArray\n* @type {Function}\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether an input value is an array-like object containing only `null` values\n*\n* @example\n* var bool = isNullArray( [null,null,null] );\n* // returns true\n*\n* bool = isNullArray( [NaN,2,null] );\n* // returns false\n*/\nvar isNullArray = arrayfun( isNull );\n\n\n// EXPORTS //\n\nmodule.exports = isNullArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object of numbers.\n*\n* @module @stdlib/assert/is-number-array\n*\n* @example\n* var isNumberArray = require( '@stdlib/assert/is-number-array' );\n*\n* var bool = isNumberArray( [ 1, 2, 3 ] );\n* // returns true\n*\n* bool = isNumberArray( [ '1', 2, 3 ] );\n* // returns false\n*\n* @example\n* var isNumberArray = require( '@stdlib/assert/is-number-array' ).primitives;\n*\n* var bool = isNumberArray( [ 1, 2, 3 ] );\n* // returns true\n*\n* bool = isNumberArray( [ 1, new Number( 2 ) ] );\n* // returns false\n*\n* @example\n* var isNumberArray = require( '@stdlib/assert/is-number-array' ).objects;\n*\n* var bool = isNumberArray( [ new Number( 1 ), new Number( 2 ) ] );\n* // returns true\n*\n* bool = isNumberArray( [ new Number( 1 ), 2 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\nvar isNumber = require( './../../is-number' );\n\n\n// MAIN //\n\nvar isNumberArray = arrayfun( isNumber );\nsetReadOnly( isNumberArray, 'primitives', arrayfun( isNumber.isPrimitive ) );\nsetReadOnly( isNumberArray, 'objects', arrayfun( isNumber.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isNumberArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isTypedArray = require( './../../is-typed-array' );\nvar isNumberArray = require( './../../is-number-array' ).primitives;\nvar isBuffer = require( './../../is-buffer' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a numeric array.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a numeric array\n*\n* @example\n* var bool = isNumericArray( new Int8Array( 10 ) );\n* // returns true\n*\n* bool = isNumericArray( [ 1, 2, 3 ] );\n* // returns true\n*\n* bool = isNumericArray( [ '1', '2', '3' ] );\n* // returns false\n*/\nfunction isNumericArray( v ) {\n\treturn (\n\t\t!isBuffer( v ) &&\n\t\t(isTypedArray( v ) || isNumberArray( v ))\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isNumericArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a numeric array.\n*\n* @module @stdlib/assert/is-numeric-array\n*\n* @example\n* var isNumericArray = require( '@stdlib/assert/is-numeric-array' );\n*\n* var bool = isNumericArray( new Int8Array( 10 ) );\n* // returns true\n*\n* bool = isNumericArray( [ 1, 2, 3 ] );\n* // returns true\n*\n* bool = isNumericArray( [ '1', '2', '3' ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isNumericArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isNumericArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only objects.\n*\n* @module @stdlib/assert/is-object-array\n*\n* @example\n* var isObjectArray = require( '@stdlib/assert/is-object-array' );\n*\n* var bool = isObjectArray( [ {}, new Number(3.0) ] );\n* // returns true\n*\n* bool = isObjectArray( [ {}, { 'beep': 'boop' } ] );\n* // returns true\n*\n* bool = isObjectArray( [ {}, '3.0' ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isObjectArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isObjectArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arrayfun = require( './../../tools/array-like-function' );\nvar isObject = require( './../../is-object' );\n\n\n// MAIN //\n\n/**\n* Test if a value is an array-like object containing only objects.\n*\n* @name isObjectArray\n* @type {Function}\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether an input value is an array-like object containing only objects\n*\n* @example\n* var bool = isObjectArray( [ {}, new Number(3.0) ] );\n* // returns true\n*\n* bool = isObjectArray( [ {}, { 'beep': 'boop' } ] );\n* // returns true\n*\n* bool = isObjectArray( [ {}, '3.0' ] );\n* // returns false\n*/\nvar isObjectArray = arrayfun( isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isObjectArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\nvar isEven = require( './../../is-even' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive that is an odd number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive that is an odd number\n*\n* @example\n* var bool = isOdd( -5.0 );\n* // returns true\n*\n* @example\n* var bool = isOdd( new Number( -5.0 ) );\n* // returns false\n*/\nfunction isOdd( value ) {\n\tif ( !isInteger( value ) ) {\n\t\treturn false;\n\t}\n\t// Check sign to prevent overflow...\n\tif ( value > 0.0 ) {\n\t\treturn isEven( value-1.0 );\n\t}\n\treturn isEven( value+1.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isOdd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\nvar isEven = require( './../../is-even' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object that has an odd number value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object that has an odd number value\n*\n* @example\n* var bool = isOdd( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isOdd( new Number( 5.0 ) );\n* // returns true\n*/\nfunction isOdd( value ) {\n\tif ( !isInteger( value ) ) {\n\t\treturn false;\n\t}\n\t// Check sign to prevent overflow...\n\tif ( value > 0.0 ) {\n\t\treturn isEven( value-1.0 );\n\t}\n\treturn isEven( value+1.0 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isOdd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an odd number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an odd number.\n*\n* @example\n* var bool = isOdd( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isOdd( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isOdd( 4.0 );\n* // returns false\n*\n* @example\n* var bool = isOdd( new Number( 4.0 ) );\n* // returns false\n*\n* @example\n* var bool = isOdd( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isOdd( null );\n* // returns false\n*/\nfunction isOdd( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isOdd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an odd number.\n*\n* @module @stdlib/assert/is-odd\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' );\n*\n* var bool = isOdd( 5.0 );\n* // returns true\n*\n* bool = isOdd( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isOdd( 4.0 );\n* // returns false\n*\n* bool = isOdd( new Number( 4.0 ) );\n* // returns false\n*\n* bool = isOdd( -3.14 );\n* // returns false\n*\n* bool = isOdd( null );\n* // returns false\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' ).isPrimitive;\n*\n* var bool = isOdd( -5.0 );\n* // returns true\n*\n* bool = isOdd( new Number( -5.0 ) );\n* // returns false\n*\n* @example\n* var isOdd = require( '@stdlib/assert/is-odd' ).isObject;\n*\n* var bool = isOdd( 5.0 );\n* // returns false\n*\n* bool = isOdd( new Number( 5.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isOdd = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isOdd, 'isPrimitive', isPrimitive );\nsetReadOnly( isOdd, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isOdd;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isSquareMatrix = require( './../../is-square-matrix' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a persymmetric matrix.\n*\n* ## Notes\n*\n* -   The implementation must rely on manually checking that \\\\(M_{ij} = M_{N-j-1,N-i-1}\\\\), and, while element access is deterministic, no way exists to prevent cache misses outside of reordering the underlying matrix elements, thus incurring a larger performance penalty than just \"jumping around\" in a single pass.\n* -   Worst case scenario: O(N^2).\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a persymmetric matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var arr = ndarray( 'generic', [ 1, 2, 3, 1 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isPersymmetricMatrix( arr );\n* // returns true\n*\n* bool = isPersymmetricMatrix( [] );\n* // returns false\n*/\nfunction isPersymmetricMatrix( v ) {\n\tvar M;\n\tvar n;\n\tvar i;\n\tvar j;\n\tif ( !isSquareMatrix( v ) ) {\n\t\treturn false;\n\t}\n\tM = v.shape[ 0 ] - 1;\n\tfor ( i = 0; i < M; i++ ) {\n\t\tn = M - i;\n\t\tfor ( j = 0; j < n; j++ ) {\n\t\t\tif ( v.get( i, j ) !== v.get( M-j, n ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPersymmetricMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a persymmetric matrix.\n*\n* @module @stdlib/assert/is-persymmetric-matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var isPersymmetricMatrix = require( '@stdlib/assert/is-persymmetric-matrix' );\n*\n* var arr = ndarray( 'generic', [ 1, 2, 3, 1 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isPersymmetricMatrix( arr );\n* // returns true\n*\n* bool = isPersymmetricMatrix( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPersymmetricMatrix = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isPersymmetricMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only plain objects.\n*\n* @module @stdlib/assert/is-plain-object-array\n*\n* @example\n* var isPlainObjectArray = require( '@stdlib/assert/is-plain-object-array' );\n*\n* var bool = isPlainObjectArray( [ {}, { 'beep': 'boop' } ] );\n* // returns true\n*\n* bool = isPlainObjectArray( [ {}, new Number(3.0) ] );\n* // returns false\n*\n* bool = isPlainObjectArray( [ {}, '3.0' ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPlainObjectArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isPlainObjectArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arrayfun = require( './../../tools/array-like-function' );\nvar isPlainObject = require( './../../is-plain-object' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array-like object containing only plain objects.\n*\n* @name isPlainObjectArray\n* @type {Function}\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether an input value is an array-like object containing only plain objects\n*\n* @example\n* var bool = isPlainObjectArray( [ {}, { 'beep': 'boop' } ] );\n* // returns true\n*\n* bool = isPlainObjectArray( [ {}, new Number(3.0) ] );\n* // returns false\n*\n* bool = isPlainObjectArray( [ {}, '3.0' ] );\n* // returns false\n*/\nvar isPlainObjectArray = arrayfun( isPlainObject );\n\n\n// EXPORTS //\n\nmodule.exports = isPlainObjectArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive integer value\n*\n* @example\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveInteger( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive integer\n*\n* @example\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveInteger( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isPositiveInteger( null );\n* // returns false\n*/\nfunction isPositiveInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive integer.\n*\n* @module @stdlib/assert/is-positive-integer\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' );\n*\n* var bool = isPositiveInteger( 5.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveInteger( -5.0 );\n* // returns false\n*\n* bool = isPositiveInteger( 3.14 );\n* // returns false\n*\n* bool = isPositiveInteger( null );\n* // returns false\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isPrimitive;\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns true\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isPositiveInteger = require( '@stdlib/assert/is-positive-integer' ).isObject;\n*\n* var bool = isPositiveInteger( 3.0 );\n* // returns false\n*\n* bool = isPositiveInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isPositiveInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isPositiveInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isPositiveInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only positive integers.\n*\n* @module @stdlib/assert/is-positive-integer-array\n*\n* @example\n* var isPositiveIntegerArray = require( '@stdlib/assert/is-positive-integer-array' );\n*\n* var bool = isPositiveIntegerArray( [ 3.0, new Number(3.0) ] );\n* // returns true\n*\n* bool = isPositiveIntegerArray( [ 3.0, '3.0' ] );\n* // returns false\n*\n* @example\n* var isPositiveIntegerArray = require( '@stdlib/assert/is-positive-integer-array' ).primitives;\n*\n* var bool = isPositiveIntegerArray( [ 1.0, 2.0, 10.0 ] );\n* // returns true\n*\n* bool = isPositiveIntegerArray( [ 3.0, new Number(1.0) ] );\n* // returns false\n*\n* @example\n* var isPositiveIntegerArray = require( '@stdlib/assert/is-positive-integer-array' ).objects;\n*\n* var bool = isPositiveIntegerArray( [ new Number(3.0), new Number(1.0) ] );\n* // returns true\n*\n* bool = isPositiveIntegerArray( [ 1.0, 2.0, 10.0 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPositiveInteger = require( './../../is-positive-integer' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isPositiveIntegerArray = arrayfun( isPositiveInteger );\nsetReadOnly( isPositiveIntegerArray, 'primitives', arrayfun( isPositiveInteger.isPrimitive ) );\nsetReadOnly( isPositiveIntegerArray, 'objects', arrayfun( isPositiveInteger.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveIntegerArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a positive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a positive value\n*\n* @example\n* var bool = isPositiveNumber( 3.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns false\n*/\nfunction isPositiveNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a positive value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a positive value\n*\n* @example\n* var bool = isPositiveNumber( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isPositiveNumber( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue.valueOf() > 0.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a positive number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a positive number\n*\n* @example\n* var bool = isPositiveNumber( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( 3.14 );\n* // returns true\n*\n* @example\n* var bool = isPositiveNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveNumber( null );\n* // returns false\n*/\nfunction isPositiveNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a positive number.\n*\n* @module @stdlib/assert/is-positive-number\n*\n* @example\n* var isPositiveNumber = require( '@stdlib/assert/is-positive-number' );\n*\n* var bool = isPositiveNumber( 5.0 );\n* // returns true\n*\n* bool = isPositiveNumber( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPositiveNumber( 3.14 );\n* // returns true\n*\n* bool = isPositiveNumber( -5.0 );\n* // returns false\n*\n* bool = isPositiveNumber( null );\n* // returns false\n*\n* @example\n* var isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isPrimitive;\n*\n* var bool = isPositiveNumber( 3.0 );\n* // returns true\n*\n* bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns false\n*\n* @example\n* var isPositiveNumber = require( '@stdlib/assert/is-positive-number' ).isObject;\n*\n* var bool = isPositiveNumber( 3.0 );\n* // returns false\n*\n* bool = isPositiveNumber( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isPositiveNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isPositiveNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isPositiveNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only positive numbers.\n*\n* @module @stdlib/assert/is-positive-number-array\n*\n* @example\n* var isPositiveNumberArray = require( '@stdlib/assert/is-positive-number-array' );\n*\n* var bool = isPositiveNumberArray( [ 3.0, new Number(3.0) ] );\n* // returns true\n*\n* bool = isPositiveNumberArray( [ 3.0, '3.0' ] );\n* // returns false\n*\n* @example\n* var isPositiveNumberArray = require( '@stdlib/assert/is-positive-number-array' ).primitives;\n*\n* var bool = isPositiveNumberArray( [ 1.0, 5.0, 10.0 ] );\n* // returns true\n*\n* bool = isPositiveNumberArray( [ 3.0, new Number(1.0) ] );\n* // returns false\n*\n* @example\n* var isPositiveNumberArray = require( '@stdlib/assert/is-positive-number-array' ).objects;\n*\n* var bool = isPositiveNumberArray( [ new Number(3.0), new Number(1.0) ] );\n* // returns true\n*\n* bool = isPositiveNumberArray( [ 1.0, 5.0, 10.0 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPositiveNumber = require( './../../is-positive-number' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isPositiveNumberArray = arrayfun( isPositiveNumber );\nsetReadOnly( isPositiveNumberArray, 'primitives', arrayfun( isPositiveNumber.isPrimitive ) );\nsetReadOnly( isPositiveNumberArray, 'objects', arrayfun( isPositiveNumber.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveNumberArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive equal to positive zero.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive equal to positive zero\n*\n* @example\n* var bool = isPositiveZero( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveZero( new Number( 0.0 ) );\n* // returns false\n*/\nfunction isPositiveZero( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\t( 1.0 / value ) === PINF\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar PINF = require( '@stdlib/constants/float64/pinf' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value equal to positive zero.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value equal to positive zero\n*\n* @example\n* var bool = isPositiveZero( 0.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveZero( new Number( 0.0 ) );\n* // returns true\n*/\nfunction isPositiveZero( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\t( 1.0 / value.valueOf() ) === PINF\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is equal to positive zero.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is equal to positive zero\n*\n* @example\n* var bool = isPositiveZero( 0.0 );\n* // returns true\n*\n* @example\n* var bool = isPositiveZero( new Number( 0.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPositiveZero( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isPositiveZero( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveZero( -0.0 );\n* // returns false\n*\n* @example\n* var bool = isPositiveZero( null );\n* // returns false\n*/\nfunction isPositiveZero( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is equal to positive zero.\n*\n* @module @stdlib/assert/is-positive-zero\n*\n* @example\n* var isPositiveZero = require( '@stdlib/assert/is-positive-zero' );\n*\n* var bool = isPositiveZero( 0.0 );\n* // returns true\n*\n* bool = isPositiveZero( new Number( 0.0 ) );\n* // returns true\n*\n* bool = isPositiveZero( -3.14 );\n* // returns false\n*\n* bool = isPositiveZero( 5.0 );\n* // returns false\n*\n* bool = isPositiveZero( -0.0 );\n* // returns false\n*\n* bool = isPositiveZero( null );\n* // returns false\n*\n* @example\n* var isPositiveZero = require( '@stdlib/assert/is-positive-zero' ).isPrimitive;\n*\n* var bool = isPositiveZero( 0.0 );\n* // returns true\n*\n* bool = isPositiveZero( new Number( 0.0 ) );\n* // returns false\n*\n* @example\n* var isPositiveZero = require( '@stdlib/assert/is-positive-zero' ).isObject;\n*\n* var bool = isPositiveZero( 0.0 );\n* // returns false\n*\n* bool = isPositiveZero( new Number( 0.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isPositiveZero = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isPositiveZero, 'isPrimitive', isPrimitive );\nsetReadOnly( isPositiveZero, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isPositiveZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar isprime = require( '@stdlib/math/base/assert/is-prime' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a value which is a prime number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a value which is a prime number\n*\n* @example\n* var bool = isPrime( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPrime( new Number( 5.0 ) );\n* // returns false\n*/\nfunction isPrime( value ) {\n\tif ( !isNumber( value ) ) {\n\t\treturn false;\n\t}\n\treturn isprime( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPrime;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar isprime = require( '@stdlib/math/base/assert/is-prime' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value which is a prime number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value which is a prime number\n*\n* @example\n* var bool = isPrime( 5.0 );\n* // returns false\n*\n* @example\n* var bool = isPrime( new Number( 5.0 ) );\n* // returns true\n*/\nfunction isPrime( value ) {\n\tif ( !isNumber( value ) ) {\n\t\treturn false;\n\t}\n\treturn isprime( value.valueOf() );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPrime;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a prime number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a prime number\n*\n* @example\n* var bool = isPrime( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isPrime( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isPrime( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isPrime( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isPrime( null );\n* // returns false\n*/\nfunction isPrime( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPrime;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a prime number.\n*\n* @module @stdlib/assert/is-prime\n*\n* @example\n* var isPrime = require( '@stdlib/assert/is-prime' );\n*\n* var bool = isPrime( 5.0 );\n* // returns true\n*\n* bool = isPrime( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isPrime( 3.14 );\n* // returns false\n*\n* bool = isPrime( -5.0 );\n* // returns false\n*\n* bool = isPrime( null );\n* // returns false\n*\n* @example\n* var isPrime = require( '@stdlib/assert/is-prime' ).isPrimitive;\n*\n* var bool = isPrime( 5.0 );\n* // returns true\n*\n* bool = isPrime( new Number( 5.0 ) );\n* // returns false\n*\n* @example\n* var isPrime = require( '@stdlib/assert/is-prime' ).isObject;\n*\n* var bool = isPrime( 5.0 );\n* // returns false\n*\n* bool = isPrime( new Number( 5.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isPrime = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isPrime, 'isPrimitive', isPrimitive );\nsetReadOnly( isPrime, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isPrime;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only JavaScript primitives.\n*\n* @module @stdlib/assert/is-primitive-array\n*\n* @example\n* var isPrimitiveArray = require( '@stdlib/assert/is-primitive-array' );\n*\n* var bool = isPrimitiveArray( [ '3', 2, null ] );\n* // returns true\n*\n* bool = isPrimitiveArray( [ {}, 2, 1 ] );\n* // returns false\n*\n* bool = isPrimitiveArray( [ new String('abc'), '3.0' ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPrimitiveArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isPrimitiveArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arrayfun = require( './../../tools/array-like-function' );\nvar isPrimitive = require( './../../is-primitive' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array-like object containing only JavaScript primitives.\n*\n* @name isPrimitiveArray\n* @type {Function}\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether an input value is an array-like object containing only JavaScript primitives\n*\n* @example\n* var bool = isPrimitiveArray( [ '3', 2, null ] );\n* // returns true\n*\n* bool = isPrimitiveArray( [ {}, 2, 1 ] );\n* // returns false\n*\n* bool = isPrimitiveArray( [ new String('abc'), '3.0' ] );\n* // returns false\n*/\nvar isPrimitiveArray = arrayfun( isPrimitive );\n\n\n// EXPORTS //\n\nmodule.exports = isPrimitiveArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( './../../is-function' );\nvar hasOwnProp = require( './../../has-own-property' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is PRNG-like.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is PRNG-like\n*\n* @example\n* var randu = require( '@stdlib/random/base/randu' );\n*\n* var bool = isPRNGLike( randu );\n* // returns true\n*\n* bool = isPRNGLike( [] );\n* // returns false\n*/\nfunction isPRNGLike( v ) {\n\treturn (\n\t\tisFunction( v ) &&\n\t\ttypeof v.NAME === 'string' &&\n\t\thasOwnProp( v, 'state' ) &&\n\t\thasOwnProp( v, 'seed' )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPRNGLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is PRNG-like.\n*\n* @module @stdlib/assert/is-prng-like\n*\n* @example\n* var randu = require( '@stdlib/random/base/randu' );\n* var isPRNGLike = require( '@stdlib/assert/is-prng-like' );\n*\n* var bool = isPRNGLike( randu );\n* // returns true\n*\n* bool = isPRNGLike( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPRNGLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isPRNGLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a value which is a probability.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a value which is a probability\n*\n* @example\n* var bool = isProbability( 0.66 );\n* // returns true\n*\n* @example\n* var bool = isProbability( new Number( 0.66 ) );\n* // returns false\n*/\nfunction isProbability( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue >= 0.0 &&\n\t\tvalue <= 1.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isProbability;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value which is a probability.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value which is a probability\n*\n* @example\n* var bool = isProbability( 0.5 );\n* // returns false\n*\n* @example\n* var bool = isProbability( new Number( 0.5 ) );\n* // returns true\n*/\nfunction isProbability( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tvalue.valueOf() >= 0.0 &&\n\t\tvalue.valueOf() <= 1.0\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isProbability;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a probability.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a probability\n*\n* @example\n* var bool = isProbability( 0.5 );\n* // returns true\n*\n* @example\n* var bool = isProbability( new Number( 0.5 ) );\n* // returns true\n*\n* @example\n* var bool = isProbability( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isProbability( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isProbability( null );\n* // returns false\n*/\nfunction isProbability( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isProbability;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a probability.\n*\n* @module @stdlib/assert/is-probability\n*\n* @example\n* var isProbability = require( '@stdlib/assert/is-probability' );\n*\n* var bool = isProbability( 0.5 );\n* // returns true\n*\n* bool = isProbability( new Number( 0.5 ) );\n* // returns true\n*\n* bool = isProbability( 3.14 );\n* // returns false\n*\n* bool = isProbability( -5.0 );\n* // returns false\n*\n* bool = isProbability( null );\n* // returns false\n*\n* @example\n* var isProbability = require( '@stdlib/assert/is-probability' ).isPrimitive;\n*\n* var bool = isProbability( 0.3 );\n* // returns true\n*\n* bool = isProbability( new Number( 0.3 ) );\n* // returns false\n*\n* @example\n* var isProbability = require( '@stdlib/assert/is-probability' ).isObject;\n*\n* var bool = isProbability( 0.77 );\n* // returns false\n*\n* bool = isProbability( new Number( 0.77 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isProbability = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isProbability, 'isPrimitive', isPrimitive );\nsetReadOnly( isProbability, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isProbability;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only probabilities.\n*\n* @module @stdlib/assert/is-probability-array\n*\n* @example\n* var isNonNegativeNumberArray = require( '@stdlib/assert/is-probability-array' );\n*\n* var bool = isProbabilityArray( [ 0.5, new Number(0.8) ] );\n* // returns true\n*\n* bool = isProbabilityArray( [ 0.8, 1.2 ] );\n* // returns false\n*\n* bool = isProbabilityArray( [ 0.8, '0.2' ] );\n* // returns false\n*\n* @example\n* var isProbabilityArray = require( '@stdlib/assert/is-probability-array' ).primitives;\n*\n* var bool = isProbabilityArray( [ 1.0, 0.0, 0.5 ] );\n* // returns true\n*\n* bool = isProbabilityArray( [ 0.3, new Number(0.4) ] );\n* // returns false\n*\n* @example\n* var isProbabilityArray = require( '@stdlib/assert/is-probability-array' ).objects;\n*\n* var bool = isProbabilityArray( [ new Number(0.7), new Number(1.0) ] );\n* // returns true\n*\n* bool = isProbabilityArray( [ 1.0, 0.0, new Number(0.7) ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isProbability = require( './../../is-probability' );\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\n\n\n// MAIN //\n\nvar isProbabilityArray = arrayfun( isProbability );\nsetReadOnly( isProbabilityArray, 'primitives', arrayfun( isProbability.isPrimitive ) );\nsetReadOnly( isProbabilityArray, 'objects', arrayfun( isProbability.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isProbabilityArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\nvar isSymbol = require( './../../is-symbol' ).isPrimitive;\nvar isNonNegativeInteger = require( './../../is-nonnegative-integer' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests whether a value is a property key.\n*\n* ## Notes\n*\n* -   A property key is either a string, symbol, or a nonnegative integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a property key\n*\n* @example\n* var bool = isPropertyKey( 'beep' );\n* // returns true\n*\n* @example\n* var bool = isPropertyKey( 37 );\n* // returns true\n*\n* @example\n* var bool = isPropertyKey( {} );\n* // returns false\n*\n* @example\n* var bool = isPropertyKey( [] );\n* // returns false\n*/\nfunction isPropertyKey( value ) {\n\treturn (\n\t\tisString( value ) ||\n\t\tisSymbol( value ) ||\n\t\tisNonNegativeInteger( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPropertyKey;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a value is a property key.\n*\n* @module @stdlib/assert/is-property-key\n*\n* @example\n* var isPropertyKey = require( '@stdlib/assert/is-property-key' );\n*\n* var bool = isPropertyKey( 'beep' );\n* // returns true\n*\n* bool = isPropertyKey( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isPropertyKey = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isPropertyKey;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar isProtoOf = Object.prototype.isPrototypeOf;\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's prototype chain contains a provided prototype.\n*\n* @param {*} value - value to test\n* @param {(Object|Function)} proto - prototype\n* @throws {TypeError} second argument must be an object and not null\n* @returns {boolean} boolean indicating if a provided prototype exists in a prototype chain\n*\n* @example\n* var inherit = require( '@stdlib/utils/inherit' );\n*\n* function Foo() {\n*     return this;\n* }\n*\n* function Bar() {\n*     return this;\n* }\n* inherit( Bar, Foo );\n*\n* var bar = new Bar();\n*\n* var bool = isPrototypeOf( bar, Foo.prototype );\n* // returns true\n*/\nfunction isPrototypeOf( value, proto ) { // eslint-disable-line stdlib/no-redeclare\n\tvar type = typeof proto;\n\tif (\n\t\tproto === null ||\n\t\t(type !== 'object' && type !== 'function')\n\t) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either an object (except null) or a function. Value: `%s`.', proto ) );\n\t}\n\ttype = typeof value;\n\tif (\n\t\tvalue === null ||\n\t\t(type !== 'object' && type !== 'function')\n\t) {\n\t\treturn false;\n\t}\n\treturn isProtoOf.call( proto, value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if an object's prototype chain contains a provided prototype.\n*\n* @module @stdlib/assert/is-prototype-of\n*\n* @example\n* var inherit = require( '@stdlib/utils/inherit' );\n* var isPrototypeOf = require( '@stdlib/assert/is-prototype-of' );\n*\n* function Foo() {\n*     return this;\n* }\n*\n* function Bar() {\n*     return this;\n* }\n* inherit( Bar, Foo );\n*\n* var bar = new Bar();\n*\n* var bool = isPrototypeOf( bar, Foo.prototype );\n* // returns true\n*/\n\n// MODULES //\n\nvar isPrototypeOf = require( './main.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// EXPORTS //\n\nmodule.exports = isPrototypeOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar typeOf = require( '@stdlib/utils/type-of' );\nvar isError = require( './../../is-error' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `RangeError` object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a `RangeError` object\n*\n* @example\n* var bool = isRangeError( new RangeError( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isRangeError( {} );\n* // returns false\n*/\nfunction isRangeError( value ) {\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for `RangeError` objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tif ( value instanceof RangeError ) {\n\t\treturn true;\n\t}\n\t// All `RangeError` objects are `Error` objects...\n\tif ( isError( value ) ) {\n\t\t// Walk the prototype tree until we find the desired constructor...\n\t\twhile ( value ) {\n\t\t\tif ( typeOf( value ) === 'rangeerror' ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvalue = getPrototypeOf( value );\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isRangeError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a `RangeError` object.\n*\n* @module @stdlib/assert/is-range-error\n*\n* @example\n* var isRangeError = require( '@stdlib/assert/is-range-error' );\n*\n* var bool = isRangeError( new RangeError( 'beep' ) );\n* // returns true\n*\n* bool = isRangeError( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isRangeError = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isRangeError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptor = require( '@stdlib/utils/property-descriptor' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is read-only.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is read-only\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'writable': false,\n*     'value': true\n* });\n*\n* var bool = isReadOnlyProperty( obj, 'boop' );\n* // returns false\n*\n* bool = isReadOnlyProperty( obj, 'beep' );\n* // returns true\n*/\nfunction isReadOnlyProperty( value, property ) {\n\tvar desc = propertyDescriptor( value, property );\n\treturn (\n\t\tdesc !== null &&\n\t\tdesc.configurable === false &&\n\t\t(\n\t\t\t// Data descriptor:\n\t\t\tdesc.writable === false ||\n\n\t\t\t// Accessor descriptor:\n\t\t\t(\n\t\t\t\ttypeof desc.get === 'function' &&\n\t\t\t\tdesc.set === void 0\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isReadOnlyProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own property is read-only.\n*\n* @module @stdlib/assert/is-read-only-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isReadOnlyProperty = require( '@stdlib/assert/is-read-only-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'writable': false,\n*     'value': true\n* });\n*\n* var bool = isReadOnlyProperty( obj, 'boop' );\n* // returns false\n*\n* bool = isReadOnlyProperty( obj, 'beep' );\n* // returns true\n*/\n\n// MODULES //\n\nvar isReadOnlyProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isReadOnlyProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptorIn = require( '@stdlib/utils/property-descriptor-in' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own or inherited property is read-only.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is read-only\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'writable': false,\n*     'value': true\n* });\n*\n* var bool = isReadOnlyPropertyIn( obj, 'boop' );\n* // returns false\n*\n* bool = isReadOnlyPropertyIn( obj, 'beep' );\n* // returns true\n*/\nfunction isReadOnlyPropertyIn( value, property ) {\n\tvar desc = propertyDescriptorIn( value, property );\n\treturn (\n\t\tdesc !== null &&\n\t\tdesc.configurable === false &&\n\t\t(\n\t\t\t// Data descriptor:\n\t\t\tdesc.writable === false ||\n\n\t\t\t// Accessor descriptor:\n\t\t\t(\n\t\t\t\ttypeof desc.get === 'function' &&\n\t\t\t\tdesc.set === void 0\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isReadOnlyPropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own or inherited property is read-only.\n*\n* @module @stdlib/assert/is-read-only-property-in\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isReadOnlyPropertyIn = require( '@stdlib/assert/is-read-only-property-in' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'writable': false,\n*     'value': true\n* });\n*\n* var bool = isReadOnlyPropertyIn( obj, 'boop' );\n* // returns false\n*\n* bool = isReadOnlyPropertyIn( obj, 'beep' );\n* // returns true\n*/\n\n// MODULES //\n\nvar isReadOnlyPropertyIn = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isReadOnlyPropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptor = require( '@stdlib/utils/property-descriptor' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is readable and writable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is readable and writable\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function setter( v ) {\n*     obj.boop = v;\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'set': setter\n* });\n*\n* var bool = isReadWriteProperty( obj, 'boop' );\n* // returns true\n*\n* bool = isReadWriteProperty( obj, 'beep' );\n* // returns false\n*/\nfunction isReadWriteProperty( value, property ) {\n\tvar desc = propertyDescriptor( value, property );\n\treturn (\n\t\tdesc !== null &&\n\t\t(\n\t\t\t// Data descriptor:\n\t\t\tdesc.writable === true ||\n\n\t\t\t// Accessor descriptor:\n\t\t\t(\n\t\t\t\ttypeof desc.get === 'function' &&\n\t\t\t\ttypeof desc.set === 'function'\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isReadWriteProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own property is readable and writable.\n*\n* @module @stdlib/assert/is-read-write-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isReadWriteProperty = require( '@stdlib/assert/is-read-write-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function setter( v ) {\n*     obj.boop = v;\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'set': setter\n* });\n*\n* var bool = isReadWriteProperty( obj, 'boop' );\n* // returns true\n*\n* bool = isReadWriteProperty( obj, 'beep' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isReadWriteProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isReadWriteProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptorIn = require( '@stdlib/utils/property-descriptor-in' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own or inherited property is readable and writable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is readable and writable\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function setter( v ) {\n*     obj.boop = v;\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'set': setter\n* });\n*\n* var bool = isReadWritePropertyIn( obj, 'boop' );\n* // returns true\n*\n* bool = isReadWritePropertyIn( obj, 'beep' );\n* // returns false\n*/\nfunction isReadWritePropertyIn( value, property ) {\n\tvar desc = propertyDescriptorIn( value, property );\n\treturn (\n\t\tdesc !== null &&\n\t\t(\n\t\t\t// Data descriptor:\n\t\t\tdesc.writable === true ||\n\n\t\t\t// Accessor descriptor:\n\t\t\t(\n\t\t\t\ttypeof desc.get === 'function' &&\n\t\t\t\ttypeof desc.set === 'function'\n\t\t\t)\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isReadWritePropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own or inherited property is readable and writable.\n*\n* @module @stdlib/assert/is-read-write-property-in\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isReadWritePropertyIn = require( '@stdlib/assert/is-read-write-property-in' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function setter( v ) {\n*     obj.boop = v;\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'set': setter\n* });\n*\n* var bool = isReadWritePropertyIn( obj, 'boop' );\n* // returns true\n*\n* bool = isReadWritePropertyIn( obj, 'beep' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isReadWritePropertyIn = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isReadWritePropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptor = require( '@stdlib/utils/property-descriptor' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is readable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is readable\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function setter( v ) {\n*     obj.boop = v;\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'set': setter\n* });\n*\n* var bool = isReadableProperty( obj, 'boop' );\n* // returns true\n*\n* bool = isReadableProperty( obj, 'beep' );\n* // returns false\n*/\nfunction isReadableProperty( value, property ) {\n\tvar desc = propertyDescriptor( value, property );\n\treturn (\n\t\tdesc !== null &&\n\t\t(\n\t\t\tdesc.writable !== void 0 ||    // data descriptor\n\t\t\ttypeof desc.get === 'function' // accessor descriptor\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isReadableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own property is readable.\n*\n* @module @stdlib/assert/is-readable-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isReadableProperty = require( '@stdlib/assert/is-readable-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function setter( v ) {\n*     obj.boop = v;\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'set': setter\n* });\n*\n* var bool = isReadableProperty( obj, 'boop' );\n* // returns true\n*\n* bool = isReadableProperty( obj, 'beep' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isReadableProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isReadableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptorIn = require( '@stdlib/utils/property-descriptor-in' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own or inherited property is readable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is readable\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function setter( v ) {\n*     obj.boop = v;\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'set': setter\n* });\n*\n* var bool = isReadablePropertyIn( obj, 'boop' );\n* // returns true\n*\n* bool = isReadablePropertyIn( obj, 'beep' );\n* // returns false\n*/\nfunction isReadablePropertyIn( value, property ) {\n\tvar desc = propertyDescriptorIn( value, property );\n\treturn (\n\t\tdesc !== null &&\n\t\t(\n\t\t\tdesc.writable !== void 0 ||    // data descriptor\n\t\t\ttypeof desc.get === 'function' // accessor descriptor\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isReadablePropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own or inherited property is readable.\n*\n* @module @stdlib/assert/is-readable-property-in\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isReadablePropertyIn = require( '@stdlib/assert/is-readable-property-in' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function setter( v ) {\n*     obj.boop = v;\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'set': setter\n* });\n*\n* var bool = isReadablePropertyIn( obj, 'boop' );\n* // returns true\n*\n* bool = isReadablePropertyIn( obj, 'beep' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isReadablePropertyIn = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isReadablePropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar typeOf = require( '@stdlib/utils/type-of' );\nvar isError = require( './../../is-error' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `ReferenceError` object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a `ReferenceError` object\n*\n* @example\n* var bool = isReferenceError( new ReferenceError( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isReferenceError( {} );\n* // returns false\n*/\nfunction isReferenceError( value ) {\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for `ReferenceError` objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tif ( value instanceof ReferenceError ) {\n\t\treturn true;\n\t}\n\t// All `ReferenceError` objects are `Error` objects...\n\tif ( isError( value ) ) {\n\t\t// Walk the prototype tree until we find the desired constructor...\n\t\twhile ( value ) {\n\t\t\tif ( typeOf( value ) === 'referenceerror' ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvalue = getPrototypeOf( value );\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isReferenceError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a `ReferenceError` object.\n*\n* @module @stdlib/assert/is-reference-error\n*\n* @example\n* var isReferenceError = require( '@stdlib/assert/is-reference-error' );\n*\n* var bool = isReferenceError( new ReferenceError( 'beep' ) );\n* // returns true\n*\n* bool = isReferenceError( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isReferenceError = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isReferenceError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\nvar RE = require( '@stdlib/regexp/regexp' ).REGEXP;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a regular expression string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a regular expression string\n*\n* @example\n* var bool = isRegExpString( '/beep/' );\n* // returns true\n*\n* @example\n* var bool = isRegExpString( '/beep/gim' );\n* // returns true\n*\n* @example\n* var bool = isRegExpString( 'beep' );\n* // returns false\n*\n* @example\n* var bool = isRegExpString( '' );\n* // returns false\n*\n* @example\n* var bool = isRegExpString( null );\n* // returns false\n*/\nfunction isRegExpString( value ) {\n\treturn isString( value ) && RE.test( value );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isRegExpString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a regular expression string.\n*\n* @module @stdlib/assert/is-regexp-string\n*\n* @example\n* var isRegExpString = require( '@stdlib/assert/is-regexp-string' );\n*\n* var bool = isRegExpString( '/beep/' );\n* // returns true\n*\n* bool = isRegExpString( 'beep' );\n* // returns false\n*\n* bool = isRegExpString( '' );\n* // returns false\n*\n* bool = isRegExpString( null );\n* // returns false\n*/\n\n// MODULES //\n\nvar isRegExpString = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isRegExpString;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\nvar isAbsolutePath = require( './../../is-absolute-path' ).posix;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a POSIX relative path.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a POSIX relative path\n*\n* @example\n* var bool = isRelativePath( './foo/bar/baz' );\n* // returns true\n*\n* @example\n* var bool = isRelativePath( '/foo/../bar/baz' );\n* // returns false\n*/\nfunction isRelativePath( value ) {\n\treturn (\n\t\tisString( value ) &&\n\t\t!isAbsolutePath( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isRelativePath;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\nvar isAbsolutePath = require( './../../is-absolute-path' ).win32;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a Windows relative path.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a Windows relative path\n*\n* @example\n* var bool = isRelativePath( 'foo\\\\bar\\\\baz' );\n* // returns true\n*\n* @example\n* var bool = isRelativePath( 'C:\\\\foo\\\\..\\\\bar\\\\baz' );\n* // returns false\n*/\nfunction isRelativePath( value ) {\n\treturn (\n\t\tisString( value ) &&\n\t\t!isAbsolutePath( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isRelativePath;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a relative path.\n*\n* @module @stdlib/assert/is-relative-path\n*\n* @example\n* var IS_WINDOWS = require( '@stdlib/assert/is-windows' );\n* var isRelativePath = require( '@stdlib/assert/is-relative-path' );\n*\n* var bool;\n* if ( IS_WINDOWS ) {\n*     bool = isRelativePath( 'foo\\\\bar\\\\baz' );\n*     // returns true\n*\n*     bool = isRelativePath( 'C:\\\\foo\\\\..\\\\bar\\\\baz' );\n*     // returns false\n* } else {\n*     bool = isRelativePath( './foo/bar/baz' );\n*     // returns true\n*\n*     bool = isRelativePath( '/foo/../bar/baz' );\n*     // returns false\n* }\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar IS_WINDOWS = require( './../../is-windows' );\nvar isRelativePathPosix = require( './posix.js' );\nvar isRelativePathWin32 = require( './win32.js' );\n\n\n// MAIN //\n\nvar isRelativePath;\nif ( IS_WINDOWS ) {\n\tisRelativePath = isRelativePathWin32;\n} else {\n\tisRelativePath = isRelativePathPosix;\n}\nsetReadOnly( isRelativePath, 'posix', isRelativePathPosix );\nsetReadOnly( isRelativePath, 'win32', isRelativePathWin32 );\n\n\n// EXPORTS //\n\nmodule.exports = isRelativePath;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\n\n\n// VARIABLES //\n\n/**\n* Matches parts of a URI according to RFC 3986.\n*\n* ```text\n* <scheme name> : <hierarchical part > [ ? <query> ] [ # <fragment> ]\n* ```\n*\n* Regular expression: `/(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?[^#]*)?(?:#.*)?/`\n*\n* -   `(?:([^:\\/?#]+):)`\n*\n*     -   match the scheme, including the `:`, but only capture the scheme name\n*\n* -   `?`\n*\n*     -   match the scheme zero or one times\n*\n* -   `(?:\\/\\/([^\\/?#]*))`\n*\n*     -   match the hierarchical part which is everything which is not a `/`, `#`, or `?`, but only capture whatever comes after the `//`\n*\n* -   `?`\n*\n*     -   match the hierarchical part zero or one times\n*\n* -   `([^?#]*)`\n*\n*     -   capture everything (the path) until meeting a `?` or `#`\n*\n* -   `(?:\\?[^#]*)`\n*\n*     -   match, but don't capture, a query\n*\n* -   `?`\n*\n*     -   match the query zero or one times\n*\n* -   `(?:#.*)`\n*\n*     -   match, but don't capture, a fragment\n*\n* -   `?`\n*\n*     -   match the fragment zero or one times\n*\n* @private\n* @constant\n* @type {RegExp}\n* @default /(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?[^#]*)?(?:#.*)?/\n*/\nvar RE_URI = /(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?[^#]*)?(?:#.*)?/; // eslint-disable-line no-useless-escape\n\n// Illegal characters (anything which is not in between the square brackets):\nvar RE_ILLEGALS = /[^a-z0-9:\\/?#\\[\\]@!$&'()*+,;=.\\-_~%]/i; // eslint-disable-line no-useless-escape\n\n// Incomplete HEX escapes:\nvar RE_HEX1 = /%[^0-9a-f]/i;\nvar RE_HEX2 = /%[0-9a-f](:?[^0-9a-f]|$)/i;\n\n// If authority is not present, path must not begin with '//'\nvar RE_PATH = /^\\/\\//;\n\n// Scheme must begin with a letter, then consist of letters, digits, '+', '.', or '-' => e.g., 'http', 'https', 'ftp'\nvar RE_SCHEME = /^[a-z][a-z0-9+\\-.]*$/;\n\n\n// MAIN //\n\n/**\n* Tests whether a value is a relative URI.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a relative URI\n*\n* @example\n* var bool = isRelativeURI( './beep/boop' );\n* // returns true\n*\n* @example\n* var bool = isRelativeURI( '/dashboard/admin' );\n* // returns true\n*\n* @example\n* var bool = isRelativeURI( 'https://wikipedia.org' );\n* // returns false\n*\n* @example\n* var bool = isRelativeURI( null );\n* // returns false\n*/\nfunction isRelativeURI( value ) {\n\tvar authority;\n\tvar scheme;\n\tvar parts;\n\tvar path;\n\tif ( !isString( value ) ) {\n\t\treturn false;\n\t}\n\t// Check for illegal characters:\n\tif ( RE_ILLEGALS.test( value ) ) {\n\t\treturn false;\n\t}\n\t// Check for incomplete HEX escapes:\n\tif (\n\t\tRE_HEX1.test( value ) ||\n\t\tRE_HEX2.test( value )\n\t) {\n\t\treturn false;\n\t}\n\t// Split the string into various URI components:\n\tparts = value.match( RE_URI );\n\tscheme = parts[ 1 ];\n\tauthority = parts[ 2 ];\n\tpath = parts[ 3 ];\n\n\tif (\n\t\t!scheme ||\n\t\t!scheme.length ||\n\t\t!RE_SCHEME.test( scheme.toLowerCase() )\n\t) {\n\t\treturn true;\n\t}\n\tif (\n\t\t!authority &&\n\t\tRE_PATH.test( path )\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isRelativeURI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a value is a relative URI.\n*\n* @module @stdlib/assert/is-relative-uri\n*\n* @example\n* var isRelativeURI = require( '@stdlib/assert/is-relative-uri' );\n*\n* var bool = isRelativeURI( 'foo/bar' );\n* // returns true\n*\n* bool = isRelativeURI( 'https://example.com/' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isRelativeURI = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isRelativeURI;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar isSafeInt = require( '@stdlib/math/base/assert/is-safe-integer' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a safe integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a safe integer value\n*\n* @example\n* var bool = isSafeInteger( -3.0 );\n* // returns true\n*\n* @example\n* var bool = isSafeInteger( new Number( -3.0 ) );\n* // returns false\n*/\nfunction isSafeInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisSafeInt( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSafeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( './../../is-number' ).isObject;\nvar isSafeInt = require( '@stdlib/math/base/assert/is-safe-integer' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a safe integer value.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a safe integer value\n*\n* @example\n* var bool = isSafeInteger( 3.0 );\n* // returns false\n*\n* @example\n* var bool = isSafeInteger( new Number( 3.0 ) );\n* // returns true\n*/\nfunction isSafeInteger( value ) {\n\treturn (\n\t\tisNumber( value ) &&\n\t\tisSafeInt( value.valueOf() )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSafeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a safe integer.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a safe integer\n*\n* @example\n* var bool = isSafeInteger( 5.0 );\n* // returns true\n*\n* @example\n* var bool = isSafeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* @example\n* var bool = isSafeInteger( 2.0e300 );\n* // returns false\n*\n* @example\n* var bool = isSafeInteger( -3.14 );\n* // returns false\n*\n* @example\n* var bool = isSafeInteger( null );\n* // returns false\n*/\nfunction isSafeInteger( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSafeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a safe integer.\n*\n* @module @stdlib/assert/is-safe-integer\n*\n* @example\n* var isSafeInteger = require( '@stdlib/assert/is-safe-integer' );\n*\n* var bool = isSafeInteger( 5.0 );\n* // returns true\n*\n* bool = isSafeInteger( new Number( 5.0 ) );\n* // returns true\n*\n* bool = isSafeInteger( 2.0e200 );\n* // returns false\n*\n* bool = isSafeInteger( -3.14 );\n* // returns false\n*\n* bool = isSafeInteger( null );\n* // returns false\n*\n* @example\n* var isSafeInteger = require( '@stdlib/assert/is-safe-integer' ).isPrimitive;\n*\n* var bool = isSafeInteger( -3.0 );\n* // returns true\n*\n* bool = isSafeInteger( new Number( -3.0 ) );\n* // returns false\n*\n* @example\n* var isSafeInteger = require( '@stdlib/assert/is-safe-integer' ).isObject;\n*\n* var bool = isSafeInteger( 3.0 );\n* // returns false\n*\n* bool = isSafeInteger( new Number( 3.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isSafeInteger = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isSafeInteger, 'isPrimitive', isPrimitive );\nsetReadOnly( isSafeInteger, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isSafeInteger;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only safe integers.\n*\n* @module @stdlib/assert/is-safe-integer-array\n*\n* @example\n* var isSafeIntegerArray = require( '@stdlib/assert/is-safe-integer-array' );\n*\n* var bool = isSafeIntegerArray( [ -3.0, new Number(0.0), 2.0 ] );\n* // returns true\n*\n* bool = isSafeIntegerArray( [ -3.0, '3.0' ] );\n* // returns false\n*\n* @example\n* var isSafeIntegerArray = require( '@stdlib/assert/is-safe-integer-array' ).primitives;\n*\n* var bool = isSafeIntegerArray( [ -1.0, 10.0 ] );\n* // returns true\n*\n* bool = isSafeIntegerArray( [ -1.0, 0.0, 5.0 ] );\n* // returns true\n*\n* bool = isSafeIntegerArray( [ -3.0, new Number(-1.0) ] );\n* // returns false\n*\n* @example\n* var isSafeIntegerArray = require( '@stdlib/assert/is-safe-integer-array' ).objects;\n*\n* var bool = isSafeIntegerArray( [ new Number(1.0), new Number(3.0) ] );\n* // returns true\n*\n* bool = isSafeIntegerArray( [ -1.0, 0.0, 3.0 ] );\n* // returns false\n*\n* bool = isSafeIntegerArray( [ 3.0, new Number(-1.0) ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\nvar isSafeInteger = require( './../../is-safe-integer' );\n\n\n// MAIN //\n\nvar isSafeIntegerArray = arrayfun( isSafeInteger );\nsetReadOnly( isSafeIntegerArray, 'primitives', arrayfun( isSafeInteger.isPrimitive ) );\nsetReadOnly( isSafeIntegerArray, 'objects', arrayfun( isSafeInteger.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isSafeIntegerArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nativeClass = require( '@stdlib/utils/native-class' );\n\n\n// MAIN //\n\n/**\n* Tests if two arguments have the same native class.\n*\n* @param {*} a - first input value\n* @param {*} b - second input value\n* @returns {boolean} boolean indicating whether two arguments have the same native class\n*\n* @example\n* var bool = isSameNativeClass( 3.14, new Number( 3.14 ) );\n* // returns true\n*\n* @example\n* var bool = isSameNativeClass( 'beep', 'boop' );\n* // returns true\n*\n* @example\n* var bool = isSameNativeClass( [], {} );\n* // returns false\n*/\nfunction isSameNativeClass( a, b ) {\n\treturn ( nativeClass( a ) === nativeClass( b ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSameNativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if two arguments have the same native class.\n*\n* @module @stdlib/assert/is-same-native-class\n*\n* @example\n* var isSameNativeClass = require( '@stdlib/assert/is-same-native-class' );\n*\n* var bool = isSameNativeClass( 'beep', 'boop' );\n* // returns true\n*\n* bool = isSameNativeClass( [], {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isSameNativeClass = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isSameNativeClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if two arguments have the same type.\n*\n* ## Notes\n*\n* -   The function uses the `typeof` operator to test for the same type.\n*\n* @param {*} a - first input value\n* @param {*} b - second input value\n* @returns {boolean} boolean indicating whether two arguments have the same type\n*\n* @example\n* var bool = isSameType( true, true );\n* // returns true\n*\n* @example\n* var bool = isSameType( 3.14, 3.14 );\n* // returns true\n*\n* @example\n* var bool = isSameType( {}, [] );\n* // returns true\n*\n* @example\n* var bool = isSameType( NaN, NaN );\n* // returns true\n*\n* @example\n* var bool = isSameType( 0.0, '0.0' );\n* // returns false\n*/\nfunction isSameType( a, b ) {\n\treturn ( typeof a ) === ( typeof b );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSameType;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if two arguments have the same type.\n*\n* @module @stdlib/assert/is-same-type\n*\n* @example\n* var isSameType = require( '@stdlib/assert/is-same-type' );\n*\n* var bool = isSameType( true, true );\n* // returns true\n*\n* bool = isSameType( 3.14, -3.14 );\n* // returns true\n*\n* bool = isSameType( {}, [] );\n* // returns true\n*\n* bool = isSameType( NaN, NaN );\n* // returns true\n*\n* bool = isSameType( '0.0', 0.0 );\n* // returns false\n*/\n\n// MODULES //\n\nvar isSameType = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isSameType;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if two arguments are the same value.\n*\n* ## Notes\n*\n* -   The function implements the [SameValue Algorithm][ecma-262-same-value-algorithm], as specified in ECMAScript 5.\n* -   In contrast to the strict equality operator `===`, `-0` and `+0` are distinguishable and `NaNs` are the same.\n*\n* [ecma-262-same-value-algorithm]: http://ecma-international.org/ecma-262/5.1/#sec-9.12\n*\n* @param {*} a - first input value\n* @param {*} b - second input value\n* @returns {boolean} boolean indicating whether two arguments are the same value\n*\n* @example\n* var bool = isSameValue( true, true );\n* // returns true\n*\n* @example\n* var bool = isSameValue( 3.14, 3.14 );\n* // returns true\n*\n* @example\n* var bool = isSameValue( {}, {} );\n* // returns false\n*\n* @example\n* var bool = isSameValue( -0.0, -0.0 );\n* // returns true\n*\n* @example\n* var bool = isSameValue( -0.0, 0.0 );\n* // returns false\n*\n* @example\n* var bool = isSameValue( NaN, NaN );\n* // returns true\n*\n* @example\n* var bool = isSameValue( [], [] );\n* // returns false\n*/\nfunction isSameValue( a, b ) {\n\tif ( a === b ) {\n\t\tif ( a === 0.0 ) {\n\t\t\treturn 1.0 / a === 1.0 / b; // handles +-0\n\t\t}\n\t\treturn true;\n\t}\n\treturn ( a !== a && b !== b ); // handles NaNs\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSameValue;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if two arguments are the same value.\n*\n* @module @stdlib/assert/is-same-value\n*\n* @example\n* var isSameValue = require( '@stdlib/assert/is-same-value' );\n*\n* var bool = isSameValue( true, true );\n* // returns true\n*\n* bool = isSameValue( 3.14, 3.14 );\n* // returns true\n*\n* bool = isSameValue( {}, {} );\n* // returns false\n*\n* bool = isSameValue( -0.0, -0.0 );\n* // returns true\n*\n* bool = isSameValue( -0.0, 0.0 );\n* // returns false\n*\n* bool = isSameValue( NaN, NaN );\n* // returns true\n*\n* bool = isSameValue( [], [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isSameValue = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isSameValue;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if two arguments are the same value.\n*\n* ## Notes\n*\n* -   The function implements the SameValueZero Algorithm used by `TypedArray` and `ArrayBuffer` constructors, `Map` and `Set` operations, `String.prototype.includes`, and `Array.prototype.includes` since ES2016.\n* -   In contrast to the strict equality operator `===`, `NaNs` are considered the same value.\n*\n* @param {*} a - first input value\n* @param {*} b - second input value\n* @returns {boolean} boolean indicating whether two arguments are the same value\n*\n* @example\n* var bool = isSameValueZero( true, true );\n* // returns true\n*\n* @example\n* var bool = isSameValueZero( 3.14, 3.14 );\n* // returns true\n*\n* @example\n* var bool = isSameValueZero( {}, {} );\n* // returns false\n*\n* @example\n* var bool = isSameValueZero( -0.0, -0.0 );\n* // returns true\n*\n* @example\n* var bool = isSameValueZero( -0.0, 0.0 );\n* // returns true\n*\n* @example\n* var bool = isSameValueZero( NaN, NaN );\n* // returns true\n*\n* @example\n* var bool = isSameValueZero( [], [] );\n* // returns false\n*/\nfunction isSameValueZero( a, b ) {\n\treturn ( a === b ) || ( a !== a && b !== b ); // handles NaNs\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSameValueZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if two arguments are the same value.\n*\n* @module @stdlib/assert/is-same-value-zero\n*\n* @example\n* var isSameValueZero = require( '@stdlib/assert/is-same-value-zero' );\n*\n* var bool = isSameValueZero( true, true );\n* // returns true\n*\n* bool = isSameValueZero( 3.14, 3.14 );\n* // returns true\n*\n* bool = isSameValueZero( {}, {} );\n* // returns false\n*\n* bool = isSameValueZero( -0.0, -0.0 );\n* // returns true\n*\n* bool = isSameValueZero( -0.0, 0.0 );\n* // returns true\n*\n* bool = isSameValueZero( NaN, NaN );\n* // returns true\n*\n* bool = isSameValueZero( [], [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isSameValueZero = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isSameValueZero;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isSquareMatrix = require( './../../is-square-matrix' );\nvar floor = require( '@stdlib/math/base/special/floor' );\nvar isOdd = require( '@stdlib/math/base/assert/is-odd' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a skew-centrosymmetric matrix.\n*\n* ## Notes\n*\n* -   The implementation must rely on manually checking that \\\\(M_{ij} = -M_{N-i-1,N-j-1}\\\\), and, while element access is deterministic, no way exists to prevent cache misses outside of reordering the underlying matrix elements, thus incurring a larger performance penalty than just \"jumping around\" in a single pass.\n* -   Worst case scenario: O(N^2).\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a skew-centrosymmetric matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var arr = ndarray( 'generic', [ 2, 1, -1, -2 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isSkewCentrosymmetricMatrix( arr );\n* // returns true\n*\n* bool = isSkewCentrosymmetricMatrix( [] );\n* // returns false\n*/\nfunction isSkewCentrosymmetricMatrix( v ) { // eslint-disable-line id-length\n\tvar m1;\n\tvar M;\n\tvar N;\n\tvar n;\n\tvar i;\n\tvar j;\n\tif ( !isSquareMatrix( v ) ) {\n\t\treturn false;\n\t}\n\tM = v.shape[ 0 ];\n\tN = floor( M/2.0 ); // corresponds to a row index + 1\n\tm1 = M - 1;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tn = m1 - i;\n\t\tfor ( j = 0; j < M; j++ ) {\n\t\t\tif ( v.get( i, j ) !== -v.get( n, m1-j ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\tif ( isOdd( M ) ) {\n\t\t// Only need to examine the first half of the row (including the center element) due to symmetry...\n\t\tfor ( j = 0; j <= N; j++ ) {\n\t\t\tif ( v.get( i, j ) !== -v.get( N, m1-j ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSkewCentrosymmetricMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a skew-centrosymmetric matrix.\n*\n* @module @stdlib/assert/is-skew-centrosymmetric-matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var isSkewCentrosymmetricMatrix = require( '@stdlib/assert/is-skew-centrosymmetric-matrix' );\n*\n* var arr = ndarray( 'generic', [ 2, 1, -1, -2 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isSkewCentrosymmetricMatrix( arr );\n* // returns true\n*\n* bool = isSkewCentrosymmetricMatrix( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isSkewCentrosymmetricMatrix = require( './main.js' ); // eslint-disable-line id-length\n\n\n// EXPORTS //\n\nmodule.exports = isSkewCentrosymmetricMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isSquareMatrix = require( './../../is-square-matrix' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a skew-persymmetric matrix.\n*\n* ## Notes\n*\n* -   The implementation must rely on manually checking that \\\\(M_{ij} = -M_{N-j-1,N-i-1}\\\\), and, while element access is deterministic, no way exists to prevent cache misses outside of reordering the underlying matrix elements, thus incurring a larger performance penalty than just \"jumping around\" in a single pass.\n* -   Worst case scenario: O(N^2).\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a skew-persymmetric matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var arr = ndarray( 'generic', [ 1, 0, 0, -1 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isSkewPersymmetricMatrix( arr );\n* // returns true\n*\n* bool = isSkewPersymmetricMatrix( [] );\n* // returns false\n*/\nfunction isSkewPersymmetricMatrix( v ) {\n\tvar M;\n\tvar n;\n\tvar i;\n\tvar j;\n\tif ( !isSquareMatrix( v ) ) {\n\t\treturn false;\n\t}\n\tM = v.shape[ 0 ] - 1;\n\tfor ( i = 0; i < M; i++ ) {\n\t\tn = M - i;\n\t\tfor ( j = 0; j <= n; j++ ) {\n\t\t\tif ( v.get( i, j ) !== -v.get( M-j, n ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSkewPersymmetricMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a skew-persymmetric matrix.\n*\n* @module @stdlib/assert/is-skew-persymmetric-matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var isSkewPersymmetricMatrix = require( '@stdlib/assert/is-skew-persymmetric-matrix' );\n*\n* var arr = ndarray( 'generic', [ 1, 0, 0, -1 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isSkewPersymmetricMatrix( arr );\n* // returns true\n*\n* bool = isSkewPersymmetricMatrix( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isSkewPersymmetricMatrix = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isSkewPersymmetricMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isSquareMatrix = require( './../../is-square-matrix' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a skew-symmetric matrix.\n*\n* ## Notes\n*\n* -   The implementation must rely on manually checking that \\\\(M_{ij} = -M_{ji}\\\\), and, while element access is deterministic, no way exists to prevent cache misses outside of reordering the underlying matrix elements, thus incurring a larger performance penalty than just \"jumping around\" in a single pass.\n* -   Worst case scenario: O(N^2).\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a skew-symmetric matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var arr = ndarray( 'generic', [ 0, -1, 1, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isSkewSymmetricMatrix( arr );\n* // returns true\n*\n* bool = isSkewSymmetricMatrix( [] );\n* // returns false\n*/\nfunction isSkewSymmetricMatrix( v ) {\n\tvar M;\n\tvar i;\n\tvar j;\n\tif ( !isSquareMatrix( v ) ) {\n\t\treturn false;\n\t}\n\tM = v.shape[ 0 ];\n\tfor ( i = 0; i < M; i++ ) {\n\t\tfor ( j = 0; j <= i; j++ ) { // includes diagonal\n\t\t\tif ( v.get( i, j ) !== -v.get( j, i ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSkewSymmetricMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a skew-symmetric matrix.\n*\n* @module @stdlib/assert/is-skew-symmetric-matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var isSkewSymmetricMatrix = require( '@stdlib/assert/is-skew-symmetric-matrix' );\n*\n* var arr = ndarray( 'generic', [ 0, -1, 1, 0 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isSkewSymmetricMatrix( arr );\n* // returns true\n*\n* bool = isSkewSymmetricMatrix( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isSkewSymmetricMatrix = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isSkewSymmetricMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a value which is a square number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a value which is a square number\n*\n* @example\n* var bool = isSquareNumber( 4.0 );\n* // returns true\n*\n* @example\n* var bool = isSquareNumber( new Number( 4.0 ) );\n* // returns false\n*/\nfunction isSquareNumber( value ) {\n\tvar n;\n\tif ( !isInteger( value ) ) {\n\t\treturn false;\n\t}\n\tn = floor( sqrt( value ) + 0.5 );\n\treturn n*n === value;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSquareNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value which is a square number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value which is a square number\n*\n* @example\n* var bool = isSquareNumber( 4.0 );\n* // returns false\n*\n* @example\n* var bool = isSquareNumber( new Number( 4.0 ) );\n* // returns true\n*/\nfunction isSquareNumber( value ) {\n\tvar n;\n\tvar x;\n\tif ( !isInteger( value ) ) {\n\t\treturn false;\n\t}\n\tx = value.valueOf();\n\tn = floor( sqrt( x ) + 0.5 );\n\treturn n*n === x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSquareNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a square number.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a square number\n*\n* @example\n* var bool = isSquareNumber( 4.0 );\n* // returns true\n*\n* @example\n* var bool = isSquareNumber( new Number( 4.0 ) );\n* // returns true\n*\n* @example\n* var bool = isSquareNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isSquareNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isSquareNumber( null );\n* // returns false\n*/\nfunction isSquareNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSquareNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a square number.\n*\n* @module @stdlib/assert/is-square-number\n*\n* @example\n* var isSquareNumber = require( '@stdlib/assert/is-square-number' );\n*\n* var bool = isSquareNumber( 4.0 );\n* // returns true\n*\n* bool = isSquareNumber( new Number( 4.0 ) );\n* // returns true\n*\n* bool = isSquareNumber( 3.14 );\n* // returns false\n*\n* bool = isSquareNumber( -5.0 );\n* // returns false\n*\n* bool = isSquareNumber( null );\n* // returns false\n*\n* @example\n* var isSquareNumber = require( '@stdlib/assert/is-square-number' ).isPrimitive;\n*\n* var bool = isSquareNumber( 4.0 );\n* // returns true\n*\n* bool = isSquareNumber( new Number( 4.0 ) );\n* // returns false\n*\n* @example\n* var isSquareNumber = require( '@stdlib/assert/is-square-number' ).isObject;\n*\n* var bool = isSquareNumber( 4.0 );\n* // returns false\n*\n* bool = isSquareNumber( new Number( 4.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isSquareNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isSquareNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isSquareNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isSquareNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a value which is a square triangular number.\n*\n* ## Notes\n*\n* -   Return values are not reliable for numbers greater than `1125899906842624`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a value which is a square triangular number\n*\n* @example\n* var bool = isSquareTriangularNumber( 36.0 );\n* // returns true\n*\n* @example\n* var bool = isSquareTriangularNumber( new Number( 36.0 ) );\n* // returns false\n*/\nfunction isSquareTriangularNumber( value ) {\n\tvar n;\n\tvar x;\n\tif ( !isInteger( value ) ) {\n\t\treturn false;\n\t}\n\t// Test if a square number:\n\tn = floor( sqrt( value ) + 0.5 );\n\tif ( n*n !== value ) {\n\t\treturn false;\n\t}\n\t// Test if a triangular number:\n\tx = ( 8.0*value ) + 1.0;\n\tn = floor( sqrt( x ) + 0.5 );\n\treturn n*n === x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSquareTriangularNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value which is a square triangular number.\n*\n* ## Notes\n*\n* -   Return values are not reliable for numbers greater than `1125899906842624`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value which is a square triangular number\n*\n* @example\n* var bool = isSquareTriangularNumber( 36.0 );\n* // returns false\n*\n* @example\n* var bool = isSquareTriangularNumber( new Number( 36.0 ) );\n* // returns true\n*/\nfunction isSquareTriangularNumber( value ) {\n\tvar n;\n\tvar x;\n\tif ( !isInteger( value ) ) {\n\t\treturn false;\n\t}\n\t// Test if a square number:\n\tx = value.valueOf();\n\tn = floor( sqrt( x ) + 0.5 );\n\tif ( n*n !== x ) {\n\t\treturn false;\n\t}\n\t// Test if a triangular number:\n\tx = ( 8.0*x ) + 1.0;\n\tn = floor( sqrt( x ) + 0.5 );\n\treturn n*n === x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSquareTriangularNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a square triangular number.\n*\n* ## Notes\n*\n* -   Return values are not reliable for numbers greater than `1125899906842624`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a square triangular number\n*\n* @example\n* var bool = isSquareTriangularNumber( 36.0 );\n* // returns true\n*\n* @example\n* var bool = isSquareTriangularNumber( new Number( 36.0 ) );\n* // returns true\n*\n* @example\n* var bool = isSquareTriangularNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isSquareTriangularNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isSquareTriangularNumber( null );\n* // returns false\n*/\nfunction isSquareTriangularNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSquareTriangularNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a square triangular number.\n*\n* @module @stdlib/assert/is-square-triangular-number\n*\n* @example\n* var isSquareTriangularNumber = require( '@stdlib/assert/is-square-triangular-number' );\n*\n* var bool = isSquareTriangularNumber( 36.0 );\n* // returns true\n*\n* bool = isSquareTriangularNumber( new Number( 36.0 ) );\n* // returns true\n*\n* bool = isSquareTriangularNumber( 3.14 );\n* // returns false\n*\n* bool = isSquareTriangularNumber( -5.0 );\n* // returns false\n*\n* bool = isSquareTriangularNumber( null );\n* // returns false\n*\n* @example\n* var isSquareTriangularNumber = require( '@stdlib/assert/is-square-triangular-number' ).isPrimitive;\n*\n* var bool = isSquareTriangularNumber( 36.0 );\n* // returns true\n*\n* bool = isSquareTriangularNumber( new Number( 36.0 ) );\n* // returns false\n*\n* @example\n* var isSquareTriangularNumber = require( '@stdlib/assert/is-square-triangular-number' ).isObject;\n*\n* var bool = isSquareTriangularNumber( 36.0 );\n* // returns false\n*\n* bool = isSquareTriangularNumber( new Number( 36.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isSquareTriangularNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isSquareTriangularNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isSquareTriangularNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isSquareTriangularNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if two arguments are strictly equal.\n*\n* ## Notes\n*\n* -   In contrast to the strict equality operator `===`, `-0` and `+0` are distinguishable.\n*\n*\n* @param {*} a - first input value\n* @param {*} b - second input value\n* @returns {boolean} boolean indicating whether two arguments are strictly equal\n*\n* @example\n* var bool = isStrictEqual( true, true );\n* // returns true\n*\n* @example\n* var bool = isStrictEqual( 3.14, 3.14 );\n* // returns true\n*\n* @example\n* var bool = isStrictEqual( {}, {} );\n* // returns false\n*\n* @example\n* var bool = isStrictEqual( -0.0, -0.0 );\n* // returns true\n*\n* @example\n* var bool = isStrictEqual( -0.0, 0.0 );\n* // returns false\n*\n* @example\n* var bool = isStrictEqual( NaN, NaN );\n* // returns false\n*\n* @example\n* var bool = isStrictEqual( [], [] );\n* // returns false\n*/\nfunction isStrictEqual( a, b ) {\n\tif ( a === b ) {\n\t\tif ( a === 0.0 ) {\n\t\t\treturn 1.0 / a === 1.0 / b; // handles +-0\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isStrictEqual;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if two arguments are strictly equal.\n*\n* @module @stdlib/assert/is-strict-equal\n*\n* @example\n* var isStrictEqual = require( '@stdlib/assert/is-strict-equal' );\n*\n* var bool = isStrictEqual( true, true );\n* // returns true\n*\n* bool = isStrictEqual( 3.14, 3.14 );\n* // returns true\n*\n* bool = isStrictEqual( {}, {} );\n* // returns false\n*\n* bool = isStrictEqual( -0.0, -0.0 );\n* // returns true\n*\n* bool = isStrictEqual( -0.0, 0.0 );\n* // returns false\n*\n* bool = isStrictEqual( NaN, NaN );\n* // returns false\n*\n* bool = isStrictEqual( [], [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isStrictEqual = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isStrictEqual;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array of strings.\n*\n* @module @stdlib/assert/is-string-array\n*\n* @example\n* var isStringArray = require( '@stdlib/assert/is-string-array' );\n*\n* var bool = isStringArray( [ 'abc', 'def' ] );\n* // returns true\n*\n* bool = isStringArray( [ 'abc', 123 ] );\n* // returns false\n*\n* @example\n* var isStringArray = require( '@stdlib/assert/is-string-array' ).primitives;\n*\n* var bool = isStringArray( [ 'abc', 'def' ] );\n* // returns true\n*\n* bool = isStringArray( [ 'abc', new String( 'def' ) ] );\n* // returns false\n*\n* @example\n* var isStringArray = require( '@stdlib/assert/is-string-array' ).objects;\n*\n* var bool = isStringArray( [ new String( 'abc' ), new String( 'def' ) ] );\n* // returns true\n*\n* bool = isStringArray( [ new String( 'abc' ), 'def' ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-function' );\nvar isString = require( './../../is-string' );\n\n\n// MAIN //\n\nvar isStringArray = arrayfun( isString );\nsetReadOnly( isStringArray, 'primitives', arrayfun( isString.isPrimitive ) );\nsetReadOnly( isStringArray, 'objects', arrayfun( isString.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isStringArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only symbols.\n*\n* @module @stdlib/assert/is-symbol-array\n*\n* @example\n* var isSymbolArray = require( '@stdlib/assert/is-symbol-array' );\n*\n* var bool = isSymbolArray( [ Symbol( 'abc' ), Symbol( 'def' ) ] );\n* // returns true\n*\n* bool = isSymbolArray( [ Symbol( 'abc' ), 'def' ] );\n* // returns false\n*\n* @example\n* var isSymbolArray = require( '@stdlib/assert/is-symbol-array' ).primitives;\n*\n* var bool = isSymbolArray( [ Symbol( 'abc' ), Symbol( 'def' ) ] );\n* // returns true\n*\n* bool = isSymbolArray( [ Symbol( 'abc' ), Object( Symbol( 'def' ) ) ] );\n* // returns false\n*\n* @example\n* var isSymbolArray = require( '@stdlib/assert/is-symbol-array' ).objects;\n*\n* var bool = isSymbolArray( [ Object( Symbol( 'abc' ) ), Object( Symbol( 'def' ) ) ] );\n* // returns true\n*\n* bool = isSymbolArray( [ Symbol( 'abc' ), Symbol( 'def' ) ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar arrayfun = require( './../../tools/array-like-function' );\nvar isSymbol = require( './../../is-symbol' );\n\n\n// MAIN //\n\nvar isSymbolArray = arrayfun( isSymbol );\nsetReadOnly( isSymbolArray, 'primitives', arrayfun( isSymbol.isPrimitive ) );\nsetReadOnly( isSymbolArray, 'objects', arrayfun( isSymbol.isObject ) );\n\n\n// EXPORTS //\n\nmodule.exports = isSymbolArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isSquareMatrix = require( './../../is-square-matrix' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a symmetric matrix.\n*\n* ## Notes\n*\n* -   The implementation must rely on manually checking that \\\\(M_{ij} = M_{ji}\\\\), and, while element access is deterministic, no way exists to prevent cache misses outside of reordering the underlying matrix elements, thus incurring a larger performance penalty than just \"jumping around\" in a single pass.\n* -   Worst case scenario: O(N^2).\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a symmetric matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n*\n* var arr = ndarray( 'generic', [ 0, 1, 1, 2 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isSymmetricMatrix( arr );\n* // returns true\n*\n* bool = isSymmetricMatrix( [] );\n* // returns false\n*/\nfunction isSymmetricMatrix( v ) {\n\tvar M;\n\tvar i;\n\tvar j;\n\tif ( !isSquareMatrix( v ) ) {\n\t\treturn false;\n\t}\n\tM = v.shape[ 0 ];\n\tfor ( i = 0; i < M; i++ ) {\n\t\tfor ( j = 0; j < i; j++ ) {\n\t\t\tif ( v.get( i, j ) !== v.get( j, i ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSymmetricMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a symmetric matrix.\n*\n* @module @stdlib/assert/is-symmetric-matrix\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray/ctor' );\n* var isSymmetricMatrix = require( '@stdlib/assert/is-symmetric-matrix' );\n*\n* var arr = ndarray( 'generic', [ 0, 1, 1, 2 ], [ 2, 2 ], [ 2, 1 ], 0, 'row-major' );\n* var bool = isSymmetricMatrix( arr );\n* // returns true\n*\n* bool = isSymmetricMatrix( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isSymmetricMatrix = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isSymmetricMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar typeOf = require( '@stdlib/utils/type-of' );\nvar isError = require( './../../is-error' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `SyntaxError` object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a `SyntaxError` object\n*\n* @example\n* var bool = isSyntaxError( new SyntaxError( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isSyntaxError( {} );\n* // returns false\n*/\nfunction isSyntaxError( value ) {\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for `SyntaxError` objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tif ( value instanceof SyntaxError ) {\n\t\treturn true;\n\t}\n\t// All `SyntaxError` objects are `Error` objects...\n\tif ( isError( value ) ) {\n\t\t// Walk the prototype tree until we find the desired constructor...\n\t\twhile ( value ) {\n\t\t\tif ( typeOf( value ) === 'syntaxerror' ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvalue = getPrototypeOf( value );\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isSyntaxError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a `SyntaxError` object.\n*\n* @module @stdlib/assert/is-syntax-error\n*\n* @example\n* var isSyntaxError = require( '@stdlib/assert/is-syntax-error' );\n*\n* var bool = isSyntaxError( new SyntaxError( 'beep' ) );\n* // returns true\n*\n* bool = isSyntaxError( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isSyntaxError = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isSyntaxError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if the current environment is a touch device.\n*\n* @module @stdlib/assert/is-touch-device\n*\n* @example\n* var IS_TOUCH_DEVICE = require( '@stdlib/assert/is-touch-device' );\n*\n* var bool = IS_TOUCH_DEVICE;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar isTouchDevice = require( './main.js' );\n\n\n// MAIN //\n\nvar IS_TOUCH_DEVICE = isTouchDevice();\n\n\n// EXPORTS //\n\nmodule.exports = IS_TOUCH_DEVICE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils/constant-function' );\n\n\n// MAIN //\n\nvar isTouchDevice = constantFunction( false );\n\n\n// EXPORTS //\n\nmodule.exports = isTouchDevice;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number primitive having a value which is a triangular number.\n*\n* ## Notes\n*\n* -   Return values are not reliable for numbers greater than `1125899906842624`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number primitive having a value which is a triangular number\n*\n* @example\n* var bool = isTriangularNumber( 36.0 );\n* // returns true\n*\n* @example\n* var bool = isTriangularNumber( new Number( 36.0 ) );\n* // returns false\n*/\nfunction isTriangularNumber( value ) {\n\tvar n;\n\tvar x;\n\tif ( !isInteger( value ) ) {\n\t\treturn false;\n\t}\n\tx = ( 8.0*value ) + 1.0;\n\tn = floor( sqrt( x ) + 0.5 );\n\treturn n*n === x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isTriangularNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isObject;\nvar sqrt = require( '@stdlib/math/base/special/sqrt' );\nvar floor = require( '@stdlib/math/base/special/floor' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a number object having a value which is a triangular number.\n*\n* ## Notes\n*\n* -   Return values are not reliable for numbers greater than `1125899906842624`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a number object having a value which is a triangular number\n*\n* @example\n* var bool = isTriangularNumber( 36.0 );\n* // returns false\n*\n* @example\n* var bool = isTriangularNumber( new Number( 36.0 ) );\n* // returns true\n*/\nfunction isTriangularNumber( value ) {\n\tvar n;\n\tvar x;\n\tif ( !isInteger( value ) ) {\n\t\treturn false;\n\t}\n\tx = ( 8.0*value.valueOf() ) + 1.0;\n\tn = floor( sqrt( x ) + 0.5 );\n\treturn n*n === x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isTriangularNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a triangular number.\n*\n* ## Notes\n*\n* -   Return values are not reliable for numbers greater than `1125899906842624`.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a triangular number\n*\n* @example\n* var bool = isTriangularNumber( 36.0 );\n* // returns true\n*\n* @example\n* var bool = isTriangularNumber( new Number( 36.0 ) );\n* // returns true\n*\n* @example\n* var bool = isTriangularNumber( 3.14 );\n* // returns false\n*\n* @example\n* var bool = isTriangularNumber( -5.0 );\n* // returns false\n*\n* @example\n* var bool = isTriangularNumber( null );\n* // returns false\n*/\nfunction isTriangularNumber( value ) {\n\treturn ( isPrimitive( value ) || isObject( value ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isTriangularNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a triangular number.\n*\n* @module @stdlib/assert/is-triangular-number\n*\n* @example\n* var isTriangularNumber = require( '@stdlib/assert/is-triangular-number' );\n*\n* var bool = isTriangularNumber( 36.0 );\n* // returns true\n*\n* bool = isTriangularNumber( new Number( 36.0 ) );\n* // returns true\n*\n* bool = isTriangularNumber( 3.14 );\n* // returns false\n*\n* bool = isTriangularNumber( -5.0 );\n* // returns false\n*\n* bool = isTriangularNumber( null );\n* // returns false\n*\n* @example\n* var isTriangularNumber = require( '@stdlib/assert/is-triangular-number' ).isPrimitive;\n*\n* var bool = isTriangularNumber( 36.0 );\n* // returns true\n*\n* bool = isTriangularNumber( new Number( 36.0 ) );\n* // returns false\n*\n* @example\n* var isTriangularNumber = require( '@stdlib/assert/is-triangular-number' ).isObject;\n*\n* var bool = isTriangularNumber( 36.0 );\n* // returns false\n*\n* bool = isTriangularNumber( new Number( 36.0 ) );\n* // returns true\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-nonenumerable-read-only-property' );\nvar isTriangularNumber = require( './main.js' );\nvar isPrimitive = require( './primitive.js' );\nvar isObject = require( './object.js' );\n\n\n// MAIN //\n\nsetReadOnly( isTriangularNumber, 'isPrimitive', isPrimitive );\nsetReadOnly( isTriangularNumber, 'isObject', isObject );\n\n\n// EXPORTS //\n\nmodule.exports = isTriangularNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a value is truthy.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is truthy\n*\n* @example\n* var bool = isTruthy( true );\n* // returns true\n*\n* @example\n* var bool = isTruthy( [] );\n* // returns true\n*\n* @example\n* var bool = isTruthy( false );\n* // returns false\n*\n* @example\n* var bool = isTruthy( null );\n* // returns false\n*\n* @example\n* var bool = isTruthy( '' );\n* // returns false\n*\n* @example\n* var bool = isTruthy( 0 );\n* // returns false\n*\n* @example\n* var bool = isTruthy( void 0 );\n* // returns false\n*\n* @example\n* var bool = isTruthy( NaN );\n* // returns false\n*/\nfunction isTruthy( value ) {\n\treturn ( value ) ? true : false; // eslint-disable-line no-unneeded-ternary\n}\n\n\n// EXPORTS //\n\nmodule.exports = isTruthy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is truthy.\n*\n* @module @stdlib/assert/is-truthy\n*\n* @example\n* var isTruthy = require( '@stdlib/assert/is-truthy' );\n*\n* var bool = isTruthy( true );\n* // returns true\n*\n* bool = isTruthy( [] );\n* // returns true\n*\n* bool = isTruthy( false );\n* // returns false\n*\n* bool = isTruthy( null );\n* // returns false\n*\n* bool = isTruthy( '' );\n* // returns false\n*\n* bool = isTruthy( 0 );\n* // returns false\n*\n* bool = isTruthy( void 0 );\n* // returns false\n*\n* bool = isTruthy( NaN );\n* // returns false\n*/\n\n// MODULES //\n\nvar isTruthy = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isTruthy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array-like object containing only truthy values.\n*\n* @module @stdlib/assert/is-truthy-array\n*\n* @example\n* var isTruthyArray = require( '@stdlib/assert/is-truthy-array' );\n*\n* var bool = isTruthyArray( [ {}, [] ] );\n* // returns true\n*\n* bool = isTruthyArray( [ false, null, void 0, '', 0, NaN ] );\n* // returns false\n*\n* bool = isTruthyArray( [] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isTruthyArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isTruthyArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arrayfun = require( './../../tools/array-like-function' );\nvar isTruthy = require( './../../is-truthy' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array-like object containing only truthy values.\n*\n* @name isTruthyArray\n* @type {Function}\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether an input value is an array-like object containing only truthy values\n*\n* @example\n* var bool = isTruthyArray( [ {}, [] ] );\n* // returns true\n*\n* bool = isTruthyArray( [ false, null, void 0, '', 0, NaN ] );\n* // returns false\n*\n* bool = isTruthyArray( [] );\n* // returns false\n*/\nvar isTruthyArray = arrayfun( isTruthy );\n\n\n// EXPORTS //\n\nmodule.exports = isTruthyArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar typeOf = require( '@stdlib/utils/type-of' );\nvar isError = require( './../../is-error' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `TypeError` object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a `TypeError` object\n*\n* @example\n* var bool = isTypeError( new TypeError( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isTypeError( {} );\n* // returns false\n*/\nfunction isTypeError( value ) {\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for `TypeError` objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tif ( value instanceof TypeError ) {\n\t\treturn true;\n\t}\n\t// All `TypeError` objects are `Error` objects...\n\tif ( isError( value ) ) {\n\t\t// Walk the prototype tree until we find the desired constructor...\n\t\twhile ( value ) {\n\t\t\tif ( typeOf( value ) === 'typeerror' ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvalue = getPrototypeOf( value );\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isTypeError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a `TypeError` object.\n*\n* @module @stdlib/assert/is-type-error\n*\n* @example\n* var isTypeError = require( '@stdlib/assert/is-type-error' );\n*\n* var bool = isTypeError( new TypeError( 'beep' ) );\n* // returns true\n*\n* bool = isTypeError( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isTypeError = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isTypeError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( './../../is-integer' ).isPrimitive;\nvar MAX_LENGTH = require( '@stdlib/constants/array/max-typed-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a valid typed array length.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a valid typed array length\n*\n* @example\n* var bool = isTypedArrayLength( 3 );\n* // returns true\n*\n* @example\n* var bool = isTypedArrayLength( 3.14 );\n* // returns false\n*/\nfunction isTypedArrayLength( value ) {\n\treturn (\n\t\tisInteger( value ) &&\n\t\tvalue >= 0 &&\n\t\tvalue <= MAX_LENGTH\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isTypedArrayLength;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a valid typed array length.\n*\n* @module @stdlib/assert/is-typed-array-length\n*\n* @example\n* var isTypedArrayLength = require( '@stdlib/assert/is-typed-array-length' );\n*\n* var bool = isTypedArrayLength( 5 );\n* // returns true\n*\n* bool = isTypedArrayLength( 2.0e200 );\n* // returns false\n*\n* bool = isTypedArrayLength( -3.14 );\n* // returns false\n*\n* bool = isTypedArrayLength( null );\n* // returns false\n*/\n\n// MODULES //\n\nvar isTypedArrayLength = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isTypedArrayLength;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( './../../is-nonnegative-integer' ).isPrimitive;\nvar MAX = require( '@stdlib/constants/array/max-typed-array-length' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is typed-array-like.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is typed-array-like\n*\n* @example\n* var arr = {\n*\t'BYTES_PER_ELEMENT': 8,\n*\t'length': 10,\n*\t'byteOffset': 0,\n*\t'byteLength': 10\n* };\n* var val = isTypedArrayLike( arr );\n* // returns true\n*\n* @example\n* var Int8Array = require( '@stdlib/array/int8' );\n*\n* var val = isTypedArrayLike( new Int8Array( 4 ) );\n* // returns true\n*\n* @example\n* var val = isTypedArrayLike( [] );\n* // returns false\n*\n* @example\n* var val = isTypedArrayLike( {} );\n* // returns false\n*\n* @example\n* var val = isTypedArrayLike( null );\n* // returns false\n*\n* @example\n* var val = isTypedArrayLike( 'beep' );\n* // returns false\n*/\nfunction isTypedArrayLike( value ) {\n\treturn (\n\t\tvalue !== null &&\n\t\ttypeof value === 'object' &&\n\t\tisNonNegativeInteger( value.length ) &&\n\t\tvalue.length <= MAX &&\n\t\ttypeof value.BYTES_PER_ELEMENT === 'number' &&\n\t\ttypeof value.byteOffset === 'number' &&\n\t\ttypeof value.byteLength === 'number'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isTypedArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is typed-array-like.\n*\n* @module @stdlib/assert/is-typed-array-like\n*\n* @example\n* var Int16Array = require( '@stdlib/array/int16' );\n* var isTypedArrayLike = require( '@stdlib/assert/is-typed-array-like' );\n*\n* var bool = isTypedArrayLike( new Int16Array() );\n* // returns true\n*\n* bool = isTypedArrayLike({\n*\t'length': 10,\n*\t'byteOffset': 0,\n*\t'byteLength': 10,\n*\t'BYTES_PER_ELEMENT': 4\n* });\n* // returns true\n*/\n\n// MODULES //\n\nvar isTypedArrayLike = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isTypedArrayLike;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\nvar RE_UNC_PATH = require( '@stdlib/regexp/unc-path' ).REGEXP;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a UNC path.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating if a value is a UNC path\n*\n* @example\n* var bool = isUNCPath( '\\\\\\\\server\\\\share\\\\foo\\\\bar\\\\baz' );\n* // returns true\n*\n* @example\n* var bool = isUNCPath( '/foo/bar/baz' );\n* // returns false\n*/\nfunction isUNCPath( value ) {\n\treturn (\n\t\tisString( value ) &&\n\t\tRE_UNC_PATH.test( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUNCPath;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a UNC path.\n*\n* @module @stdlib/assert/is-unc-path\n*\n* @example\n* var isUNCPath = require( '@stdlib/assert/is-unc-path' );\n*\n* var bool = isUNCPath( '\\\\\\\\server\\\\share\\\\foo\\\\bar\\\\baz' );\n* // returns true\n*\n* bool = isUNCPath( '/foo/bar/baz' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUNCPath = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUNCPath;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is `undefined`.\n*\n* ## Notes\n*\n* -   In older browsers, `undefined` is a global which can be overridden. `void`, however, is an operator which **cannot** be overridden. Consequently, better to use `void` to check for `undefined`. See [Stack Overflow][1].\n*\n* [1]: http://stackoverflow.com/a/19369078/2225624\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is undefined\n*\n* @example\n* var bool = isUndefined( undefined );\n* // returns true\n*\n* bool = isUndefined( null );\n* // returns false\n*/\nfunction isUndefined( value ) {\n\treturn value === void 0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUndefined;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is `undefined`.\n*\n* @module @stdlib/assert/is-undefined\n*\n* @example\n* var isUndefined = require( '@stdlib/assert/is-undefined' );\n*\n* var bool = isUndefined( void 0 );\n* // returns true\n*\n* bool = isUndefined( null );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUndefined = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUndefined;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Tests if a value is `undefined` or `null`.\n*\n* ## Notes\n*\n* -   In older browsers, `undefined` is a global which can be overridden. `void`, however, is an operator which **cannot** be overridden. Consequently, better to use `void` to check for `undefined`. See [Stack Overflow][1].\n*\n* [1]: http://stackoverflow.com/a/19369078/2225624\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is undefined\n*\n* @example\n* var bool = isUndefinedOrNull( undefined );\n* // returns true\n*\n* bool = isUndefinedOrNull( null );\n* // returns true\n*\n* bool = isUndefinedOrNull( false );\n* // returns false\n*/\nfunction isUndefinedOrNull( value ) {\n\treturn ( value === void 0 || value === null );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUndefinedOrNull;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is `undefined` or `null`.\n*\n* @module @stdlib/assert/is-undefined-or-null\n*\n* @example\n* var isUndefinedOrNull = require( '@stdlib/assert/is-undefined-or-null' );\n*\n* var bool = isUndefinedOrNull( void 0 );\n* // returns true\n*\n* bool = isUndefinedOrNull( null );\n* // returns true\n*\n* bool = isUndefinedOrNull( false );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUndefinedOrNull = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUndefinedOrNull;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isTypedArray = require( './../../is-typed-array' );\nvar isArray = require( './../../is-array' );\nvar isNumber = require( './../../is-number' ).isPrimitive;\nvar absdiff = require( '@stdlib/math/base/utils/absolute-difference' );\nvar FLOAT64_SQRT_EPS = require( '@stdlib/constants/float64/sqrt-eps' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is an array of probabilities that sum to one.\n*\n* @param {*} v - value to test\n* @returns {boolean} boolean indicating if a value is a probability array\n*\n* @example\n* var bool = isUnityProbabilityArray( [ 0.25, 0.5, 0.25 ] );\n* // returns true\n*\n* @example\n* var bool = isUnityProbabilityArray( new Uint8Array( [ 0, 1 ] ) );\n* // returns true\n*\n* @example\n* var bool = isUnityProbabilityArray( [ 0.4, 0.4, 0.4 ] );\n* // returns false\n*\n* @example\n* var bool = isUnityProbabilityArray( [ 3.14, 0.0 ] );\n* // returns false\n*/\nfunction isUnityProbabilityArray( v ) {\n\tvar sum;\n\tvar i;\n\tif ( isArray( v ) ) {\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < v.length; i++ ) {\n\t\t\tif (\n\t\t\t\t!isNumber( v[ i ] ) ||\n\t\t\t\tv[ i ] > 1.0 ||\n\t\t\t\tv[ i ] < 0.0\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tsum += v[ i ];\n\t\t}\n\t\treturn ( absdiff( sum, 1.0 ) <= FLOAT64_SQRT_EPS );\n\t}\n\tif ( isTypedArray( v ) ) {\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < v.length; i++ ) {\n\t\t\tif (\n\t\t\t\tv[ i ] > 1.0 ||\n\t\t\t\tv[ i ] < 0.0\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tsum += v[ i ];\n\t\t}\n\t\treturn ( absdiff( sum, 1.0 ) <= FLOAT64_SQRT_EPS );\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUnityProbabilityArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an array of probabilities that sum to one.\n*\n* @module @stdlib/assert/is-unity-probability-array\n*\n* @example\n* var isUnityProbabilityArray = require( '@stdlib/assert/is-unity-probability-array' );\n*\n* var bool = isUnityProbabilityArray( [ 0.25, 0.5, 0.25 ] );\n* // returns true\n*\n* bool = isUnityProbabilityArray( new Uint8Array( [ 0, 1 ] ) );\n* // returns true\n*\n* bool = isUnityProbabilityArray( [ 0.4, 0.4, 0.4 ] );\n* // returns false\n*\n* bool = isUnityProbabilityArray( [ 3.14, 0.0 ] );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUnityProbabilityArray = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUnityProbabilityArray;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lowercase = require( '@stdlib/string/lowercase' );\nvar uppercase = require( '@stdlib/string/uppercase' );\nvar isString = require( './../../is-string' ).isPrimitive;\n\n\n// MAIN //\n\n/**\n* Tests if a value is an uppercase string.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is an uppercase string\n*\n* @example\n* var bool = isUppercase( 'HELLO' );\n* // returns true\n*\n* @example\n* var bool = isUppercase( 'World' );\n* // returns false\n*\n* @example\n* var bool = isUppercase( '!' );\n* // returns false\n*\n* @example\n* var bool = isUppercase( 'salt and light' );\n* // returns false\n*/\nfunction isUppercase( value ) {\n\treturn (\n\t\tisString( value ) &&\n\t\tvalue === uppercase( value ) &&\n\t\tvalue !== lowercase( value )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isUppercase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is an uppercase string.\n*\n* @module @stdlib/assert/is-uppercase\n*\n* @example\n* var isUppercase = require( '@stdlib/assert/is-uppercase' );\n*\n* var bool = isUppercase( 'HELLO' );\n* // returns true\n*\n* bool = isUppercase( 'World' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isUppercase = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isUppercase;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getPrototypeOf = require( '@stdlib/utils/get-prototype-of' );\nvar typeOf = require( '@stdlib/utils/type-of' );\nvar isError = require( './../../is-error' );\n\n\n// MAIN //\n\n/**\n* Tests if a value is a `URIError` object.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether a value is a `URIError` object\n*\n* @example\n* var bool = isURIError( new URIError( 'beep' ) );\n* // returns true\n*\n* @example\n* var bool = isURIError( {} );\n* // returns false\n*/\nfunction isURIError( value ) {\n\tif ( typeof value !== 'object' || value === null ) {\n\t\treturn false;\n\t}\n\t// Check for `URIError` objects from the same realm (same Node.js `vm` or same `Window` object)...\n\tif ( value instanceof URIError ) {\n\t\treturn true;\n\t}\n\t// All `URIError` objects are `Error` objects...\n\tif ( isError( value ) ) {\n\t\t// Walk the prototype tree until we find the desired constructor...\n\t\twhile ( value ) {\n\t\t\tif ( typeOf( value ) === 'urierror' ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvalue = getPrototypeOf( value );\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isURIError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-new-func */\n\n'use strict';\n\n// VARIABLES //\n\nvar scope;\n\n\n// FUNCTIONS //\n\n/**\n* Test if the global scope is bound to the \"self\" variable present in browser web worker environments. When creating a new function using the `Function(){}` constructor, the execution scope aliased by the `this` variable is the global scope.\n*\n* @private\n* @returns {boolean} boolean indicating if global scope is bound to \"self\" variable\n*/\nfunction globalScope() {\n\tvar fcn = '';\n\tfcn += 'try {';\n\tfcn += 'return this === self;';\n\tfcn += '} catch ( err ) {';\n\tfcn += 'return false;';\n\tfcn += '}';\n\treturn (new Function( fcn ))();\n}\n\n\n// MAIN //\n\nscope = globalScope();\n\n\n// EXPORTS //\n\nmodule.exports = scope;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a `URIError` object.\n*\n* @module @stdlib/assert/is-uri-error\n*\n* @example\n* var isURIError = require( '@stdlib/assert/is-uri-error' );\n*\n* var bool = isURIError( new URIError( 'beep' ) );\n* // returns true\n*\n* bool = isURIError( {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar isURIError = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isURIError;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* global WorkerGlobalScope, WorkerNavigator, WorkerLocation, self, importScripts, navigator, location */\n\n'use strict';\n\n// MODULES //\n\nvar getGlobal = require( '@stdlib/utils/global' );\nvar IS_NODE = require( './../../is-node' );\nvar isObject = require( './../../is-plain-object' );\nvar globalScope = require( './global_scope.js' );\n\n\n// VARIABLES //\n\nvar Global = getGlobal();\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if the runtime is a web worker.\n*\n* @returns {boolean} boolean indicating if runtime is a web worker\n*\n* @example\n* var bool = isWebWorker();\n* // returns <boolean>\n*/\nfunction isWebWorker() {\n\treturn (\n\t\t// Check that we are not running in a Node.js runtime:\n\t\tIS_NODE === false &&\n\n\t\t// Check for presence of `WorkerGlobalScope` global variable:\n\t\ttypeof WorkerGlobalScope === 'object' &&\n\n\t\t// Check for presence of `WorkerNavigator` global variable:\n\t\tisObject( WorkerNavigator ) &&\n\n\t\t// Check that the `navigator` global object is an instance of `WorkerNavigator`:\n\t\tnavigator instanceof WorkerNavigator &&\n\n\t\t// Check for presence of `WorkerLocation` global variable:\n\t\tisObject( WorkerLocation ) &&\n\n\t\t// Check that the `location` global object is an instance of `WorkerLocation`:\n\t\tlocation instanceof WorkerLocation &&\n\n\t\t// Check for presence of `self` variable:\n\t\ttypeof self === 'object' &&\n\n\t\t// Check that the `self` variable matches the determined global variable:\n\t\tself === Global &&\n\n\t\t// Check that the `self` variable is equal to the global scope:\n\t\tglobalScope === true &&\n\n\t\t// Check for presence of `importScripts` function:\n\t\ttypeof importScripts === 'function'\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isWebWorker;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if the runtime is a web worker.\n*\n* @module @stdlib/assert/is-web-worker\n*\n* @example\n* var IS_WEB_WORKER = require( '@stdlib/assert/is-web-worker' );\n*\n* var bool = IS_WEB_WORKER;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar isWebWorker = require( './main.js' );\n\n\n// MAIN //\n\nvar bool = isWebWorker();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( './../../is-string' ).isPrimitive;\nvar reWhitespace = require( '@stdlib/regexp/whitespace' );\n\n\n// VARIABLES //\n\nvar RE = new RegExp( '^'+reWhitespace.REGEXP.source+'+$' );\n\n\n// MAIN //\n\n/**\n* Tests whether a string contains only white space characters.\n*\n* @param {*} x - value to test\n* @returns {boolean} boolean indicating if a string contains only white space characters\n*\n* @example\n* var out = isWhitespace( '           ' );\n* // returns true\n*\n* @example\n* var out = isWhitespace( 'beep boop' );\n* // returns false\n*\n* @example\n* var out = isWhitespace( '' );\n* // returns false\n*\n* @example\n* var out = isWhitespace( 123 );\n* // returns false\n*/\nfunction isWhitespace( x ) {\n\tif ( !isString( x ) ) {\n\t\treturn false;\n\t}\n\treturn RE.test( x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isWhitespace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a string contains only white space characters.\n*\n* @module @stdlib/assert/is-whitespace\n*\n* @example\n* var isWhitespace = require( '@stdlib/assert/is-whitespace' );\n*\n* var out = isWhitespace( '          ' );\n* // returns true\n*\n* out = isWhitespace( 'beep boop' );\n* // returns false\n*\n* out = isWhitespace( '' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isWhitespace = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isWhitespace;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptor = require( '@stdlib/utils/property-descriptor' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is writable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is writable\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': 'beep'\n* });\n*\n* var bool = isWritableProperty( obj, 'boop' );\n* // returns true\n*\n* bool = isWritableProperty( obj, 'beep' );\n* // returns false\n*/\nfunction isWritableProperty( value, property ) {\n\tvar desc = propertyDescriptor( value, property );\n\treturn (\n\t\tdesc !== null &&\n\t\t(\n\t\t\tdesc.writable === true ||\n\t\t\ttypeof desc.set === 'function'\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isWritableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own property is writable.\n*\n* @module @stdlib/assert/is-writable-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isWritableProperty = require( '@stdlib/assert/is-writable-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': 'beep'\n* });\n*\n* var bool = isWritableProperty( obj, 'boop' );\n* // returns true\n*\n* bool = isWritableProperty( obj, 'beep' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isWritableProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isWritableProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptorIn = require( '@stdlib/utils/property-descriptor-in' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own or inherited property is writable.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is writable\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': 'beep'\n* });\n*\n* var bool = isWritablePropertyIn( obj, 'boop' );\n* // returns true\n*\n* bool = isWritablePropertyIn( obj, 'beep' );\n* // returns false\n*/\nfunction isWritablePropertyIn( value, property ) {\n\tvar desc = propertyDescriptorIn( value, property );\n\treturn (\n\t\tdesc !== null &&\n\t\t(\n\t\t\tdesc.writable === true ||\n\t\t\ttypeof desc.set === 'function'\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isWritablePropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own or inherited property is writable.\n*\n* @module @stdlib/assert/is-writable-property-in\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isWritablePropertyIn = require( '@stdlib/assert/is-writable-property-in' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': false,\n*     'writable': false,\n*     'value': 'beep'\n* });\n*\n* var bool = isWritablePropertyIn( obj, 'boop' );\n* // returns true\n*\n* bool = isWritablePropertyIn( obj, 'beep' );\n* // returns false\n*/\n\n// MODULES //\n\nvar isWritablePropertyIn = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isWritablePropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptor = require( '@stdlib/utils/property-descriptor' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own property is write-only.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is write-only\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function setter( v ) {\n*     obj.boop = v;\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'set': setter\n* });\n*\n* var bool = isWriteOnlyProperty( obj, 'boop' );\n* // returns false\n*\n* bool = isWriteOnlyProperty( obj, 'beep' );\n* // returns true\n*/\nfunction isWriteOnlyProperty( value, property ) {\n\tvar desc = propertyDescriptor( value, property );\n\treturn (\n\t\tdesc !== null &&\n\t\tdesc.configurable === false &&\n\t\t(\n\t\t\ttypeof desc.set === 'function' &&\n\t\t\tdesc.get === void 0\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isWriteOnlyProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own property is write-only.\n*\n* @module @stdlib/assert/is-write-only-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isWriteOnlyProperty = require( '@stdlib/assert/is-write-only-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function setter( v ) {\n*     obj.boop = v;\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'set': setter\n* });\n*\n* var bool = isWriteOnlyProperty( obj, 'boop' );\n* // returns false\n*\n* bool = isWriteOnlyProperty( obj, 'beep' );\n* // returns true\n*/\n\n// MODULES //\n\nvar isWriteOnlyProperty = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isWriteOnlyProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar propertyDescriptorIn = require( '@stdlib/utils/property-descriptor-in' );\n\n\n// MAIN //\n\n/**\n* Tests if an object's own or inherited property is write-only.\n*\n* @param {*} value - value to test\n* @param {*} property - property to test\n* @returns {boolean} boolean indicating if an object property is write-only\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function setter( v ) {\n*     obj.boop = v;\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'set': setter\n* });\n*\n* var bool = isWriteOnlyPropertyIn( obj, 'boop' );\n* // returns false\n*\n* bool = isWriteOnlyPropertyIn( obj, 'beep' );\n* // returns true\n*/\nfunction isWriteOnlyPropertyIn( value, property ) {\n\tvar desc = propertyDescriptorIn( value, property );\n\treturn (\n\t\tdesc !== null &&\n\t\tdesc.configurable === false &&\n\t\t(\n\t\t\ttypeof desc.set === 'function' &&\n\t\t\tdesc.get === void 0\n\t\t)\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isWriteOnlyPropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an object's own or inherited property is write-only.\n*\n* @module @stdlib/assert/is-write-only-property-in\n*\n* @example\n* var defineProperty = require( '@stdlib/utils/define-property' );\n* var isWriteOnlyPropertyIn = require( '@stdlib/assert/is-write-only-property-in' );\n*\n* var obj = {\n*     'boop': true\n* };\n*\n* function setter( v ) {\n*     obj.boop = v;\n* }\n*\n* defineProperty( obj, 'beep', {\n*     'configurable': false,\n*     'enumerable': true,\n*     'set': setter\n* });\n*\n* var bool = isWriteOnlyPropertyIn( obj, 'boop' );\n* // returns false\n*\n* bool = isWriteOnlyPropertyIn( obj, 'beep' );\n* // returns true\n*/\n\n// MODULES //\n\nvar isWriteOnlyPropertyIn = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isWriteOnlyPropertyIn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name contains\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/contains}\n*/\nsetReadOnly( ns, 'contains', require( './../contains' ) );\n\n/**\n* @name deepEqual\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/deep-equal}\n*/\nsetReadOnly( ns, 'deepEqual', require( './../deep-equal' ) );\n\n/**\n* @name deepHasOwnProp\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/deep-has-own-property}\n*/\nsetReadOnly( ns, 'deepHasOwnProp', require( './../deep-has-own-property' ) );\n\n/**\n* @name deepHasProp\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/deep-has-property}\n*/\nsetReadOnly( ns, 'deepHasProp', require( './../deep-has-property' ) );\n\n/**\n* @name hasArrayBufferSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-arraybuffer-support}\n*/\nsetReadOnly( ns, 'hasArrayBufferSupport', require( './../has-arraybuffer-support' ) );\n\n/**\n* @name hasArrowFunctionSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-arrow-function-support}\n*/\nsetReadOnly( ns, 'hasArrowFunctionSupport', require( './../has-arrow-function-support' ) );\n\n/**\n* @name hasAsyncAwaitSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-async-await-support}\n*/\nsetReadOnly( ns, 'hasAsyncAwaitSupport', require( './../has-async-await-support' ) );\n\n/**\n* @name hasAsyncIteratorSymbolSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-async-iterator-symbol-support}\n*/\nsetReadOnly( ns, 'hasAsyncIteratorSymbolSupport', require( './../has-async-iterator-symbol-support' ) );\n\n/**\n* @name hasBigIntSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-bigint-support}\n*/\nsetReadOnly( ns, 'hasBigIntSupport', require( './../has-bigint-support' ) );\n\n/**\n* @name hasBigInt64ArraySupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-bigint64array-support}\n*/\nsetReadOnly( ns, 'hasBigInt64ArraySupport', require( './../has-bigint64array-support' ) );\n\n/**\n* @name hasBigUint64ArraySupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-biguint64array-support}\n*/\nsetReadOnly( ns, 'hasBigUint64ArraySupport', require( './../has-biguint64array-support' ) );\n\n/**\n* @name hasClassSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-class-support}\n*/\nsetReadOnly( ns, 'hasClassSupport', require( './../has-class-support' ) );\n\n/**\n* @name hasDataViewSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-dataview-support}\n*/\nsetReadOnly( ns, 'hasDataViewSupport', require( './../has-dataview-support' ) );\n\n/**\n* @name hasDefinePropertiesSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-define-properties-support}\n*/\nsetReadOnly( ns, 'hasDefinePropertiesSupport', require( './../has-define-properties-support' ) );\n\n/**\n* @name hasDefinePropertySupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-define-property-support}\n*/\nsetReadOnly( ns, 'hasDefinePropertySupport', require( './../has-define-property-support' ) );\n\n/**\n* @name hasFloat32ArraySupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-float32array-support}\n*/\nsetReadOnly( ns, 'hasFloat32ArraySupport', require( './../has-float32array-support' ) );\n\n/**\n* @name hasFloat64ArraySupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-float64array-support}\n*/\nsetReadOnly( ns, 'hasFloat64ArraySupport', require( './../has-float64array-support' ) );\n\n/**\n* @name hasFunctionNameSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-function-name-support}\n*/\nsetReadOnly( ns, 'hasFunctionNameSupport', require( './../has-function-name-support' ) );\n\n/**\n* @name hasGeneratorSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-generator-support}\n*/\nsetReadOnly( ns, 'hasGeneratorSupport', require( './../has-generator-support' ) );\n\n/**\n* @name hasGlobalThisSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-globalthis-support}\n*/\nsetReadOnly( ns, 'hasGlobalThisSupport', require( './../has-globalthis-support' ) );\n\n/**\n* @name hasInt8ArraySupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-int8array-support}\n*/\nsetReadOnly( ns, 'hasInt8ArraySupport', require( './../has-int8array-support' ) );\n\n/**\n* @name hasInt16ArraySupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-int16array-support}\n*/\nsetReadOnly( ns, 'hasInt16ArraySupport', require( './../has-int16array-support' ) );\n\n/**\n* @name hasInt32ArraySupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-int32array-support}\n*/\nsetReadOnly( ns, 'hasInt32ArraySupport', require( './../has-int32array-support' ) );\n\n/**\n* @name hasIteratorSymbolSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-iterator-symbol-support}\n*/\nsetReadOnly( ns, 'hasIteratorSymbolSupport', require( './../has-iterator-symbol-support' ) );\n\n/**\n* @name hasMapSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-map-support}\n*/\nsetReadOnly( ns, 'hasMapSupport', require( './../has-map-support' ) );\n\n/**\n* @name hasNodeBufferSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-node-buffer-support}\n*/\nsetReadOnly( ns, 'hasNodeBufferSupport', require( './../has-node-buffer-support' ) );\n\n/**\n* @name hasOwnProp\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-own-property}\n*/\nsetReadOnly( ns, 'hasOwnProp', require( './../has-own-property' ) );\n\n/**\n* @name hasProp\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-property}\n*/\nsetReadOnly( ns, 'hasProp', require( './../has-property' ) );\n\n/**\n* @name hasProxySupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-proxy-support}\n*/\nsetReadOnly( ns, 'hasProxySupport', require( './../has-proxy-support' ) );\n\n/**\n* @name hasSetSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-set-support}\n*/\nsetReadOnly( ns, 'hasSetSupport', require( './../has-set-support' ) );\n\n/**\n* @name hasSharedArrayBufferSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-sharedarraybuffer-support}\n*/\nsetReadOnly( ns, 'hasSharedArrayBufferSupport', require( './../has-sharedarraybuffer-support' ) );\n\n/**\n* @name hasSymbolSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-symbol-support}\n*/\nsetReadOnly( ns, 'hasSymbolSupport', require( './../has-symbol-support' ) );\n\n/**\n* @name hasToStringTagSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-tostringtag-support}\n*/\nsetReadOnly( ns, 'hasToStringTagSupport', require( './../has-tostringtag-support' ) );\n\n/**\n* @name hasUint8ArraySupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-uint8array-support}\n*/\nsetReadOnly( ns, 'hasUint8ArraySupport', require( './../has-uint8array-support' ) );\n\n/**\n* @name hasUint8ClampedArraySupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-uint8clampedarray-support}\n*/\nsetReadOnly( ns, 'hasUint8ClampedArraySupport', require( './../has-uint8clampedarray-support' ) );\n\n/**\n* @name hasUint16ArraySupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-uint16array-support}\n*/\nsetReadOnly( ns, 'hasUint16ArraySupport', require( './../has-uint16array-support' ) );\n\n/**\n* @name hasUint32ArraySupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-uint32array-support}\n*/\nsetReadOnly( ns, 'hasUint32ArraySupport', require( './../has-uint32array-support' ) );\n\n/**\n* @name hasUTF16SurrogatePairAt\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-utf16-surrogate-pair-at}\n*/\nsetReadOnly( ns, 'hasUTF16SurrogatePairAt', require( './../has-utf16-surrogate-pair-at' ) );\n\n/**\n* @name hasWebAssemblySupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-wasm-support}\n*/\nsetReadOnly( ns, 'hasWebAssemblySupport', require( './../has-wasm-support' ) );\n\n/**\n* @name hasWeakMapSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-weakmap-support}\n*/\nsetReadOnly( ns, 'hasWeakMapSupport', require( './../has-weakmap-support' ) );\n\n/**\n* @name hasWeakSetSupport\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/has-weakset-support}\n*/\nsetReadOnly( ns, 'hasWeakSetSupport', require( './../has-weakset-support' ) );\n\n/**\n* @name instanceOf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/instance-of}\n*/\nsetReadOnly( ns, 'instanceOf', require( './../instance-of' ) );\n\n/**\n* @name isAbsoluteHttpURI\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-absolute-http-uri}\n*/\nsetReadOnly( ns, 'isAbsoluteHttpURI', require( './../is-absolute-http-uri' ) );\n\n/**\n* @name isAbsolutePath\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-absolute-path}\n*/\nsetReadOnly( ns, 'isAbsolutePath', require( './../is-absolute-path' ) );\n\n/**\n* @name isAbsoluteURI\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-absolute-uri}\n*/\nsetReadOnly( ns, 'isAbsoluteURI', require( './../is-absolute-uri' ) );\n\n/**\n* @name isAccessorProperty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-accessor-property}\n*/\nsetReadOnly( ns, 'isAccessorProperty', require( './../is-accessor-property' ) );\n\n/**\n* @name isAccessorPropertyIn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-accessor-property-in}\n*/\nsetReadOnly( ns, 'isAccessorPropertyIn', require( './../is-accessor-property-in' ) );\n\n/**\n* @name isAlphagram\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-alphagram}\n*/\nsetReadOnly( ns, 'isAlphagram', require( './../is-alphagram' ) );\n\n/**\n* @name isAlphaNumeric\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-alphanumeric}\n*/\nsetReadOnly( ns, 'isAlphaNumeric', require( './../is-alphanumeric' ) );\n\n/**\n* @name isAnagram\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-anagram}\n*/\nsetReadOnly( ns, 'isAnagram', require( './../is-anagram' ) );\n\n/**\n* @name isArguments\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-arguments}\n*/\nsetReadOnly( ns, 'isArguments', require( './../is-arguments' ) );\n\n/**\n* @name isArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-array}\n*/\nsetReadOnly( ns, 'isArray', require( './../is-array' ) );\n\n/**\n* @name isArrayArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-array-array}\n*/\nsetReadOnly( ns, 'isArrayArray', require( './../is-array-array' ) );\n\n/**\n* @name isArrayLength\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-array-length}\n*/\nsetReadOnly( ns, 'isArrayLength', require( './../is-array-length' ) );\n\n/**\n* @name isArrayLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-array-like}\n*/\nsetReadOnly( ns, 'isArrayLike', require( './../is-array-like' ) );\n\n/**\n* @name isArrayLikeObject\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-array-like-object}\n*/\nsetReadOnly( ns, 'isArrayLikeObject', require( './../is-array-like-object' ) );\n\n/**\n* @name isArrayBuffer\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-arraybuffer}\n*/\nsetReadOnly( ns, 'isArrayBuffer', require( './../is-arraybuffer' ) );\n\n/**\n* @name isArrayBufferView\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-arraybuffer-view}\n*/\nsetReadOnly( ns, 'isArrayBufferView', require( './../is-arraybuffer-view' ) );\n\n/**\n* @name isArrowFunction\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-arrow-function}\n*/\nsetReadOnly( ns, 'isArrowFunction', require( './../is-arrow-function' ) );\n\n/**\n* @name isASCII\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-ascii}\n*/\nsetReadOnly( ns, 'isASCII', require( './../is-ascii' ) );\n\n/**\n* @name isBetween\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-between}\n*/\nsetReadOnly( ns, 'isBetween', require( './../is-between' ) );\n\n/**\n* @name isBetweenArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-between-array}\n*/\nsetReadOnly( ns, 'isBetweenArray', require( './../is-between-array' ) );\n\n/**\n* @name IS_BIG_ENDIAN\n* @memberof ns\n* @readonly\n* @type {boolean}\n* @see {@link module:@stdlib/assert/is-big-endian}\n*/\nsetReadOnly( ns, 'IS_BIG_ENDIAN', require( './../is-big-endian' ) );\n\n/**\n* @name isBigInt\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-bigint}\n*/\nsetReadOnly( ns, 'isBigInt', require( './../is-bigint' ) );\n\n/**\n* @name isBigInt64Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-bigint64array}\n*/\nsetReadOnly( ns, 'isBigInt64Array', require( './../is-bigint64array' ) );\n\n/**\n* @name isBigUint64Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-biguint64array}\n*/\nsetReadOnly( ns, 'isBigUint64Array', require( './../is-biguint64array' ) );\n\n/**\n* @name isBinaryString\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-binary-string}\n*/\nsetReadOnly( ns, 'isBinaryString', require( './../is-binary-string' ) );\n\n/**\n* @name isBlankString\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-blank-string}\n*/\nsetReadOnly( ns, 'isBlankString', require( './../is-blank-string' ) );\n\n/**\n* @name isBoolean\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-boolean}\n*/\nsetReadOnly( ns, 'isBoolean', require( './../is-boolean' ) );\n\n/**\n* @name isBooleanArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-boolean-array}\n*/\nsetReadOnly( ns, 'isBooleanArray', require( './../is-boolean-array' ) );\n\n/**\n* @name isBoxedPrimitive\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-boxed-primitive}\n*/\nsetReadOnly( ns, 'isBoxedPrimitive', require( './../is-boxed-primitive' ) );\n\n/**\n* @name IS_BROWSER\n* @memberof ns\n* @readonly\n* @type {boolean}\n* @see {@link module:@stdlib/assert/is-browser}\n*/\nsetReadOnly( ns, 'IS_BROWSER', require( './../is-browser' ) );\n\n/**\n* @name isBuffer\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-buffer}\n*/\nsetReadOnly( ns, 'isBuffer', require( './../is-buffer' ) );\n\n/**\n* @name isCapitalized\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-capitalized}\n*/\nsetReadOnly( ns, 'isCapitalized', require( './../is-capitalized' ) );\n\n/**\n* @name isCentrosymmetricMatrix\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-centrosymmetric-matrix}\n*/\nsetReadOnly( ns, 'isCentrosymmetricMatrix', require( './../is-centrosymmetric-matrix' ) );\n\n/**\n* @name isCircular\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-circular}\n*/\nsetReadOnly( ns, 'isCircular', require( './../is-circular' ) );\n\n/**\n* @name isCircularArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-circular-array}\n*/\nsetReadOnly( ns, 'isCircularArray', require( './../is-circular-array' ) );\n\n/**\n* @name isCircularPlainObject\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-circular-plain-object}\n*/\nsetReadOnly( ns, 'isCircularPlainObject', require( './../is-circular-plain-object' ) );\n\n/**\n* @name isClass\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-class}\n*/\nsetReadOnly( ns, 'isClass', require( './../is-class' ) );\n\n/**\n* @name isCollection\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-collection}\n*/\nsetReadOnly( ns, 'isCollection', require( './../is-collection' ) );\n\n/**\n* @name isComplex\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-complex}\n*/\nsetReadOnly( ns, 'isComplex', require( './../is-complex' ) );\n\n/**\n* @name isComplexLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-complex-like}\n*/\nsetReadOnly( ns, 'isComplexLike', require( './../is-complex-like' ) );\n\n/**\n* @name isComplexTypedArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-complex-typed-array}\n*/\nsetReadOnly( ns, 'isComplexTypedArray', require( './../is-complex-typed-array' ) );\n\n/**\n* @name isComplexTypedArrayLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-complex-typed-array-like}\n*/\nsetReadOnly( ns, 'isComplexTypedArrayLike', require( './../is-complex-typed-array-like' ) );\n\n/**\n* @name isComplex64\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-complex64}\n*/\nsetReadOnly( ns, 'isComplex64', require( './../is-complex64' ) );\n\n/**\n* @name isComplex64Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-complex64array}\n*/\nsetReadOnly( ns, 'isComplex64Array', require( './../is-complex64array' ) );\n\n/**\n* @name isComplex128\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-complex128}\n*/\nsetReadOnly( ns, 'isComplex128', require( './../is-complex128' ) );\n\n/**\n* @name isComplex128Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-complex128array}\n*/\nsetReadOnly( ns, 'isComplex128Array', require( './../is-complex128array' ) );\n\n/**\n* @name isComposite\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-composite}\n*/\nsetReadOnly( ns, 'isComposite', require( './../is-composite' ) );\n\n/**\n* @name isConfigurableProperty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-configurable-property}\n*/\nsetReadOnly( ns, 'isConfigurableProperty', require( './../is-configurable-property' ) );\n\n/**\n* @name isConfigurablePropertyIn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-configurable-property-in}\n*/\nsetReadOnly( ns, 'isConfigurablePropertyIn', require( './../is-configurable-property-in' ) );\n\n/**\n* @name isCubeNumber\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-cube-number}\n*/\nsetReadOnly( ns, 'isCubeNumber', require( './../is-cube-number' ) );\n\n/**\n* @name IS_DARWIN\n* @memberof ns\n* @readonly\n* @type {boolean}\n* @see {@link module:@stdlib/assert/is-darwin}\n*/\nsetReadOnly( ns, 'IS_DARWIN', require( './../is-darwin' ) );\n\n/**\n* @name isDataProperty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-data-property}\n*/\nsetReadOnly( ns, 'isDataProperty', require( './../is-data-property' ) );\n\n/**\n* @name isDataPropertyIn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-data-property-in}\n*/\nsetReadOnly( ns, 'isDataPropertyIn', require( './../is-data-property-in' ) );\n\n/**\n* @name isDataView\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-dataview}\n*/\nsetReadOnly( ns, 'isDataView', require( './../is-dataview' ) );\n\n/**\n* @name isDateObject\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-date-object}\n*/\nsetReadOnly( ns, 'isDateObject', require( './../is-date-object' ) );\n\n/**\n* @name isDigitString\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-digit-string}\n*/\nsetReadOnly( ns, 'isDigitString', require( './../is-digit-string' ) );\n\n/**\n* @name IS_DOCKER\n* @memberof ns\n* @readonly\n* @type {boolean}\n* @see {@link module:@stdlib/assert/is-docker}\n*/\nsetReadOnly( ns, 'IS_DOCKER', require( './../is-docker' ) );\n\n/**\n* @name IS_ELECTRON\n* @memberof ns\n* @readonly\n* @type {boolean}\n* @see {@link module:@stdlib/assert/is-electron}\n*/\nsetReadOnly( ns, 'IS_ELECTRON', require( './../is-electron' ) );\n\n/**\n* @name IS_ELECTRON_MAIN\n* @memberof ns\n* @readonly\n* @type {boolean}\n* @see {@link module:@stdlib/assert/is-electron-main}\n*/\nsetReadOnly( ns, 'IS_ELECTRON_MAIN', require( './../is-electron-main' ) );\n\n/**\n* @name IS_ELECTRON_RENDERER\n* @memberof ns\n* @readonly\n* @type {boolean}\n* @see {@link module:@stdlib/assert/is-electron-renderer}\n*/\nsetReadOnly( ns, 'IS_ELECTRON_RENDERER', require( './../is-electron-renderer' ) );\n\n/**\n* @name isEmailAddress\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-email-address}\n*/\nsetReadOnly( ns, 'isEmailAddress', require( './../is-email-address' ) );\n\n/**\n* @name isEmptyArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-empty-array}\n*/\nsetReadOnly( ns, 'isEmptyArray', require( './../is-empty-array' ) );\n\n/**\n* @name isEmptyArrayLikeObject\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-empty-array-like-object}\n*/\nsetReadOnly( ns, 'isEmptyArrayLikeObject', require( './../is-empty-array-like-object' ) );\n\n/**\n* @name isEmptyCollection\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-empty-collection}\n*/\nsetReadOnly( ns, 'isEmptyCollection', require( './../is-empty-collection' ) );\n\n/**\n* @name isEmptyObject\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-empty-object}\n*/\nsetReadOnly( ns, 'isEmptyObject', require( './../is-empty-object' ) );\n\n/**\n* @name isEmptyString\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-empty-string}\n*/\nsetReadOnly( ns, 'isEmptyString', require( './../is-empty-string' ) );\n\n/**\n* @name isEnumerableProperty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-enumerable-property}\n*/\nsetReadOnly( ns, 'isEnumerableProperty', require( './../is-enumerable-property' ) );\n\n/**\n* @name isEnumerablePropertyIn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-enumerable-property-in}\n*/\nsetReadOnly( ns, 'isEnumerablePropertyIn', require( './../is-enumerable-property-in' ) );\n\n/**\n* @name isError\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-error}\n*/\nsetReadOnly( ns, 'isError', require( './../is-error' ) );\n\n/**\n* @name isEvalError\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-eval-error}\n*/\nsetReadOnly( ns, 'isEvalError', require( './../is-eval-error' ) );\n\n/**\n* @name isEven\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-even}\n*/\nsetReadOnly( ns, 'isEven', require( './../is-even' ) );\n\n/**\n* @name isFalsy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-falsy}\n*/\nsetReadOnly( ns, 'isFalsy', require( './../is-falsy' ) );\n\n/**\n* @name isFalsyArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-falsy-array}\n*/\nsetReadOnly( ns, 'isFalsyArray', require( './../is-falsy-array' ) );\n\n/**\n* @name isFinite\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-finite}\n*/\nsetReadOnly( ns, 'isFinite', require( './../is-finite' ) );\n\n/**\n* @name isFiniteArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-finite-array}\n*/\nsetReadOnly( ns, 'isFiniteArray', require( './../is-finite-array' ) );\n\n/**\n* @name isFloat32Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-float32array}\n*/\nsetReadOnly( ns, 'isFloat32Array', require( './../is-float32array' ) );\n\n/**\n* @name isFloat32MatrixLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-float32matrix-like}\n*/\nsetReadOnly( ns, 'isFloat32MatrixLike', require( './../is-float32matrix-like' ) );\n\n/**\n* @name isFloat32ndarrayLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-float32ndarray-like}\n*/\nsetReadOnly( ns, 'isFloat32ndarrayLike', require( './../is-float32ndarray-like' ) );\n\n/**\n* @name isFloat32VectorLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-float32vector-like}\n*/\nsetReadOnly( ns, 'isFloat32VectorLike', require( './../is-float32vector-like' ) );\n\n/**\n* @name isFloat64Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-float64array}\n*/\nsetReadOnly( ns, 'isFloat64Array', require( './../is-float64array' ) );\n\n/**\n* @name isFloat64MatrixLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-float64matrix-like}\n*/\nsetReadOnly( ns, 'isFloat64MatrixLike', require( './../is-float64matrix-like' ) );\n\n/**\n* @name isFloat64ndarrayLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-float64ndarray-like}\n*/\nsetReadOnly( ns, 'isFloat64ndarrayLike', require( './../is-float64ndarray-like' ) );\n\n/**\n* @name isFloat64VectorLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-float64vector-like}\n*/\nsetReadOnly( ns, 'isFloat64VectorLike', require( './../is-float64vector-like' ) );\n\n/**\n* @name isFunction\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-function}\n*/\nsetReadOnly( ns, 'isFunction', require( './../is-function' ) );\n\n/**\n* @name isFunctionArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-function-array}\n*/\nsetReadOnly( ns, 'isFunctionArray', require( './../is-function-array' ) );\n\n/**\n* @name isGeneratorObject\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-generator-object}\n*/\nsetReadOnly( ns, 'isGeneratorObject', require( './../is-generator-object' ) );\n\n/**\n* @name isGeneratorObjectLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-generator-object-like}\n*/\nsetReadOnly( ns, 'isGeneratorObjectLike', require( './../is-generator-object-like' ) );\n\n/**\n* @name isgzipBuffer\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-gzip-buffer}\n*/\nsetReadOnly( ns, 'isgzipBuffer', require( './../is-gzip-buffer' ) );\n\n/**\n* @name isHexString\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-hex-string}\n*/\nsetReadOnly( ns, 'isHexString', require( './../is-hex-string' ) );\n\n/**\n* @name isInfinite\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-infinite}\n*/\nsetReadOnly( ns, 'isInfinite', require( './../is-infinite' ) );\n\n/**\n* @name isInheritedProperty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-inherited-property}\n*/\nsetReadOnly( ns, 'isInheritedProperty', require( './../is-inherited-property' ) );\n\n/**\n* @name isInt8Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-int8array}\n*/\nsetReadOnly( ns, 'isInt8Array', require( './../is-int8array' ) );\n\n/**\n* @name isInt16Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-int16array}\n*/\nsetReadOnly( ns, 'isInt16Array', require( './../is-int16array' ) );\n\n/**\n* @name isInt32Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-int32array}\n*/\nsetReadOnly( ns, 'isInt32Array', require( './../is-int32array' ) );\n\n/**\n* @name isInteger\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-integer}\n*/\nsetReadOnly( ns, 'isInteger', require( './../is-integer' ) );\n\n/**\n* @name isIntegerArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-integer-array}\n*/\nsetReadOnly( ns, 'isIntegerArray', require( './../is-integer-array' ) );\n\n/**\n* @name isIterableLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-iterable-like}\n*/\nsetReadOnly( ns, 'isIterableLike', require( './../is-iterable-like' ) );\n\n/**\n* @name isIteratorLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-iterator-like}\n*/\nsetReadOnly( ns, 'isIteratorLike', require( './../is-iterator-like' ) );\n\n/**\n* @name isJSON\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-json}\n*/\nsetReadOnly( ns, 'isJSON', require( './../is-json' ) );\n\n/**\n* @name isLeapYear\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-leap-year}\n*/\nsetReadOnly( ns, 'isLeapYear', require( './../is-leap-year' ) );\n\n/**\n* @name IS_LITTLE_ENDIAN\n* @memberof ns\n* @readonly\n* @type {boolean}\n* @see {@link module:@stdlib/assert/is-little-endian}\n*/\nsetReadOnly( ns, 'IS_LITTLE_ENDIAN', require( './../is-little-endian' ) );\n\n/**\n* @name isLocalhost\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-localhost}\n*/\nsetReadOnly( ns, 'isLocalhost', require( './../is-localhost' ) );\n\n/**\n* @name isLowercase\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-lowercase}\n*/\nsetReadOnly( ns, 'isLowercase', require( './../is-lowercase' ) );\n\n/**\n* @name isMatrixLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-matrix-like}\n*/\nsetReadOnly( ns, 'isMatrixLike', require( './../is-matrix-like' ) );\n\n/**\n* @name isMethod\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-method}\n*/\nsetReadOnly( ns, 'isMethod', require( './../is-method' ) );\n\n/**\n* @name isMethodIn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-method-in}\n*/\nsetReadOnly( ns, 'isMethodIn', require( './../is-method-in' ) );\n\n/**\n* @name IS_MOBILE\n* @memberof ns\n* @readonly\n* @type {boolean}\n* @see {@link module:@stdlib/assert/is-mobile}\n*/\nsetReadOnly( ns, 'IS_MOBILE', require( './../is-mobile' ) );\n\n/**\n* @name isNamedTypedTupleLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-named-typed-tuple-like}\n*/\nsetReadOnly( ns, 'isNamedTypedTupleLike', require( './../is-named-typed-tuple-like' ) );\n\n/**\n* @name isnan\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-nan}\n*/\nsetReadOnly( ns, 'isnan', require( './../is-nan' ) );\n\n/**\n* @name isNaNArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-nan-array}\n*/\nsetReadOnly( ns, 'isNaNArray', require( './../is-nan-array' ) );\n\n/**\n* @name isNativeFunction\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-native-function}\n*/\nsetReadOnly( ns, 'isNativeFunction', require( './../is-native-function' ) );\n\n/**\n* @name isndarrayLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-ndarray-like}\n*/\nsetReadOnly( ns, 'isndarrayLike', require( './../is-ndarray-like' ) );\n\n/**\n* @name isNegativeInteger\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-negative-integer}\n*/\nsetReadOnly( ns, 'isNegativeInteger', require( './../is-negative-integer' ) );\n\n/**\n* @name isNegativeIntegerArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-negative-integer-array}\n*/\nsetReadOnly( ns, 'isNegativeIntegerArray', require( './../is-negative-integer-array' ) );\n\n/**\n* @name isNegativeNumber\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-negative-number}\n*/\nsetReadOnly( ns, 'isNegativeNumber', require( './../is-negative-number' ) );\n\n/**\n* @name isNegativeNumberArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-negative-number-array}\n*/\nsetReadOnly( ns, 'isNegativeNumberArray', require( './../is-negative-number-array' ) );\n\n/**\n* @name isNegativeZero\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-negative-zero}\n*/\nsetReadOnly( ns, 'isNegativeZero', require( './../is-negative-zero' ) );\n\n/**\n* @name IS_NODE\n* @memberof ns\n* @readonly\n* @type {boolean}\n* @see {@link module:@stdlib/assert/is-node}\n*/\nsetReadOnly( ns, 'IS_NODE', require( './../is-node' ) );\n\n/**\n* @name isNodeBuiltin\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-node-builtin}\n*/\nsetReadOnly( ns, 'isNodeBuiltin', require( './../is-node-builtin' ) );\n\n/**\n* @name isNodeDuplexStreamLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-node-duplex-stream-like}\n*/\nsetReadOnly( ns, 'isNodeDuplexStreamLike', require( './../is-node-duplex-stream-like' ) );\n\n/**\n* @name isNodeReadableStreamLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-node-readable-stream-like}\n*/\nsetReadOnly( ns, 'isNodeReadableStreamLike', require( './../is-node-readable-stream-like' ) );\n\n/**\n* @name isNodeREPL\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-node-repl}\n*/\nsetReadOnly( ns, 'isNodeREPL', require( './../is-node-repl' ) );\n\n/**\n* @name isNodeStreamLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-node-stream-like}\n*/\nsetReadOnly( ns, 'isNodeStreamLike', require( './../is-node-stream-like' ) );\n\n/**\n* @name isNodeTransformStreamLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-node-transform-stream-like}\n*/\nsetReadOnly( ns, 'isNodeTransformStreamLike', require( './../is-node-transform-stream-like' ) );\n\n/**\n* @name isNodeWritableStreamLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-node-writable-stream-like}\n*/\nsetReadOnly( ns, 'isNodeWritableStreamLike', require( './../is-node-writable-stream-like' ) );\n\n/**\n* @name isNonConfigurableProperty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-nonconfigurable-property}\n*/\nsetReadOnly( ns, 'isNonConfigurableProperty', require( './../is-nonconfigurable-property' ) );\n\n/**\n* @name isNonConfigurablePropertyIn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-nonconfigurable-property-in}\n*/\nsetReadOnly( ns, 'isNonConfigurablePropertyIn', require( './../is-nonconfigurable-property-in' ) );\n\n/**\n* @name isNonEnumerableProperty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-nonenumerable-property}\n*/\nsetReadOnly( ns, 'isNonEnumerableProperty', require( './../is-nonenumerable-property' ) );\n\n/**\n* @name isNonEnumerablePropertyIn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-nonenumerable-property-in}\n*/\nsetReadOnly( ns, 'isNonEnumerablePropertyIn', require( './../is-nonenumerable-property-in' ) );\n\n/**\n* @name isNonNegativeInteger\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-nonnegative-integer}\n*/\nsetReadOnly( ns, 'isNonNegativeInteger', require( './../is-nonnegative-integer' ) );\n\n/**\n* @name isNonNegativeIntegerArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-nonnegative-integer-array}\n*/\nsetReadOnly( ns, 'isNonNegativeIntegerArray', require( './../is-nonnegative-integer-array' ) );\n\n/**\n* @name isNonNegativeNumber\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-nonnegative-number}\n*/\nsetReadOnly( ns, 'isNonNegativeNumber', require( './../is-nonnegative-number' ) );\n\n/**\n* @name isNonNegativeNumberArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-nonnegative-number-array}\n*/\nsetReadOnly( ns, 'isNonNegativeNumberArray', require( './../is-nonnegative-number-array' ) );\n\n/**\n* @name isNonPositiveInteger\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-nonpositive-integer}\n*/\nsetReadOnly( ns, 'isNonPositiveInteger', require( './../is-nonpositive-integer' ) );\n\n/**\n* @name isNonPositiveIntegerArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-nonpositive-integer-array}\n*/\nsetReadOnly( ns, 'isNonPositiveIntegerArray', require( './../is-nonpositive-integer-array' ) );\n\n/**\n* @name isNonPositiveNumber\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-nonpositive-number}\n*/\nsetReadOnly( ns, 'isNonPositiveNumber', require( './../is-nonpositive-number' ) );\n\n/**\n* @name isNonPositiveNumberArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-nonpositive-number-array}\n*/\nsetReadOnly( ns, 'isNonPositiveNumberArray', require( './../is-nonpositive-number-array' ) );\n\n/**\n* @name isNonSymmetricMatrix\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-nonsymmetric-matrix}\n*/\nsetReadOnly( ns, 'isNonSymmetricMatrix', require( './../is-nonsymmetric-matrix' ) );\n\n/**\n* @name isNull\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-null}\n*/\nsetReadOnly( ns, 'isNull', require( './../is-null' ) );\n\n/**\n* @name isNullArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-null-array}\n*/\nsetReadOnly( ns, 'isNullArray', require( './../is-null-array' ) );\n\n/**\n* @name isNumber\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-number}\n*/\nsetReadOnly( ns, 'isNumber', require( './../is-number' ) );\n\n/**\n* @name isNumberArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-number-array}\n*/\nsetReadOnly( ns, 'isNumberArray', require( './../is-number-array' ) );\n\n/**\n* @name isNumericArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-numeric-array}\n*/\nsetReadOnly( ns, 'isNumericArray', require( './../is-numeric-array' ) );\n\n/**\n* @name isObject\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-object}\n*/\nsetReadOnly( ns, 'isObject', require( './../is-object' ) );\n\n/**\n* @name isObjectArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-object-array}\n*/\nsetReadOnly( ns, 'isObjectArray', require( './../is-object-array' ) );\n\n/**\n* @name isObjectLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-object-like}\n*/\nsetReadOnly( ns, 'isObjectLike', require( './../is-object-like' ) );\n\n/**\n* @name isOdd\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-odd}\n*/\nsetReadOnly( ns, 'isOdd', require( './../is-odd' ) );\n\n/**\n* @name isPersymmetricMatrix\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-persymmetric-matrix}\n*/\nsetReadOnly( ns, 'isPersymmetricMatrix', require( './../is-persymmetric-matrix' ) );\n\n/**\n* @name isPlainObject\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-plain-object}\n*/\nsetReadOnly( ns, 'isPlainObject', require( './../is-plain-object' ) );\n\n/**\n* @name isPlainObjectArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-plain-object-array}\n*/\nsetReadOnly( ns, 'isPlainObjectArray', require( './../is-plain-object-array' ) );\n\n/**\n* @name isPositiveInteger\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-positive-integer}\n*/\nsetReadOnly( ns, 'isPositiveInteger', require( './../is-positive-integer' ) );\n\n/**\n* @name isPositiveIntegerArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-positive-integer-array}\n*/\nsetReadOnly( ns, 'isPositiveIntegerArray', require( './../is-positive-integer-array' ) );\n\n/**\n* @name isPositiveNumber\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-positive-number}\n*/\nsetReadOnly( ns, 'isPositiveNumber', require( './../is-positive-number' ) );\n\n/**\n* @name isPositiveNumberArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-positive-number-array}\n*/\nsetReadOnly( ns, 'isPositiveNumberArray', require( './../is-positive-number-array' ) );\n\n/**\n* @name isPositiveZero\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-positive-zero}\n*/\nsetReadOnly( ns, 'isPositiveZero', require( './../is-positive-zero' ) );\n\n/**\n* @name isPrime\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-prime}\n*/\nsetReadOnly( ns, 'isPrime', require( './../is-prime' ) );\n\n/**\n* @name isPrimitive\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-primitive}\n*/\nsetReadOnly( ns, 'isPrimitive', require( './../is-primitive' ) );\n\n/**\n* @name isPrimitiveArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-primitive-array}\n*/\nsetReadOnly( ns, 'isPrimitiveArray', require( './../is-primitive-array' ) );\n\n/**\n* @name isPRNGLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-prng-like}\n*/\nsetReadOnly( ns, 'isPRNGLike', require( './../is-prng-like' ) );\n\n/**\n* @name isProbability\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-probability}\n*/\nsetReadOnly( ns, 'isProbability', require( './../is-probability' ) );\n\n/**\n* @name isProbabilityArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-probability-array}\n*/\nsetReadOnly( ns, 'isProbabilityArray', require( './../is-probability-array' ) );\n\n/**\n* @name isPropertyKey\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-property-key}\n*/\nsetReadOnly( ns, 'isPropertyKey', require( './../is-property-key' ) );\n\n/**\n* @name isPrototypeOf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-prototype-of}\n*/\nsetReadOnly( ns, 'isPrototypeOf', require( './../is-prototype-of' ) );\n\n/**\n* @name isRangeError\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-range-error}\n*/\nsetReadOnly( ns, 'isRangeError', require( './../is-range-error' ) );\n\n/**\n* @name isReadOnlyProperty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-read-only-property}\n*/\nsetReadOnly( ns, 'isReadOnlyProperty', require( './../is-read-only-property' ) );\n\n/**\n* @name isReadOnlyPropertyIn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-read-only-property-in}\n*/\nsetReadOnly( ns, 'isReadOnlyPropertyIn', require( './../is-read-only-property-in' ) );\n\n/**\n* @name isReadWriteProperty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-read-write-property}\n*/\nsetReadOnly( ns, 'isReadWriteProperty', require( './../is-read-write-property' ) );\n\n/**\n* @name isReadWritePropertyIn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-read-write-property-in}\n*/\nsetReadOnly( ns, 'isReadWritePropertyIn', require( './../is-read-write-property-in' ) );\n\n/**\n* @name isReadableProperty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-readable-property}\n*/\nsetReadOnly( ns, 'isReadableProperty', require( './../is-readable-property' ) );\n\n/**\n* @name isReadablePropertyIn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-readable-property-in}\n*/\nsetReadOnly( ns, 'isReadablePropertyIn', require( './../is-readable-property-in' ) );\n\n/**\n* @name isReferenceError\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-reference-error}\n*/\nsetReadOnly( ns, 'isReferenceError', require( './../is-reference-error' ) );\n\n/**\n* @name isRegExp\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-regexp}\n*/\nsetReadOnly( ns, 'isRegExp', require( './../is-regexp' ) );\n\n/**\n* @name isRegExpString\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-regexp-string}\n*/\nsetReadOnly( ns, 'isRegExpString', require( './../is-regexp-string' ) );\n\n/**\n* @name isRelativePath\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-relative-path}\n*/\nsetReadOnly( ns, 'isRelativePath', require( './../is-relative-path' ) );\n\n/**\n* @name isRelativeURI\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-relative-uri}\n*/\nsetReadOnly( ns, 'isRelativeURI', require( './../is-relative-uri' ) );\n\n/**\n* @name isSafeInteger\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-safe-integer}\n*/\nsetReadOnly( ns, 'isSafeInteger', require( './../is-safe-integer' ) );\n\n/**\n* @name isSafeIntegerArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-safe-integer-array}\n*/\nsetReadOnly( ns, 'isSafeIntegerArray', require( './../is-safe-integer-array' ) );\n\n/**\n* @name isSameNativeClass\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-same-native-class}\n*/\nsetReadOnly( ns, 'isSameNativeClass', require( './../is-same-native-class' ) );\n\n/**\n* @name isSameType\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-same-type}\n*/\nsetReadOnly( ns, 'isSameType', require( './../is-same-type' ) );\n\n/**\n* @name isSameValue\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-same-value}\n*/\nsetReadOnly( ns, 'isSameValue', require( './../is-same-value' ) );\n\n/**\n* @name isSameValueZero\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-same-value-zero}\n*/\nsetReadOnly( ns, 'isSameValueZero', require( './../is-same-value-zero' ) );\n\n/**\n* @name isSharedArrayBuffer\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-sharedarraybuffer}\n*/\nsetReadOnly( ns, 'isSharedArrayBuffer', require( './../is-sharedarraybuffer' ) );\n\n/**\n* @name isSkewCentrosymmetricMatrix\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-skew-centrosymmetric-matrix}\n*/\nsetReadOnly( ns, 'isSkewCentrosymmetricMatrix', require( './../is-skew-centrosymmetric-matrix' ) );\n\n/**\n* @name isSkewPersymmetricMatrix\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-skew-persymmetric-matrix}\n*/\nsetReadOnly( ns, 'isSkewPersymmetricMatrix', require( './../is-skew-persymmetric-matrix' ) );\n\n/**\n* @name isSkewSymmetricMatrix\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-skew-symmetric-matrix}\n*/\nsetReadOnly( ns, 'isSkewSymmetricMatrix', require( './../is-skew-symmetric-matrix' ) );\n\n/**\n* @name isSquareMatrix\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-square-matrix}\n*/\nsetReadOnly( ns, 'isSquareMatrix', require( './../is-square-matrix' ) );\n\n/**\n* @name isSquareNumber\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-square-number}\n*/\nsetReadOnly( ns, 'isSquareNumber', require( './../is-square-number' ) );\n\n/**\n* @name isSquareTriangularNumber\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-square-triangular-number}\n*/\nsetReadOnly( ns, 'isSquareTriangularNumber', require( './../is-square-triangular-number' ) );\n\n/**\n* @name isStrictEqual\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-strict-equal}\n*/\nsetReadOnly( ns, 'isStrictEqual', require( './../is-strict-equal' ) );\n\n/**\n* @name isString\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-string}\n*/\nsetReadOnly( ns, 'isString', require( './../is-string' ) );\n\n/**\n* @name isStringArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-string-array}\n*/\nsetReadOnly( ns, 'isStringArray', require( './../is-string-array' ) );\n\n/**\n* @name isSymbol\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-symbol}\n*/\nsetReadOnly( ns, 'isSymbol', require( './../is-symbol' ) );\n\n/**\n* @name isSymbolArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-symbol-array}\n*/\nsetReadOnly( ns, 'isSymbolArray', require( './../is-symbol-array' ) );\n\n/**\n* @name isSymmetricMatrix\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-symmetric-matrix}\n*/\nsetReadOnly( ns, 'isSymmetricMatrix', require( './../is-symmetric-matrix' ) );\n\n/**\n* @name isSyntaxError\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-syntax-error}\n*/\nsetReadOnly( ns, 'isSyntaxError', require( './../is-syntax-error' ) );\n\n/**\n* @name IS_TOUCH_DEVICE\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-touch-device}\n*/\nsetReadOnly( ns, 'IS_TOUCH_DEVICE', require( './../is-touch-device' ) );\n\n/**\n* @name isTriangularNumber\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-triangular-number}\n*/\nsetReadOnly( ns, 'isTriangularNumber', require( './../is-triangular-number' ) );\n\n/**\n* @name isTruthy\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-truthy}\n*/\nsetReadOnly( ns, 'isTruthy', require( './../is-truthy' ) );\n\n/**\n* @name isTruthyArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-truthy-array}\n*/\nsetReadOnly( ns, 'isTruthyArray', require( './../is-truthy-array' ) );\n\n/**\n* @name isTypeError\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-type-error}\n*/\nsetReadOnly( ns, 'isTypeError', require( './../is-type-error' ) );\n\n/**\n* @name isTypedArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-typed-array}\n*/\nsetReadOnly( ns, 'isTypedArray', require( './../is-typed-array' ) );\n\n/**\n* @name isTypedArrayLength\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-typed-array-length}\n*/\nsetReadOnly( ns, 'isTypedArrayLength', require( './../is-typed-array-length' ) );\n\n/**\n* @name isTypedArrayLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-typed-array-like}\n*/\nsetReadOnly( ns, 'isTypedArrayLike', require( './../is-typed-array-like' ) );\n\n/**\n* @name isUint8Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-uint8array}\n*/\nsetReadOnly( ns, 'isUint8Array', require( './../is-uint8array' ) );\n\n/**\n* @name isUint8ClampedArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-uint8clampedarray}\n*/\nsetReadOnly( ns, 'isUint8ClampedArray', require( './../is-uint8clampedarray' ) );\n\n/**\n* @name isUint16Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-uint16array}\n*/\nsetReadOnly( ns, 'isUint16Array', require( './../is-uint16array' ) );\n\n/**\n* @name isUint32Array\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-uint32array}\n*/\nsetReadOnly( ns, 'isUint32Array', require( './../is-uint32array' ) );\n\n/**\n* @name isUNCPath\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-unc-path}\n*/\nsetReadOnly( ns, 'isUNCPath', require( './../is-unc-path' ) );\n\n/**\n* @name isUndefined\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-undefined}\n*/\nsetReadOnly( ns, 'isUndefined', require( './../is-undefined' ) );\n\n/**\n* @name isUndefinedOrNull\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-undefined-or-null}\n*/\nsetReadOnly( ns, 'isUndefinedOrNull', require( './../is-undefined-or-null' ) );\n\n/**\n* @name isUnityProbabilityArray\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-unity-probability-array}\n*/\nsetReadOnly( ns, 'isUnityProbabilityArray', require( './../is-unity-probability-array' ) );\n\n/**\n* @name isUppercase\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-uppercase}\n*/\nsetReadOnly( ns, 'isUppercase', require( './../is-uppercase' ) );\n\n/**\n* @name isURI\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-uri}\n*/\nsetReadOnly( ns, 'isURI', require( './../is-uri' ) );\n\n/**\n* @name isURIError\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-uri-error}\n*/\nsetReadOnly( ns, 'isURIError', require( './../is-uri-error' ) );\n\n/**\n* @name isVectorLike\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-vector-like}\n*/\nsetReadOnly( ns, 'isVectorLike', require( './../is-vector-like' ) );\n\n/**\n* @name IS_WEB_WORKER\n* @memberof ns\n* @readonly\n* @type {boolean}\n* @see {@link module:@stdlib/assert/is-web-worker}\n*/\nsetReadOnly( ns, 'IS_WEB_WORKER', require( './../is-web-worker' ) );\n\n/**\n* @name isWhitespace\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-whitespace}\n*/\nsetReadOnly( ns, 'isWhitespace', require( './../is-whitespace' ) );\n\n/**\n* @name IS_WINDOWS\n* @memberof ns\n* @readonly\n* @type {boolean}\n* @see {@link module:@stdlib/assert/is-windows}\n*/\nsetReadOnly( ns, 'IS_WINDOWS', require( './../is-windows' ) );\n\n/**\n* @name isWritableProperty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-writable-property}\n*/\nsetReadOnly( ns, 'isWritableProperty', require( './../is-writable-property' ) );\n\n/**\n* @name isWritablePropertyIn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-writable-property-in}\n*/\nsetReadOnly( ns, 'isWritablePropertyIn', require( './../is-writable-property-in' ) );\n\n/**\n* @name isWriteOnlyProperty\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-write-only-property}\n*/\nsetReadOnly( ns, 'isWriteOnlyProperty', require( './../is-write-only-property' ) );\n\n/**\n* @name isWriteOnlyPropertyIn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/assert/is-write-only-property-in}\n*/\nsetReadOnly( ns, 'isWriteOnlyPropertyIn', require( './../is-write-only-property-in' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n"],"names":["isInteger","require$$0","MAX_LENGTH","require$$1","lib","value","length","primitive","Symbol","FLG","toStringTag","toString","prototype","nativeClass","Number","require$$2","test","call","err","object","isPrimitive","isObject","setReadOnly","isNumber","require$$3","PINF","NINF","isInt","integer","valueOf","String","isString","isNan","isnan","isCollection","format","require$$4","val","searchValue","position","len","pos","i","TypeError","arguments","Error","indexOf","getDay","Date","getPrototypeOf","Array","isArray","predicate","isObjectLike","_isBuffer","constructor","isBuffer","exec","RegExp","objectKeys","isDate","isError","isRegExp","require$$5","main","deepEqual","a","b","aKeys","bKeys","typeA","typeB","key","getTime","source","flags","message","name","sort","typeOf","has","Object","hasOwnProperty","property","isFunction","hasOwnProp","objectPrototype","proto","isPrototypeOf","obj","ownProps","validate_1","opts","options","sep","v","props","copy","validate","defaults","require$$6","factory_1","path","isStr","split","deepHasOwnProp","hasProp","deepHasProp","hasArrayBuffer","ArrayBuffer","isArrayBuffer","Float64Array","GlobalArrayBuffer","bool","view","buf","isView","NaN","byteLength","evil","asyncIterator","Global","BigInt","hasBigInt64Array","BigInt64Array","isSymbol","constantFunction","isBigInt","polyfill","isBigInt64Array","GlobalBigInt64Array","arr","hasBigUint64Array","BigUint64Array","isBigUint64Array","GlobalBigUint64Array","hasDataView","DataView","isDataView","GlobalDataView","getFloat64","setFloat64","buffer","byteOffset","defineProperties","x","defineProperty","hasFloat32Array","Float32Array","isFloat32Array","GlobalFloat32Array","hasFloat64Array","isFloat64Array","GlobalFloat64Array","foo","globalThis","setTimeout","hasInt8Array","Int8Array","isInt8Array","INT8_MAX","INT8_MIN","GlobalInt8Array","hasInt16Array","Int16Array","isInt16Array","INT16_MAX","INT16_MIN","GlobalInt16Array","hasInt32Array","Int32Array","isInt32Array","INT32_MAX","INT32_MIN","GlobalInt32Array","iterator","GlobalMap","Map","map","set","get","Buffer","module","exports","GlobalBuffer","from","GlobalSet","Set","add","hasSharedArrayBuffer","SharedArrayBuffer","isSharedArrayBuffer","GlobalSharedArrayBuffer","b1","b2","slice","hasUint8Array","Uint8Array","isUint8Array","UINT8_MAX","GlobalUint8Array","hasUint8ClampedArray","Uint8ClampedArray","isUint8ClampedArray","GlobalUint8ClampedArray","hasUint16Array","Uint16Array","isUint16Array","UINT16_MAX","GlobalUint16Array","hasUint32Array","Uint32Array","isUint32Array","UINT32_MAX","GlobalUint32Array","isNonNegativeInteger","str","ch1","ch2","RangeError","charCodeAt","WebAssembly","GlobalWeakMap","WeakMap","wm","GlobalWeakSet","WeakSet","ws","RE_URI","RE_ILLEGALS","RE_HEX1","RE_HEX2","RE_PATH","RE_SCHEME","authority","scheme","parts","match","toLowerCase","isURI","RE_HTTPS","posix","isAbsolutePath","isAbsolutePathWin32","code","propertyDescriptor","desc","propertyDescriptorIn","ch","lowercase","replace","RE_NON_ALPHANUMERIC","ascending","join","isArguments","detect_1","detect","native","propertyIsEnumerable","isEnum","hasStringEnumBug","isEnumerableProperty","MAX_ARRAY_LENGTH","no_arraybuffer","ctorName","fcnName","CTORS","require$$8","require$$7","NAMES","TypedArray","Dummy","isTypedArray","noArraybuffer","RE_ARROW_FUNCTION","fcn2str","Function","left","right","uint16view","ctors","uint16","uint8","RE","REGEXP","Boolean","isBoolean","isArrayLike","arrayfun","isBooleanArray","toStr","proc","require","getGlobal","globalScope","global","versions","node","release","scope","isNode","fcn","IS_NODE","window","isBrowser","uppercase","ndarray","data","shape","strides","offset","order","ndims","dtype","isndarrayLike","isMatrixLike","isSquareMatrix","floor","isOdd","m1","M","N","n","j","type","contains","seen","isCircObj","keys","push","pop","isCircular","isPlainObject","RE_CLASS","Complex128","Complex64","constructorName","re","im","BYTES_PER_ELEMENT","Complex64Array","Complex128Array","iscomposite","isComposite","configurable","cbrt","isCubeNumber","writable","readFile","sync","exists","OPTS","encoding","file","isDocker","process","electron","chrome","isElectron","isElectronMain","isElectronRenderer","getOwnPropertySymbols","isEmptyString","enumerable","EvalError","isEven","isfinite","isFinite","isFiniteArray","isVectorLike","hasGenerators","next","return","throw","isinf","isInfinite","isIntegerArray","t","ITERATOR","isIteratorLike","f","JSON","parse","isDateObject","yr","getFullYear","isLittleEndian","RE_LOCALHOST_IPV4","isMobile","fieldOf","findField","ind2key","key2ind","lastFieldOf","subtuple","isNaNArray","reNativeFunction","isNegativeInteger","isNegativeIntegerArray","isNegativeNumber","isNegativeNumberArray","isNegativeZero","BUILTINS","LIST","builtinModules","on","once","emit","addListener","removeListener","removeAllListeners","pipe","isNodeStreamLike","_write","_writableState","_read","_readableState","isNodeWritableStreamLike","isNodeReadableStreamLike","p","stacktrace","stack","RE_MODULE_ID","RE_ERROR_STACK","m","id","parent","isNodeDuplexStreamLike","_transform","isNonNegativeIntegerArray","isNonNegativeNumber","isNonNegativeNumberArray","isNonPositiveInteger","isNonPositiveIntegerArray","isNonPositiveNumber","isNonPositiveNumberArray","isNumberArray","primitives","isPositiveInteger","isPositiveIntegerArray","isPositiveNumber","isPositiveNumberArray","isPositiveZero","isprime","isPrime","NAME","isProbability","isProbabilityArray","isProtoOf","ReferenceError","win32","isRelativePath","isRelativePathWin32","isSafeInt","isSafeInteger","isSafeIntegerArray","sqrt","isSquareNumber","isSquareTriangularNumber","isStringArray","isSymbolArray","SyntaxError","isTouchDevice","isTriangularNumber","MAX","RE_UNC_PATH","absdiff","FLOAT64_SQRT_EPS","sum","URIError","WorkerGlobalScope","WorkerNavigator","navigator","WorkerLocation","location","self","importScripts","isWebWorker","ns","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","require$$35","require$$36","require$$37","require$$38","require$$39","require$$40","require$$41","require$$42","require$$43","require$$44","require$$45","require$$46","require$$47","require$$48","require$$49","require$$50","require$$51","require$$52","require$$53","require$$54","require$$55","require$$56","require$$57","require$$58","require$$59","require$$60","require$$61","require$$62","require$$63","require$$64","require$$65","require$$66","require$$67","require$$68","require$$69","require$$70","require$$71","require$$72","require$$73","require$$74","require$$75","require$$76","require$$77","require$$78","require$$79","require$$80","require$$81","require$$82","require$$83","require$$84","require$$85","require$$86","require$$87","require$$88","require$$89","require$$90","require$$91","require$$92","require$$93","require$$94","require$$95","require$$96","require$$97","require$$98","require$$99","require$$100","require$$101","require$$102","require$$103","require$$104","require$$105","require$$106","require$$107","require$$108","require$$109","require$$110","require$$111","require$$112","require$$113","require$$114","require$$115","require$$116","require$$117","require$$118","require$$119","require$$120","require$$121","require$$122","require$$123","require$$124","require$$125","require$$126","require$$127","require$$128","require$$129","require$$130","require$$131","require$$132","require$$133","require$$134","require$$135","require$$136","require$$137","require$$138","require$$139","require$$140","require$$141","require$$142","require$$143","require$$144","require$$145","require$$146","require$$147","require$$148","require$$149","require$$150","require$$151","require$$152","require$$153","require$$154","require$$155","require$$156","require$$157","require$$158","require$$159","require$$160","require$$161","require$$162","require$$163","require$$164","require$$165","require$$166","require$$167","require$$168","require$$169","require$$170","require$$171","require$$172","require$$173","require$$174","require$$175","require$$176","require$$177","require$$178","require$$179","require$$180","require$$181","require$$182","require$$183","require$$184","require$$185","require$$186","require$$187","require$$188","require$$189","require$$190","require$$191","require$$192","require$$193","require$$194","require$$195","require$$196","require$$197","require$$198","require$$199","require$$200","require$$201","require$$202","require$$203","require$$204","require$$205","require$$206","require$$207","require$$208","require$$209","require$$210","require$$211","require$$212","require$$213","require$$214","require$$215","require$$216","require$$217","require$$218","require$$219","require$$220","require$$221","require$$222","require$$223","require$$224","require$$225","require$$226","require$$227","require$$228","require$$229","require$$230","require$$231","require$$232","require$$233","require$$234","require$$235","require$$236","require$$237","require$$238","require$$239","require$$240","require$$241","require$$242","require$$243","require$$244","require$$245","require$$246","require$$247","require$$248","require$$249","require$$250","require$$251","require$$252","require$$253","require$$254","require$$255","require$$256","require$$257","require$$258","require$$259","require$$260","require$$261","require$$262","require$$263","require$$264"],"mappings":"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"}